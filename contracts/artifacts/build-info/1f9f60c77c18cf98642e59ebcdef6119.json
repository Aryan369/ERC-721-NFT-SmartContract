{
	"id": "1f9f60c77c18cf98642e59ebcdef6119",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ninterface INFT {\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\n}\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    address _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnedBy;\n    mapping (uint256 => uint256) public rewards;\n    uint256[] tokenStaked;\n\n    constructor (address nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(address nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnedBy[tokenId] = msg.sender;\n        tokenStaked.push(tokenId);\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnedBy[tokenId];\n        _stakedNFTCounter.decrement();\n        (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        delete rewards[tokenId];\n        IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    function claim(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        rewards[tokenId] = 0;\n    }\n\n    function calculateRewards(uint256 tokenId) public view returns(uint256){\n        return rewards[tokenId];\n    }\n\n    receive() external payable {\n        require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\");\n        uint256 sharePerEach = msg.value / _stakedNFTCounter.current();\n        uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this));\n        \n        for(uint256 i = 0; i < tokensStaked.length;){\n            rewards[tokenStaked[i]] += sharePerEach;\n            unchecked {++i;}\n        }\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_11:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_23:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_24:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_25:\n        /* \"#utility.yul\":1820:1847   */\n      tag_56\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1893:1981   */\n    tag_57:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_26:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_60\n      tag_11\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_61\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_27:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_64\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2296:2352   */\n    tag_63:\n        /* \"#utility.yul\":2370:2399   */\n      tag_65\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2618   */\n    tag_28:\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2564:2567   */\n      dup2\n        /* \"#utility.yul\":2559:2562   */\n      dup4\n        /* \"#utility.yul\":2546:2576   */\n      calldatacopy\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup4\n        /* \"#utility.yul\":2596:2599   */\n      dup4\n        /* \"#utility.yul\":2592:2608   */\n      add\n        /* \"#utility.yul\":2585:2612   */\n      mstore\n        /* \"#utility.yul\":2472:2618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3047   */\n    tag_29:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2791   */\n      tag_68\n        /* \"#utility.yul\":2742:2790   */\n      tag_69\n        /* \"#utility.yul\":2783:2789   */\n      dup5\n        /* \"#utility.yul\":2742:2790   */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2726:2791   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2717:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2852:2856   */\n      0x20\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2841:2857   */\n      add\n        /* \"#utility.yul\":2890:2893   */\n      dup5\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2879   */\n      dup5\n        /* \"#utility.yul\":2872:2888   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      gt\n        /* \"#utility.yul\":2866:2978   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2897:2976   */\n      tag_71\n      tag_22\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2866:2978   */\n    tag_70:\n        /* \"#utility.yul\":2987:3041   */\n      tag_72\n        /* \"#utility.yul\":3034:3040   */\n      dup5\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2987:3041   */\n      tag_28\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2707:3047   */\n      pop\n        /* \"#utility.yul\":2624:3047   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3404   */\n    tag_30:\n        /* \"#utility.yul\":3121:3126   */\n      0x00\n        /* \"#utility.yul\":3170:3173   */\n      dup3\n        /* \"#utility.yul\":3163:3167   */\n      0x1f\n        /* \"#utility.yul\":3155:3161   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3147:3174   */\n      slt\n        /* \"#utility.yul\":3137:3259   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_75\n      tag_21\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3137:3259   */\n    tag_74:\n        /* \"#utility.yul\":3295:3301   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      calldataload\n        /* \"#utility.yul\":3320:3398   */\n      tag_76\n        /* \"#utility.yul\":3394:3397   */\n      dup5\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3320:3398   */\n      tag_29\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3311:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3404   */\n      pop\n        /* \"#utility.yul\":3066:3404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3410:4353   */\n    tag_6:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3513:3519   */\n      dup1\n        /* \"#utility.yul\":3521:3527   */\n      0x00\n        /* \"#utility.yul\":3529:3535   */\n      dup1\n        /* \"#utility.yul\":3578:3581   */\n      0x80\n        /* \"#utility.yul\":3566:3575   */\n      dup6\n        /* \"#utility.yul\":3557:3564   */\n      dup8\n        /* \"#utility.yul\":3553:3576   */\n      sub\n        /* \"#utility.yul\":3549:3582   */\n      slt\n        /* \"#utility.yul\":3546:3666   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3585:3664   */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3546:3666   */\n    tag_78:\n        /* \"#utility.yul\":3705:3706   */\n      0x00\n        /* \"#utility.yul\":3730:3783   */\n      tag_80\n        /* \"#utility.yul\":3775:3782   */\n      dup8\n        /* \"#utility.yul\":3766:3772   */\n      dup3\n        /* \"#utility.yul\":3755:3764   */\n      dup9\n        /* \"#utility.yul\":3751:3773   */\n      add\n        /* \"#utility.yul\":3730:3783   */\n      tag_17\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3720:3783   */\n      swap5\n      pop\n        /* \"#utility.yul\":3676:3793   */\n      pop\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3858:3911   */\n      tag_81\n        /* \"#utility.yul\":3903:3910   */\n      dup8\n        /* \"#utility.yul\":3894:3900   */\n      dup3\n        /* \"#utility.yul\":3883:3892   */\n      dup9\n        /* \"#utility.yul\":3879:3901   */\n      add\n        /* \"#utility.yul\":3858:3911   */\n      tag_17\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3848:3911   */\n      swap4\n      pop\n        /* \"#utility.yul\":3803:3921   */\n      pop\n        /* \"#utility.yul\":3960:3962   */\n      0x40\n        /* \"#utility.yul\":3986:4039   */\n      tag_82\n        /* \"#utility.yul\":4031:4038   */\n      dup8\n        /* \"#utility.yul\":4022:4028   */\n      dup3\n        /* \"#utility.yul\":4011:4020   */\n      dup9\n        /* \"#utility.yul\":4007:4029   */\n      add\n        /* \"#utility.yul\":3986:4039   */\n      tag_20\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3976:4039   */\n      swap3\n      pop\n        /* \"#utility.yul\":3931:4049   */\n      pop\n        /* \"#utility.yul\":4116:4118   */\n      0x60\n        /* \"#utility.yul\":4105:4114   */\n      dup6\n        /* \"#utility.yul\":4101:4119   */\n      add\n        /* \"#utility.yul\":4088:4120   */\n      calldataload\n        /* \"#utility.yul\":4147:4165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4139:4145   */\n      dup2\n        /* \"#utility.yul\":4136:4166   */\n      gt\n        /* \"#utility.yul\":4133:4250   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":4169:4248   */\n      tag_84\n      tag_13\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4133:4250   */\n    tag_83:\n        /* \"#utility.yul\":4274:4336   */\n      tag_85\n        /* \"#utility.yul\":4328:4335   */\n      dup8\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4308:4317   */\n      dup9\n        /* \"#utility.yul\":4304:4326   */\n      add\n        /* \"#utility.yul\":4274:4336   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4264:4336   */\n      swap2\n      pop\n        /* \"#utility.yul\":4059:4346   */\n      pop\n        /* \"#utility.yul\":3410:4353   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4508   */\n    tag_31:\n        /* \"#utility.yul\":4395:4402   */\n      0x00\n        /* \"#utility.yul\":4435:4501   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4428:4433   */\n      dup3\n        /* \"#utility.yul\":4424:4502   */\n      and\n        /* \"#utility.yul\":4413:4502   */\n      swap1\n      pop\n        /* \"#utility.yul\":4359:4508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4629   */\n    tag_32:\n        /* \"#utility.yul\":4599:4622   */\n      tag_88\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4599:4622   */\n      tag_31\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4594:4597   */\n      dup3\n        /* \"#utility.yul\":4587:4623   */\n      mstore\n        /* \"#utility.yul\":4514:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4853   */\n    tag_9:\n        /* \"#utility.yul\":4726:4730   */\n      0x00\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4753:4762   */\n      dup3\n        /* \"#utility.yul\":4749:4767   */\n      add\n        /* \"#utility.yul\":4741:4767   */\n      swap1\n      pop\n        /* \"#utility.yul\":4777:4846   */\n      tag_90\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4832:4841   */\n      dup4\n        /* \"#utility.yul\":4828:4845   */\n      add\n        /* \"#utility.yul\":4819:4825   */\n      dup5\n        /* \"#utility.yul\":4777:4846   */\n      tag_32\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4635:4853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x806D47964AC7A0CD463EEA1CC4933296A2263F4F PUSH27 0x6964AAB75D8B1282C0C064736F6C63430008110033000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": 96,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4856:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:9",
														"type": ""
													}
												],
												"src": "1443:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:9"
															},
															"nodeType": "YulIf",
															"src": "1893:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:9",
														"type": ""
													}
												],
												"src": "1737:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:9",
														"type": ""
													}
												],
												"src": "2024:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:9"
															},
															"nodeType": "YulIf",
															"src": "2296:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:9",
														"type": ""
													}
												],
												"src": "2159:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2559:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2564:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:9",
														"type": ""
													}
												],
												"src": "2472:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2742:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2830:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2834:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2897:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2876:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2890:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:9"
															},
															"nodeType": "YulIf",
															"src": "2866:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2987:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2680:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2693:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2701:5:9",
														"type": ""
													}
												],
												"src": "2624:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3170:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:35:9"
															},
															"nodeType": "YulIf",
															"src": "3137:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3268:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3282:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3272:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3311:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3320:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3105:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3113:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3121:5:9",
														"type": ""
													}
												],
												"src": "3066:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3536:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3583:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3585:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3585:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3585:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3557:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:33:9"
															},
															"nodeType": "YulIf",
															"src": "3546:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3676:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3691:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3705:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3695:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3720:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3730:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3720:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3803:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3848:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3883:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3894:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3879:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3879:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3903:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3858:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3931:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3946:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3950:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3976:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4011:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4022:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4007:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4007:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4031:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3986:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3976:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4059:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4074:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4105:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4116:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4101:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4088:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4078:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4167:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4169:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4169:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4169:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4139:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4147:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4133:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4264:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4274:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4264:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3513:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3521:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3529:6:9",
														"type": ""
													}
												],
												"src": "3410:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4428:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4413:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4385:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4395:7:9",
														"type": ""
													}
												],
												"src": "4359:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4594:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4599:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4565:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4572:3:9",
														"type": ""
													}
												],
												"src": "4514:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4731:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4819:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4777:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4703:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4715:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4726:4:9",
														"type": ""
													}
												],
												"src": "4635:218:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x806D47964AC7A0CD463EEA1CC4933296A2263F4F PUSH27 0x6964AAB75D8B1282C0C064736F6C63430008110033000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:146::-;2569:6;2564:3;2559;2546:30;2610:1;2601:6;2596:3;2592:16;2585:27;2472:146;;;:::o;2624:423::-;2701:5;2726:65;2742:48;2783:6;2742:48;:::i;:::-;2726:65;:::i;:::-;2717:74;;2814:6;2807:5;2800:21;2852:4;2845:5;2841:16;2890:3;2881:6;2876:3;2872:16;2869:25;2866:112;;;2897:79;;:::i;:::-;2866:112;2987:54;3034:6;3029:3;3024;2987:54;:::i;:::-;2707:340;2624:423;;;;;:::o;3066:338::-;3121:5;3170:3;3163:4;3155:6;3151:17;3147:27;3137:122;;3178:79;;:::i;:::-;3137:122;3295:6;3282:20;3320:78;3394:3;3386:6;3379:4;3371:6;3367:17;3320:78;:::i;:::-;3311:87;;3127:277;3066:338;;;;:::o;3410:943::-;3505:6;3513;3521;3529;3578:3;3566:9;3557:7;3553:23;3549:33;3546:120;;;3585:79;;:::i;:::-;3546:120;3705:1;3730:53;3775:7;3766:6;3755:9;3751:22;3730:53;:::i;:::-;3720:63;;3676:117;3832:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3803:118;3960:2;3986:53;4031:7;4022:6;4011:9;4007:22;3986:53;:::i;:::-;3976:63;;3931:118;4116:2;4105:9;4101:18;4088:32;4147:18;4139:6;4136:30;4133:117;;;4169:79;;:::i;:::-;4133:117;4274:62;4328:7;4319:6;4308:9;4304:22;4274:62;:::i;:::-;4264:72;;4059:287;3410:943;;;;;;;:::o;4359:149::-;4395:7;4435:66;4428:5;4424:78;4413:89;;4359:149;;;:::o;4514:115::-;4599:23;4616:5;4599:23;:::i;:::-;4594:3;4587:36;4514:115;;:::o;4635:218::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4777:69;4843:1;4832:9;4828:17;4819:6;4777:69;:::i;:::-;4635:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2562,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2576,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2742,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2897,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2987,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3174,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3178,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3320,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3585,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3730,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3858,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4120,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4165,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4169,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4328,
											"end": 4335,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4317,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4274,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4599,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4777,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP8 SWAP6 DUP11 DUP16 PUSH18 0x7437DA2B4469630D1766B155A880A2132CFC GASLIMIT 0xE1 SWAP15 0xBE 0xC1 0xFC BALANCE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP8 SWAP6 DUP11 DUP16 PUSH18 0x7437DA2B4469630D1766B155A880A2132CFC GASLIMIT 0xE1 SWAP15 0xBE 0xC1 0xFC BALANCE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"INFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"INFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xf316f6a5ad874075367f618cd94d2b484ed184cec061fdc4c0d21dcb7ef059c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59bdeac4b4fddcdfe4314235f701d9af56bacffeba6e95ce7990f39516bd9493\",\"dweb:/ipfs/QmbV2gjcXpXFW5H8w6gkHMhrbtURzDRoJmneN1seeC4vq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":999:1078  constructor (address nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1813  _status */\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1059:1071  nftContract_ */\n  dup1\n    /* \"contracts/NFTStaking.sol\":1044:1056  _nftContract */\n  0x02\n  0x00\n    /* \"contracts/NFTStaking.sol\":1044:1071  _nftContract = nftContract_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":999:1078  constructor (address nftContract_) {... */\n  pop\n    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":932:1051   */\ntag_37:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_39\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd3ea4350\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf301af42\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8488cc41\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTStaking.sol\":2405:2406  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2374:2401  _stakedNFTCounter.current() */\n      tag_17\n        /* \"contracts/NFTStaking.sol\":2374:2391  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":2374:2399  _stakedNFTCounter.current */\n      tag_18\n        /* \"contracts/NFTStaking.sol\":2374:2401  _stakedNFTCounter.current() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/NFTStaking.sol\":2374:2406  _stakedNFTCounter.current() != 0 */\n      sub\n        /* \"contracts/NFTStaking.sol\":2366:2429  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/NFTStaking.sol\":2439:2459  uint256 sharePerEach */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2474:2501  _stakedNFTCounter.current() */\n      tag_22\n        /* \"contracts/NFTStaking.sol\":2474:2491  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":2474:2499  _stakedNFTCounter.current */\n      tag_18\n        /* \"contracts/NFTStaking.sol\":2474:2501  _stakedNFTCounter.current() */\n      jump\t// in\n    tag_22:\n        /* \"contracts/NFTStaking.sol\":2462:2471  msg.value */\n      callvalue\n        /* \"contracts/NFTStaking.sol\":2462:2501  msg.value / _stakedNFTCounter.current() */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/NFTStaking.sol\":2439:2501  uint256 sharePerEach = msg.value / _stakedNFTCounter.current() */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2511:2540  uint256[] memory tokensStaked */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2548:2560  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2543:2575  INFT(_nftContract).walletOfOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x438b6300\n        /* \"contracts/NFTStaking.sol\":2584:2588  this */\n      address\n        /* \"contracts/NFTStaking.sol\":2543:2590  INFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/NFTStaking.sol\":2511:2590  uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2613:2622  uint256 i */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n    tag_31:\n        /* \"contracts/NFTStaking.sol\":2632:2644  tokensStaked */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2632:2651  tokensStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":2628:2629  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2628:2651  i < tokensStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2694:2706  sharePerEach */\n      dup3\n        /* \"contracts/NFTStaking.sol\":2667:2674  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2667:2690  rewards[tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2675:2686  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2687:2688  i */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2675:2689  tokenStaked[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_34\n      jumpi\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n    tag_34:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":2667:2690  rewards[tokenStaked[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":2667:2706  rewards[tokenStaked[i]] += sharePerEach */\n      dup3\n      dup3\n      sload\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2731:2734  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n      jump(tag_31)\n    tag_32:\n      stop\n        /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnedBy */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/NFTStaking.sol\":922:965  mapping (uint256 => uint256) public rewards */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_44:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_51:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1553:1563  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1528:1563  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1528:1540  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1541:1548  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1528:1563  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/NFTStaking.sol\":1607:1619  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1620:1627  tokenId */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1600:1628  delete tokenOwnedBy[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      tag_102\n        /* \"contracts/NFTStaking.sol\":1638:1655  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1638:1665  _stakedNFTCounter.decrement */\n      tag_103\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1704:1716  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1717:1724  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1696:1731  payable(tokenOwnedBy[tokenId]).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1739:1746  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1747:1754  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      mload(0x40)\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_108\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_107)\n    tag_108:\n      0x60\n      swap2\n      pop\n    tag_107:\n      pop\n        /* \"contracts/NFTStaking.sol\":1677:1760  (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1778:1785  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1770:1786  require(success) */\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n        /* \"contracts/NFTStaking.sol\":1803:1810  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1811:1818  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1796:1819  delete rewards[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1837:1849  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1829:1867  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1876:1880  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1883:1893  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1895:1902  tokenId */\n      dup6\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1510:1910  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_55:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_97\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2013:2023  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1988:2023  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1988:2000  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2001:2008  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1988:2023  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_101\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2087:2099  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2100:2107  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2079:2114  payable(tokenOwnedBy[tokenId]).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2122:2129  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2130:2137  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      mload(0x40)\n      tag_121\n      swap1\n      tag_105\n      jump\t// in\n    tag_121:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_124\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_123)\n    tag_124:\n      0x60\n      swap2\n      pop\n    tag_123:\n      pop\n        /* \"contracts/NFTStaking.sol\":2060:2143  (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2161:2168  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2153:2169  require(success) */\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n        /* \"contracts/NFTStaking.sol\":2198:2199  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2179:2186  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2187:2194  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2179:2199  rewards[tokenId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1970:2206  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnedBy */\n    tag_62:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_71:\n        /* \"contracts/NFTStaking.sol\":1257:1269  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1249:1287  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1288:1298  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1308:1312  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1315:1322  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_134:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1357:1367  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1333:1345  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1346:1353  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnedBy[tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1377:1388  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":1394:1401  tokenId */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1377:1402  tokenStaked.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n      tag_139\n        /* \"contracts/NFTStaking.sol\":1412:1429  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1412:1439  _stakedNFTCounter.increment */\n      tag_140\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n    tag_75:\n        /* \"contracts/NFTStaking.sol\":2275:2282  uint256 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2300:2307  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2308:2315  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2293:2316  return rewards[tokenId] */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_148\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":922:965  mapping (uint256 => uint256) public rewards */\n    tag_86:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/NFTStaking.sol\":1173:1185  nftContract_ */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1158:1170  _nftContract */\n      0x02\n      0x00\n        /* \"contracts/NFTStaking.sol\":1158:1185  _nftContract = nftContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_158\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      tag_159\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1427  owner */\n      tag_66\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:176   */\n    tag_166:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:350   */\n    tag_167:\n        /* \"#utility.yul\":322:342   */\n      0x4e6f204e46547320617265207374616b65640000000000000000000000000000\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:343   */\n      mstore\n        /* \"#utility.yul\":182:350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":356:722   */\n    tag_168:\n        /* \"#utility.yul\":498:501   */\n      0x00\n        /* \"#utility.yul\":519:586   */\n      tag_217\n        /* \"#utility.yul\":583:585   */\n      0x12\n        /* \"#utility.yul\":578:581   */\n      dup4\n        /* \"#utility.yul\":519:586   */\n      tag_166\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":512:586   */\n      swap2\n      pop\n        /* \"#utility.yul\":595:688   */\n      tag_218\n        /* \"#utility.yul\":684:687   */\n      dup3\n        /* \"#utility.yul\":595:688   */\n      tag_167\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":713:715   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup3\n        /* \"#utility.yul\":704:716   */\n      add\n        /* \"#utility.yul\":697:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:1147   */\n    tag_21:\n        /* \"#utility.yul\":894:898   */\n      0x00\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup3\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":909:935   */\n      swap1\n      pop\n        /* \"#utility.yul\":981:990   */\n      dup2\n        /* \"#utility.yul\":975:979   */\n      dup2\n        /* \"#utility.yul\":971:991   */\n      sub\n        /* \"#utility.yul\":967:968   */\n      0x00\n        /* \"#utility.yul\":956:965   */\n      dup4\n        /* \"#utility.yul\":952:969   */\n      add\n        /* \"#utility.yul\":945:992   */\n      mstore\n        /* \"#utility.yul\":1009:1140   */\n      tag_220\n        /* \"#utility.yul\":1135:1139   */\n      dup2\n        /* \"#utility.yul\":1009:1140   */\n      tag_168\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1001:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":728:1147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1153:1230   */\n    tag_169:\n        /* \"#utility.yul\":1190:1197   */\n      0x00\n        /* \"#utility.yul\":1219:1224   */\n      dup2\n        /* \"#utility.yul\":1208:1224   */\n      swap1\n      pop\n        /* \"#utility.yul\":1153:1230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1416   */\n    tag_170:\n        /* \"#utility.yul\":1284:1361   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1281:1282   */\n      0x00\n        /* \"#utility.yul\":1274:1362   */\n      mstore\n        /* \"#utility.yul\":1381:1385   */\n      0x12\n        /* \"#utility.yul\":1378:1379   */\n      0x04\n        /* \"#utility.yul\":1371:1386   */\n      mstore\n        /* \"#utility.yul\":1405:1409   */\n      0x24\n        /* \"#utility.yul\":1402:1403   */\n      0x00\n        /* \"#utility.yul\":1395:1410   */\n      revert\n        /* \"#utility.yul\":1422:1602   */\n    tag_171:\n        /* \"#utility.yul\":1470:1547   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1460:1548   */\n      mstore\n        /* \"#utility.yul\":1567:1571   */\n      0x11\n        /* \"#utility.yul\":1564:1565   */\n      0x04\n        /* \"#utility.yul\":1557:1572   */\n      mstore\n        /* \"#utility.yul\":1591:1595   */\n      0x24\n        /* \"#utility.yul\":1588:1589   */\n      0x00\n        /* \"#utility.yul\":1581:1596   */\n      revert\n        /* \"#utility.yul\":1608:1793   */\n    tag_24:\n        /* \"#utility.yul\":1648:1649   */\n      0x00\n        /* \"#utility.yul\":1665:1685   */\n      tag_225\n        /* \"#utility.yul\":1683:1684   */\n      dup3\n        /* \"#utility.yul\":1665:1685   */\n      tag_169\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1660:1685   */\n      swap2\n      pop\n        /* \"#utility.yul\":1699:1719   */\n      tag_226\n        /* \"#utility.yul\":1717:1718   */\n      dup4\n        /* \"#utility.yul\":1699:1719   */\n      tag_169\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1694:1719   */\n      swap3\n      pop\n        /* \"#utility.yul\":1738:1739   */\n      dup3\n        /* \"#utility.yul\":1728:1763   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1743:1761   */\n      tag_228\n      tag_170\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1728:1763   */\n    tag_227:\n        /* \"#utility.yul\":1785:1786   */\n      dup3\n        /* \"#utility.yul\":1782:1783   */\n      dup3\n        /* \"#utility.yul\":1778:1787   */\n      div\n        /* \"#utility.yul\":1773:1787   */\n      swap1\n      pop\n        /* \"#utility.yul\":1608:1793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1799:1925   */\n    tag_172:\n        /* \"#utility.yul\":1836:1843   */\n      0x00\n        /* \"#utility.yul\":1876:1918   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1869:1874   */\n      dup3\n        /* \"#utility.yul\":1865:1919   */\n      and\n        /* \"#utility.yul\":1854:1919   */\n      swap1\n      pop\n        /* \"#utility.yul\":1799:1925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2027   */\n    tag_173:\n        /* \"#utility.yul\":1968:1975   */\n      0x00\n        /* \"#utility.yul\":1997:2021   */\n      tag_231\n        /* \"#utility.yul\":2015:2020   */\n      dup3\n        /* \"#utility.yul\":1997:2021   */\n      tag_172\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1986:2021   */\n      swap1\n      pop\n        /* \"#utility.yul\":1931:2027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2033:2151   */\n    tag_174:\n        /* \"#utility.yul\":2120:2144   */\n      tag_233\n        /* \"#utility.yul\":2138:2143   */\n      dup2\n        /* \"#utility.yul\":2120:2144   */\n      tag_173\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":2115:2118   */\n      dup3\n        /* \"#utility.yul\":2108:2145   */\n      mstore\n        /* \"#utility.yul\":2033:2151   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2379   */\n    tag_26:\n        /* \"#utility.yul\":2250:2254   */\n      0x00\n        /* \"#utility.yul\":2288:2290   */\n      0x20\n        /* \"#utility.yul\":2277:2286   */\n      dup3\n        /* \"#utility.yul\":2273:2291   */\n      add\n        /* \"#utility.yul\":2265:2291   */\n      swap1\n      pop\n        /* \"#utility.yul\":2301:2372   */\n      tag_235\n        /* \"#utility.yul\":2369:2370   */\n      0x00\n        /* \"#utility.yul\":2358:2367   */\n      dup4\n        /* \"#utility.yul\":2354:2371   */\n      add\n        /* \"#utility.yul\":2345:2351   */\n      dup5\n        /* \"#utility.yul\":2301:2372   */\n      tag_174\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":2157:2379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2460   */\n    tag_175:\n        /* \"#utility.yul\":2418:2424   */\n      0x00\n        /* \"#utility.yul\":2451:2453   */\n      0x40\n        /* \"#utility.yul\":2445:2454   */\n      mload\n        /* \"#utility.yul\":2435:2454   */\n      swap1\n      pop\n        /* \"#utility.yul\":2385:2460   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2466:2583   */\n    tag_176:\n        /* \"#utility.yul\":2575:2576   */\n      0x00\n        /* \"#utility.yul\":2572:2573   */\n      dup1\n        /* \"#utility.yul\":2565:2577   */\n      revert\n        /* \"#utility.yul\":2589:2706   */\n    tag_177:\n        /* \"#utility.yul\":2698:2699   */\n      0x00\n        /* \"#utility.yul\":2695:2696   */\n      dup1\n        /* \"#utility.yul\":2688:2700   */\n      revert\n        /* \"#utility.yul\":2712:2829   */\n    tag_178:\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2835:2937   */\n    tag_179:\n        /* \"#utility.yul\":2876:2882   */\n      0x00\n        /* \"#utility.yul\":2927:2929   */\n      0x1f\n        /* \"#utility.yul\":2923:2930   */\n      not\n        /* \"#utility.yul\":2918:2920   */\n      0x1f\n        /* \"#utility.yul\":2911:2916   */\n      dup4\n        /* \"#utility.yul\":2907:2921   */\n      add\n        /* \"#utility.yul\":2903:2931   */\n      and\n        /* \"#utility.yul\":2893:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2835:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3123   */\n    tag_180:\n        /* \"#utility.yul\":2991:3068   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2981:3069   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x41\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3112:3116   */\n      0x24\n        /* \"#utility.yul\":3109:3110   */\n      0x00\n        /* \"#utility.yul\":3102:3117   */\n      revert\n        /* \"#utility.yul\":3129:3410   */\n    tag_181:\n        /* \"#utility.yul\":3212:3239   */\n      tag_243\n        /* \"#utility.yul\":3234:3238   */\n      dup3\n        /* \"#utility.yul\":3212:3239   */\n      tag_179\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3204:3210   */\n      dup2\n        /* \"#utility.yul\":3200:3240   */\n      add\n        /* \"#utility.yul\":3342:3348   */\n      dup2\n        /* \"#utility.yul\":3330:3340   */\n      dup2\n        /* \"#utility.yul\":3327:3349   */\n      lt\n        /* \"#utility.yul\":3306:3324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3294:3304   */\n      dup3\n        /* \"#utility.yul\":3291:3325   */\n      gt\n        /* \"#utility.yul\":3288:3350   */\n      or\n        /* \"#utility.yul\":3285:3373   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":3353:3371   */\n      tag_245\n      tag_180\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3285:3373   */\n    tag_244:\n        /* \"#utility.yul\":3393:3403   */\n      dup1\n        /* \"#utility.yul\":3389:3391   */\n      0x40\n        /* \"#utility.yul\":3382:3404   */\n      mstore\n        /* \"#utility.yul\":3172:3410   */\n      pop\n        /* \"#utility.yul\":3129:3410   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3416:3545   */\n    tag_182:\n        /* \"#utility.yul\":3450:3456   */\n      0x00\n        /* \"#utility.yul\":3477:3497   */\n      tag_247\n      tag_175\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3467:3497   */\n      swap1\n      pop\n        /* \"#utility.yul\":3506:3539   */\n      tag_248\n        /* \"#utility.yul\":3534:3538   */\n      dup3\n        /* \"#utility.yul\":3526:3532   */\n      dup3\n        /* \"#utility.yul\":3506:3539   */\n      tag_181\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3416:3545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3862   */\n    tag_183:\n        /* \"#utility.yul\":3628:3632   */\n      0x00\n        /* \"#utility.yul\":3718:3736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3710:3716   */\n      dup3\n        /* \"#utility.yul\":3707:3737   */\n      gt\n        /* \"#utility.yul\":3704:3760   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3740:3758   */\n      tag_251\n      tag_180\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3704:3760   */\n    tag_250:\n        /* \"#utility.yul\":3790:3794   */\n      0x20\n        /* \"#utility.yul\":3782:3788   */\n      dup3\n        /* \"#utility.yul\":3778:3795   */\n      mul\n        /* \"#utility.yul\":3770:3795   */\n      swap1\n      pop\n        /* \"#utility.yul\":3850:3854   */\n      0x20\n        /* \"#utility.yul\":3844:3848   */\n      dup2\n        /* \"#utility.yul\":3840:3855   */\n      add\n        /* \"#utility.yul\":3832:3855   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3868:3985   */\n    tag_184:\n        /* \"#utility.yul\":3977:3978   */\n      0x00\n        /* \"#utility.yul\":3974:3975   */\n      dup1\n        /* \"#utility.yul\":3967:3979   */\n      revert\n        /* \"#utility.yul\":3991:4113   */\n    tag_185:\n        /* \"#utility.yul\":4064:4088   */\n      tag_254\n        /* \"#utility.yul\":4082:4087   */\n      dup2\n        /* \"#utility.yul\":4064:4088   */\n      tag_169\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4057:4062   */\n      dup2\n        /* \"#utility.yul\":4054:4089   */\n      eq\n        /* \"#utility.yul\":4044:4107   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4100:4101   */\n      dup1\n        /* \"#utility.yul\":4093:4105   */\n      revert\n        /* \"#utility.yul\":4044:4107   */\n    tag_255:\n        /* \"#utility.yul\":3991:4113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4119:4262   */\n    tag_186:\n        /* \"#utility.yul\":4176:4181   */\n      0x00\n        /* \"#utility.yul\":4207:4213   */\n      dup2\n        /* \"#utility.yul\":4201:4214   */\n      mload\n        /* \"#utility.yul\":4192:4214   */\n      swap1\n      pop\n        /* \"#utility.yul\":4223:4256   */\n      tag_257\n        /* \"#utility.yul\":4250:4255   */\n      dup2\n        /* \"#utility.yul\":4223:4256   */\n      tag_185\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4119:4262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4285:5017   */\n    tag_187:\n        /* \"#utility.yul\":4392:4397   */\n      0x00\n        /* \"#utility.yul\":4417:4498   */\n      tag_259\n        /* \"#utility.yul\":4433:4497   */\n      tag_260\n        /* \"#utility.yul\":4490:4496   */\n      dup5\n        /* \"#utility.yul\":4433:4497   */\n      tag_183\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4417:4498   */\n      tag_182\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4408:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4518:4523   */\n      dup1\n        /* \"#utility.yul\":4547:4553   */\n      dup4\n        /* \"#utility.yul\":4540:4545   */\n      dup3\n        /* \"#utility.yul\":4533:4554   */\n      mstore\n        /* \"#utility.yul\":4581:4585   */\n      0x20\n        /* \"#utility.yul\":4574:4579   */\n      dup3\n        /* \"#utility.yul\":4570:4586   */\n      add\n        /* \"#utility.yul\":4563:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4634:4638   */\n      0x20\n        /* \"#utility.yul\":4626:4632   */\n      dup5\n        /* \"#utility.yul\":4622:4639   */\n      mul\n        /* \"#utility.yul\":4614:4620   */\n      dup4\n        /* \"#utility.yul\":4610:4640   */\n      add\n        /* \"#utility.yul\":4663:4666   */\n      dup6\n        /* \"#utility.yul\":4655:4661   */\n      dup2\n        /* \"#utility.yul\":4652:4667   */\n      gt\n        /* \"#utility.yul\":4649:4771   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4682:4761   */\n      tag_262\n      tag_184\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4649:4771   */\n    tag_261:\n        /* \"#utility.yul\":4797:4803   */\n      dup4\n        /* \"#utility.yul\":4780:5011   */\n    tag_263:\n        /* \"#utility.yul\":4814:4820   */\n      dup2\n        /* \"#utility.yul\":4809:4812   */\n      dup2\n        /* \"#utility.yul\":4806:4821   */\n      lt\n        /* \"#utility.yul\":4780:5011   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":4889:4892   */\n      dup1\n        /* \"#utility.yul\":4918:4966   */\n      tag_266\n        /* \"#utility.yul\":4962:4965   */\n      dup9\n        /* \"#utility.yul\":4950:4960   */\n      dup3\n        /* \"#utility.yul\":4918:4966   */\n      tag_186\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4913:4916   */\n      dup5\n        /* \"#utility.yul\":4906:4967   */\n      mstore\n        /* \"#utility.yul\":4996:5000   */\n      0x20\n        /* \"#utility.yul\":4991:4994   */\n      dup5\n        /* \"#utility.yul\":4987:5001   */\n      add\n        /* \"#utility.yul\":4980:5001   */\n      swap4\n      pop\n        /* \"#utility.yul\":4856:5011   */\n      pop\n        /* \"#utility.yul\":4840:4844   */\n      0x20\n        /* \"#utility.yul\":4835:4838   */\n      dup2\n        /* \"#utility.yul\":4831:4845   */\n      add\n        /* \"#utility.yul\":4824:4845   */\n      swap1\n      pop\n        /* \"#utility.yul\":4780:5011   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":4784:4805   */\n      pop\n        /* \"#utility.yul\":4398:5017   */\n      pop\n      pop\n        /* \"#utility.yul\":4285:5017   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5040:5425   */\n    tag_188:\n        /* \"#utility.yul\":5122:5127   */\n      0x00\n        /* \"#utility.yul\":5171:5174   */\n      dup3\n        /* \"#utility.yul\":5164:5168   */\n      0x1f\n        /* \"#utility.yul\":5156:5162   */\n      dup4\n        /* \"#utility.yul\":5152:5169   */\n      add\n        /* \"#utility.yul\":5148:5175   */\n      slt\n        /* \"#utility.yul\":5138:5260   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5179:5258   */\n      tag_269\n      tag_178\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5138:5260   */\n    tag_268:\n        /* \"#utility.yul\":5289:5295   */\n      dup2\n        /* \"#utility.yul\":5283:5296   */\n      mload\n        /* \"#utility.yul\":5314:5419   */\n      tag_270\n        /* \"#utility.yul\":5415:5418   */\n      dup5\n        /* \"#utility.yul\":5407:5413   */\n      dup3\n        /* \"#utility.yul\":5400:5404   */\n      0x20\n        /* \"#utility.yul\":5392:5398   */\n      dup7\n        /* \"#utility.yul\":5388:5405   */\n      add\n        /* \"#utility.yul\":5314:5419   */\n      tag_187\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5305:5419   */\n      swap2\n      pop\n        /* \"#utility.yul\":5128:5425   */\n      pop\n        /* \"#utility.yul\":5040:5425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5431:5985   */\n    tag_30:\n        /* \"#utility.yul\":5526:5532   */\n      0x00\n        /* \"#utility.yul\":5575:5577   */\n      0x20\n        /* \"#utility.yul\":5563:5572   */\n      dup3\n        /* \"#utility.yul\":5554:5561   */\n      dup5\n        /* \"#utility.yul\":5550:5573   */\n      sub\n        /* \"#utility.yul\":5546:5578   */\n      slt\n        /* \"#utility.yul\":5543:5662   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":5581:5660   */\n      tag_273\n      tag_176\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5543:5662   */\n    tag_272:\n        /* \"#utility.yul\":5722:5723   */\n      0x00\n        /* \"#utility.yul\":5711:5720   */\n      dup3\n        /* \"#utility.yul\":5707:5724   */\n      add\n        /* \"#utility.yul\":5701:5725   */\n      mload\n        /* \"#utility.yul\":5752:5770   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5744:5750   */\n      dup2\n        /* \"#utility.yul\":5741:5771   */\n      gt\n        /* \"#utility.yul\":5738:5855   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":5774:5853   */\n      tag_275\n      tag_177\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5738:5855   */\n    tag_274:\n        /* \"#utility.yul\":5879:5968   */\n      tag_276\n        /* \"#utility.yul\":5960:5967   */\n      dup5\n        /* \"#utility.yul\":5951:5957   */\n      dup3\n        /* \"#utility.yul\":5940:5949   */\n      dup6\n        /* \"#utility.yul\":5936:5958   */\n      add\n        /* \"#utility.yul\":5879:5968   */\n      tag_188\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":5869:5968   */\n      swap2\n      pop\n        /* \"#utility.yul\":5672:5978   */\n      pop\n        /* \"#utility.yul\":5431:5985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5991:6171   */\n    tag_36:\n        /* \"#utility.yul\":6039:6116   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6036:6037   */\n      0x00\n        /* \"#utility.yul\":6029:6117   */\n      mstore\n        /* \"#utility.yul\":6136:6140   */\n      0x32\n        /* \"#utility.yul\":6133:6134   */\n      0x04\n        /* \"#utility.yul\":6126:6141   */\n      mstore\n        /* \"#utility.yul\":6160:6164   */\n      0x24\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6150:6165   */\n      revert\n        /* \"#utility.yul\":6177:6368   */\n    tag_39:\n        /* \"#utility.yul\":6217:6220   */\n      0x00\n        /* \"#utility.yul\":6236:6256   */\n      tag_279\n        /* \"#utility.yul\":6254:6255   */\n      dup3\n        /* \"#utility.yul\":6236:6256   */\n      tag_169\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6231:6256   */\n      swap2\n      pop\n        /* \"#utility.yul\":6270:6290   */\n      tag_280\n        /* \"#utility.yul\":6288:6289   */\n      dup4\n        /* \"#utility.yul\":6270:6290   */\n      tag_169\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6265:6290   */\n      swap3\n      pop\n        /* \"#utility.yul\":6313:6314   */\n      dup3\n        /* \"#utility.yul\":6310:6311   */\n      dup3\n        /* \"#utility.yul\":6306:6315   */\n      add\n        /* \"#utility.yul\":6299:6315   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6337   */\n      dup1\n        /* \"#utility.yul\":6331:6332   */\n      dup3\n        /* \"#utility.yul\":6328:6338   */\n      gt\n        /* \"#utility.yul\":6325:6361   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6341:6359   */\n      tag_282\n      tag_171\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6325:6361   */\n    tag_281:\n        /* \"#utility.yul\":6177:6368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6374:6496   */\n    tag_189:\n        /* \"#utility.yul\":6447:6471   */\n      tag_284\n        /* \"#utility.yul\":6465:6470   */\n      dup2\n        /* \"#utility.yul\":6447:6471   */\n      tag_173\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6440:6445   */\n      dup2\n        /* \"#utility.yul\":6437:6472   */\n      eq\n        /* \"#utility.yul\":6427:6490   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":6486:6487   */\n      0x00\n        /* \"#utility.yul\":6483:6484   */\n      dup1\n        /* \"#utility.yul\":6476:6488   */\n      revert\n        /* \"#utility.yul\":6427:6490   */\n    tag_285:\n        /* \"#utility.yul\":6374:6496   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6502:6641   */\n    tag_190:\n        /* \"#utility.yul\":6548:6553   */\n      0x00\n        /* \"#utility.yul\":6586:6592   */\n      dup2\n        /* \"#utility.yul\":6573:6593   */\n      calldataload\n        /* \"#utility.yul\":6564:6593   */\n      swap1\n      pop\n        /* \"#utility.yul\":6602:6635   */\n      tag_287\n        /* \"#utility.yul\":6629:6634   */\n      dup2\n        /* \"#utility.yul\":6602:6635   */\n      tag_189\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":6502:6641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6647:6786   */\n    tag_191:\n        /* \"#utility.yul\":6693:6698   */\n      0x00\n        /* \"#utility.yul\":6731:6737   */\n      dup2\n        /* \"#utility.yul\":6718:6738   */\n      calldataload\n        /* \"#utility.yul\":6709:6738   */\n      swap1\n      pop\n        /* \"#utility.yul\":6747:6780   */\n      tag_289\n        /* \"#utility.yul\":6774:6779   */\n      dup2\n        /* \"#utility.yul\":6747:6780   */\n      tag_185\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6647:6786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6792:6909   */\n    tag_192:\n        /* \"#utility.yul\":6901:6902   */\n      0x00\n        /* \"#utility.yul\":6898:6899   */\n      dup1\n        /* \"#utility.yul\":6891:6903   */\n      revert\n        /* \"#utility.yul\":6915:7222   */\n    tag_193:\n        /* \"#utility.yul\":6976:6980   */\n      0x00\n        /* \"#utility.yul\":7066:7084   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7058:7064   */\n      dup3\n        /* \"#utility.yul\":7055:7085   */\n      gt\n        /* \"#utility.yul\":7052:7108   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":7088:7106   */\n      tag_293\n      tag_180\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":7052:7108   */\n    tag_292:\n        /* \"#utility.yul\":7126:7155   */\n      tag_294\n        /* \"#utility.yul\":7148:7154   */\n      dup3\n        /* \"#utility.yul\":7126:7155   */\n      tag_179\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7118:7155   */\n      swap1\n      pop\n        /* \"#utility.yul\":7210:7214   */\n      0x20\n        /* \"#utility.yul\":7204:7208   */\n      dup2\n        /* \"#utility.yul\":7200:7215   */\n      add\n        /* \"#utility.yul\":7192:7215   */\n      swap1\n      pop\n        /* \"#utility.yul\":6915:7222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7228:7374   */\n    tag_194:\n        /* \"#utility.yul\":7325:7331   */\n      dup3\n        /* \"#utility.yul\":7320:7323   */\n      dup2\n        /* \"#utility.yul\":7315:7318   */\n      dup4\n        /* \"#utility.yul\":7302:7332   */\n      calldatacopy\n        /* \"#utility.yul\":7366:7367   */\n      0x00\n        /* \"#utility.yul\":7357:7363   */\n      dup4\n        /* \"#utility.yul\":7352:7355   */\n      dup4\n        /* \"#utility.yul\":7348:7364   */\n      add\n        /* \"#utility.yul\":7341:7368   */\n      mstore\n        /* \"#utility.yul\":7228:7374   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7380:7803   */\n    tag_195:\n        /* \"#utility.yul\":7457:7462   */\n      0x00\n        /* \"#utility.yul\":7482:7547   */\n      tag_297\n        /* \"#utility.yul\":7498:7546   */\n      tag_298\n        /* \"#utility.yul\":7539:7545   */\n      dup5\n        /* \"#utility.yul\":7498:7546   */\n      tag_193\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7482:7547   */\n      tag_182\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":7473:7547   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7576   */\n      dup3\n        /* \"#utility.yul\":7563:7568   */\n      dup2\n        /* \"#utility.yul\":7556:7577   */\n      mstore\n        /* \"#utility.yul\":7608:7612   */\n      0x20\n        /* \"#utility.yul\":7601:7606   */\n      dup2\n        /* \"#utility.yul\":7597:7613   */\n      add\n        /* \"#utility.yul\":7646:7649   */\n      dup5\n        /* \"#utility.yul\":7637:7643   */\n      dup5\n        /* \"#utility.yul\":7632:7635   */\n      dup5\n        /* \"#utility.yul\":7628:7644   */\n      add\n        /* \"#utility.yul\":7625:7650   */\n      gt\n        /* \"#utility.yul\":7622:7734   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":7653:7732   */\n      tag_300\n      tag_192\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":7622:7734   */\n    tag_299:\n        /* \"#utility.yul\":7743:7797   */\n      tag_301\n        /* \"#utility.yul\":7790:7796   */\n      dup5\n        /* \"#utility.yul\":7785:7788   */\n      dup3\n        /* \"#utility.yul\":7780:7783   */\n      dup6\n        /* \"#utility.yul\":7743:7797   */\n      tag_194\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7463:7803   */\n      pop\n        /* \"#utility.yul\":7380:7803   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7822:8160   */\n    tag_196:\n        /* \"#utility.yul\":7877:7882   */\n      0x00\n        /* \"#utility.yul\":7926:7929   */\n      dup3\n        /* \"#utility.yul\":7919:7923   */\n      0x1f\n        /* \"#utility.yul\":7911:7917   */\n      dup4\n        /* \"#utility.yul\":7907:7924   */\n      add\n        /* \"#utility.yul\":7903:7930   */\n      slt\n        /* \"#utility.yul\":7893:8015   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7934:8013   */\n      tag_304\n      tag_178\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7893:8015   */\n    tag_303:\n        /* \"#utility.yul\":8051:8057   */\n      dup2\n        /* \"#utility.yul\":8038:8058   */\n      calldataload\n        /* \"#utility.yul\":8076:8154   */\n      tag_305\n        /* \"#utility.yul\":8150:8153   */\n      dup5\n        /* \"#utility.yul\":8142:8148   */\n      dup3\n        /* \"#utility.yul\":8135:8139   */\n      0x20\n        /* \"#utility.yul\":8127:8133   */\n      dup7\n        /* \"#utility.yul\":8123:8140   */\n      add\n        /* \"#utility.yul\":8076:8154   */\n      tag_195\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8067:8154   */\n      swap2\n      pop\n        /* \"#utility.yul\":7883:8160   */\n      pop\n        /* \"#utility.yul\":7822:8160   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8166:9109   */\n    tag_43:\n        /* \"#utility.yul\":8261:8267   */\n      0x00\n        /* \"#utility.yul\":8269:8275   */\n      dup1\n        /* \"#utility.yul\":8277:8283   */\n      0x00\n        /* \"#utility.yul\":8285:8291   */\n      dup1\n        /* \"#utility.yul\":8334:8337   */\n      0x80\n        /* \"#utility.yul\":8322:8331   */\n      dup6\n        /* \"#utility.yul\":8313:8320   */\n      dup8\n        /* \"#utility.yul\":8309:8332   */\n      sub\n        /* \"#utility.yul\":8305:8338   */\n      slt\n        /* \"#utility.yul\":8302:8422   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":8341:8420   */\n      tag_308\n      tag_176\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8302:8422   */\n    tag_307:\n        /* \"#utility.yul\":8461:8462   */\n      0x00\n        /* \"#utility.yul\":8486:8539   */\n      tag_309\n        /* \"#utility.yul\":8531:8538   */\n      dup8\n        /* \"#utility.yul\":8522:8528   */\n      dup3\n        /* \"#utility.yul\":8511:8520   */\n      dup9\n        /* \"#utility.yul\":8507:8529   */\n      add\n        /* \"#utility.yul\":8486:8539   */\n      tag_190\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":8476:8539   */\n      swap5\n      pop\n        /* \"#utility.yul\":8432:8549   */\n      pop\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8614:8667   */\n      tag_310\n        /* \"#utility.yul\":8659:8666   */\n      dup8\n        /* \"#utility.yul\":8650:8656   */\n      dup3\n        /* \"#utility.yul\":8639:8648   */\n      dup9\n        /* \"#utility.yul\":8635:8657   */\n      add\n        /* \"#utility.yul\":8614:8667   */\n      tag_190\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8604:8667   */\n      swap4\n      pop\n        /* \"#utility.yul\":8559:8677   */\n      pop\n        /* \"#utility.yul\":8716:8718   */\n      0x40\n        /* \"#utility.yul\":8742:8795   */\n      tag_311\n        /* \"#utility.yul\":8787:8794   */\n      dup8\n        /* \"#utility.yul\":8778:8784   */\n      dup3\n        /* \"#utility.yul\":8767:8776   */\n      dup9\n        /* \"#utility.yul\":8763:8785   */\n      add\n        /* \"#utility.yul\":8742:8795   */\n      tag_191\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8732:8795   */\n      swap3\n      pop\n        /* \"#utility.yul\":8687:8805   */\n      pop\n        /* \"#utility.yul\":8872:8874   */\n      0x60\n        /* \"#utility.yul\":8861:8870   */\n      dup6\n        /* \"#utility.yul\":8857:8875   */\n      add\n        /* \"#utility.yul\":8844:8876   */\n      calldataload\n        /* \"#utility.yul\":8903:8921   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8895:8901   */\n      dup2\n        /* \"#utility.yul\":8892:8922   */\n      gt\n        /* \"#utility.yul\":8889:9006   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":8925:9004   */\n      tag_313\n      tag_177\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8889:9006   */\n    tag_312:\n        /* \"#utility.yul\":9030:9092   */\n      tag_314\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9075:9081   */\n      dup3\n        /* \"#utility.yul\":9064:9073   */\n      dup9\n        /* \"#utility.yul\":9060:9082   */\n      add\n        /* \"#utility.yul\":9030:9092   */\n      tag_196\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":9020:9092   */\n      swap2\n      pop\n        /* \"#utility.yul\":8815:9102   */\n      pop\n        /* \"#utility.yul\":8166:9109   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9115:9264   */\n    tag_197:\n        /* \"#utility.yul\":9151:9158   */\n      0x00\n        /* \"#utility.yul\":9191:9257   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9184:9189   */\n      dup3\n        /* \"#utility.yul\":9180:9258   */\n      and\n        /* \"#utility.yul\":9169:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":9115:9264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9270:9385   */\n    tag_198:\n        /* \"#utility.yul\":9355:9378   */\n      tag_317\n        /* \"#utility.yul\":9372:9377   */\n      dup2\n        /* \"#utility.yul\":9355:9378   */\n      tag_197\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9350:9353   */\n      dup3\n        /* \"#utility.yul\":9343:9379   */\n      mstore\n        /* \"#utility.yul\":9270:9385   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9391:9609   */\n    tag_46:\n        /* \"#utility.yul\":9482:9486   */\n      0x00\n        /* \"#utility.yul\":9520:9522   */\n      0x20\n        /* \"#utility.yul\":9509:9518   */\n      dup3\n        /* \"#utility.yul\":9505:9523   */\n      add\n        /* \"#utility.yul\":9497:9523   */\n      swap1\n      pop\n        /* \"#utility.yul\":9533:9602   */\n      tag_319\n        /* \"#utility.yul\":9599:9600   */\n      0x00\n        /* \"#utility.yul\":9588:9597   */\n      dup4\n        /* \"#utility.yul\":9584:9601   */\n      add\n        /* \"#utility.yul\":9575:9581   */\n      dup5\n        /* \"#utility.yul\":9533:9602   */\n      tag_198\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":9391:9609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9615:9944   */\n    tag_50:\n        /* \"#utility.yul\":9674:9680   */\n      0x00\n        /* \"#utility.yul\":9723:9725   */\n      0x20\n        /* \"#utility.yul\":9711:9720   */\n      dup3\n        /* \"#utility.yul\":9702:9709   */\n      dup5\n        /* \"#utility.yul\":9698:9721   */\n      sub\n        /* \"#utility.yul\":9694:9726   */\n      slt\n        /* \"#utility.yul\":9691:9810   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":9729:9808   */\n      tag_322\n      tag_176\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9691:9810   */\n    tag_321:\n        /* \"#utility.yul\":9849:9850   */\n      0x00\n        /* \"#utility.yul\":9874:9927   */\n      tag_323\n        /* \"#utility.yul\":9919:9926   */\n      dup5\n        /* \"#utility.yul\":9910:9916   */\n      dup3\n        /* \"#utility.yul\":9899:9908   */\n      dup6\n        /* \"#utility.yul\":9895:9917   */\n      add\n        /* \"#utility.yul\":9874:9927   */\n      tag_191\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9864:9927   */\n      swap2\n      pop\n        /* \"#utility.yul\":9820:9937   */\n      pop\n        /* \"#utility.yul\":9615:9944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9950:10068   */\n    tag_199:\n        /* \"#utility.yul\":10037:10061   */\n      tag_325\n        /* \"#utility.yul\":10055:10060   */\n      dup2\n        /* \"#utility.yul\":10037:10061   */\n      tag_169\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10032:10035   */\n      dup3\n        /* \"#utility.yul\":10025:10062   */\n      mstore\n        /* \"#utility.yul\":9950:10068   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10074:10296   */\n    tag_77:\n        /* \"#utility.yul\":10167:10171   */\n      0x00\n        /* \"#utility.yul\":10205:10207   */\n      0x20\n        /* \"#utility.yul\":10194:10203   */\n      dup3\n        /* \"#utility.yul\":10190:10208   */\n      add\n        /* \"#utility.yul\":10182:10208   */\n      swap1\n      pop\n        /* \"#utility.yul\":10218:10289   */\n      tag_327\n        /* \"#utility.yul\":10286:10287   */\n      0x00\n        /* \"#utility.yul\":10275:10284   */\n      dup4\n        /* \"#utility.yul\":10271:10288   */\n      add\n        /* \"#utility.yul\":10262:10268   */\n      dup5\n        /* \"#utility.yul\":10218:10289   */\n      tag_199\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10074:10296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10302:10631   */\n    tag_81:\n        /* \"#utility.yul\":10361:10367   */\n      0x00\n        /* \"#utility.yul\":10410:10412   */\n      0x20\n        /* \"#utility.yul\":10398:10407   */\n      dup3\n        /* \"#utility.yul\":10389:10396   */\n      dup5\n        /* \"#utility.yul\":10385:10408   */\n      sub\n        /* \"#utility.yul\":10381:10413   */\n      slt\n        /* \"#utility.yul\":10378:10497   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10416:10495   */\n      tag_330\n      tag_176\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10378:10497   */\n    tag_329:\n        /* \"#utility.yul\":10536:10537   */\n      0x00\n        /* \"#utility.yul\":10561:10614   */\n      tag_331\n        /* \"#utility.yul\":10606:10613   */\n      dup5\n        /* \"#utility.yul\":10597:10603   */\n      dup3\n        /* \"#utility.yul\":10586:10595   */\n      dup6\n        /* \"#utility.yul\":10582:10604   */\n      add\n        /* \"#utility.yul\":10561:10614   */\n      tag_190\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10551:10614   */\n      swap2\n      pop\n        /* \"#utility.yul\":10507:10624   */\n      pop\n        /* \"#utility.yul\":10302:10631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10637:10818   */\n    tag_200:\n        /* \"#utility.yul\":10777:10810   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10773:10774   */\n      0x00\n        /* \"#utility.yul\":10765:10771   */\n      dup3\n        /* \"#utility.yul\":10761:10775   */\n      add\n        /* \"#utility.yul\":10754:10811   */\n      mstore\n        /* \"#utility.yul\":10637:10818   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10824:11190   */\n    tag_201:\n        /* \"#utility.yul\":10966:10969   */\n      0x00\n        /* \"#utility.yul\":10987:11054   */\n      tag_334\n        /* \"#utility.yul\":11051:11053   */\n      0x1f\n        /* \"#utility.yul\":11046:11049   */\n      dup4\n        /* \"#utility.yul\":10987:11054   */\n      tag_166\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10980:11054   */\n      swap2\n      pop\n        /* \"#utility.yul\":11063:11156   */\n      tag_335\n        /* \"#utility.yul\":11152:11155   */\n      dup3\n        /* \"#utility.yul\":11063:11156   */\n      tag_200\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":11181:11183   */\n      0x20\n        /* \"#utility.yul\":11176:11179   */\n      dup3\n        /* \"#utility.yul\":11172:11184   */\n      add\n        /* \"#utility.yul\":11165:11184   */\n      swap1\n      pop\n        /* \"#utility.yul\":10824:11190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11196:11615   */\n    tag_97:\n        /* \"#utility.yul\":11362:11366   */\n      0x00\n        /* \"#utility.yul\":11400:11402   */\n      0x20\n        /* \"#utility.yul\":11389:11398   */\n      dup3\n        /* \"#utility.yul\":11385:11403   */\n      add\n        /* \"#utility.yul\":11377:11403   */\n      swap1\n      pop\n        /* \"#utility.yul\":11449:11458   */\n      dup2\n        /* \"#utility.yul\":11443:11447   */\n      dup2\n        /* \"#utility.yul\":11439:11459   */\n      sub\n        /* \"#utility.yul\":11435:11436   */\n      0x00\n        /* \"#utility.yul\":11424:11433   */\n      dup4\n        /* \"#utility.yul\":11420:11437   */\n      add\n        /* \"#utility.yul\":11413:11460   */\n      mstore\n        /* \"#utility.yul\":11477:11608   */\n      tag_337\n        /* \"#utility.yul\":11603:11607   */\n      dup2\n        /* \"#utility.yul\":11477:11608   */\n      tag_201\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11469:11608   */\n      swap1\n      pop\n        /* \"#utility.yul\":11196:11615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11621:11793   */\n    tag_202:\n        /* \"#utility.yul\":11761:11785   */\n      0x596f7520617265206e6f7420746865206f776e65722e00000000000000000000\n        /* \"#utility.yul\":11757:11758   */\n      0x00\n        /* \"#utility.yul\":11749:11755   */\n      dup3\n        /* \"#utility.yul\":11745:11759   */\n      add\n        /* \"#utility.yul\":11738:11786   */\n      mstore\n        /* \"#utility.yul\":11621:11793   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11799:12165   */\n    tag_203:\n        /* \"#utility.yul\":11941:11944   */\n      0x00\n        /* \"#utility.yul\":11962:12029   */\n      tag_340\n        /* \"#utility.yul\":12026:12028   */\n      0x16\n        /* \"#utility.yul\":12021:12024   */\n      dup4\n        /* \"#utility.yul\":11962:12029   */\n      tag_166\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11955:12029   */\n      swap2\n      pop\n        /* \"#utility.yul\":12038:12131   */\n      tag_341\n        /* \"#utility.yul\":12127:12130   */\n      dup3\n        /* \"#utility.yul\":12038:12131   */\n      tag_202\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12156:12158   */\n      0x20\n        /* \"#utility.yul\":12151:12154   */\n      dup3\n        /* \"#utility.yul\":12147:12159   */\n      add\n        /* \"#utility.yul\":12140:12159   */\n      swap1\n      pop\n        /* \"#utility.yul\":11799:12165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12171:12590   */\n    tag_101:\n        /* \"#utility.yul\":12337:12341   */\n      0x00\n        /* \"#utility.yul\":12375:12377   */\n      0x20\n        /* \"#utility.yul\":12364:12373   */\n      dup3\n        /* \"#utility.yul\":12360:12378   */\n      add\n        /* \"#utility.yul\":12352:12378   */\n      swap1\n      pop\n        /* \"#utility.yul\":12424:12433   */\n      dup2\n        /* \"#utility.yul\":12418:12422   */\n      dup2\n        /* \"#utility.yul\":12414:12434   */\n      sub\n        /* \"#utility.yul\":12410:12411   */\n      0x00\n        /* \"#utility.yul\":12399:12408   */\n      dup4\n        /* \"#utility.yul\":12395:12412   */\n      add\n        /* \"#utility.yul\":12388:12435   */\n      mstore\n        /* \"#utility.yul\":12452:12583   */\n      tag_343\n        /* \"#utility.yul\":12578:12582   */\n      dup2\n        /* \"#utility.yul\":12452:12583   */\n      tag_203\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":12444:12583   */\n      swap1\n      pop\n        /* \"#utility.yul\":12171:12590   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12596:12743   */\n    tag_204:\n        /* \"#utility.yul\":12697:12708   */\n      0x00\n        /* \"#utility.yul\":12734:12737   */\n      dup2\n        /* \"#utility.yul\":12719:12737   */\n      swap1\n      pop\n        /* \"#utility.yul\":12596:12743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12749:12863   */\n    tag_205:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12869:13267   */\n    tag_206:\n        /* \"#utility.yul\":13028:13031   */\n      0x00\n        /* \"#utility.yul\":13049:13132   */\n      tag_347\n        /* \"#utility.yul\":13130:13131   */\n      0x00\n        /* \"#utility.yul\":13125:13128   */\n      dup4\n        /* \"#utility.yul\":13049:13132   */\n      tag_204\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":13042:13132   */\n      swap2\n      pop\n        /* \"#utility.yul\":13141:13234   */\n      tag_348\n        /* \"#utility.yul\":13230:13233   */\n      dup3\n        /* \"#utility.yul\":13141:13234   */\n      tag_205\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":13259:13260   */\n      0x00\n        /* \"#utility.yul\":13254:13257   */\n      dup3\n        /* \"#utility.yul\":13250:13261   */\n      add\n        /* \"#utility.yul\":13243:13261   */\n      swap1\n      pop\n        /* \"#utility.yul\":12869:13267   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13273:13652   */\n    tag_105:\n        /* \"#utility.yul\":13457:13460   */\n      0x00\n        /* \"#utility.yul\":13479:13626   */\n      tag_350\n        /* \"#utility.yul\":13622:13625   */\n      dup3\n        /* \"#utility.yul\":13479:13626   */\n      tag_206\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13472:13626   */\n      swap2\n      pop\n        /* \"#utility.yul\":13643:13646   */\n      dup2\n        /* \"#utility.yul\":13636:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13273:13652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13658:14100   */\n    tag_111:\n        /* \"#utility.yul\":13807:13811   */\n      0x00\n        /* \"#utility.yul\":13845:13847   */\n      0x60\n        /* \"#utility.yul\":13834:13843   */\n      dup3\n        /* \"#utility.yul\":13830:13848   */\n      add\n        /* \"#utility.yul\":13822:13848   */\n      swap1\n      pop\n        /* \"#utility.yul\":13858:13929   */\n      tag_352\n        /* \"#utility.yul\":13926:13927   */\n      0x00\n        /* \"#utility.yul\":13915:13924   */\n      dup4\n        /* \"#utility.yul\":13911:13928   */\n      add\n        /* \"#utility.yul\":13902:13908   */\n      dup7\n        /* \"#utility.yul\":13858:13929   */\n      tag_174\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":13939:14011   */\n      tag_353\n        /* \"#utility.yul\":14007:14009   */\n      0x20\n        /* \"#utility.yul\":13996:14005   */\n      dup4\n        /* \"#utility.yul\":13992:14010   */\n      add\n        /* \"#utility.yul\":13983:13989   */\n      dup6\n        /* \"#utility.yul\":13939:14011   */\n      tag_174\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":14021:14093   */\n      tag_354\n        /* \"#utility.yul\":14089:14091   */\n      0x40\n        /* \"#utility.yul\":14078:14087   */\n      dup4\n        /* \"#utility.yul\":14074:14092   */\n      add\n        /* \"#utility.yul\":14065:14071   */\n      dup5\n        /* \"#utility.yul\":14021:14093   */\n      tag_199\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":13658:14100   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14106:14331   */\n    tag_207:\n        /* \"#utility.yul\":14246:14280   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14242:14243   */\n      0x00\n        /* \"#utility.yul\":14234:14240   */\n      dup3\n        /* \"#utility.yul\":14230:14244   */\n      add\n        /* \"#utility.yul\":14223:14281   */\n      mstore\n        /* \"#utility.yul\":14315:14323   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14310:14312   */\n      0x20\n        /* \"#utility.yul\":14302:14308   */\n      dup3\n        /* \"#utility.yul\":14298:14313   */\n      add\n        /* \"#utility.yul\":14291:14324   */\n      mstore\n        /* \"#utility.yul\":14106:14331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14337:14703   */\n    tag_208:\n        /* \"#utility.yul\":14479:14482   */\n      0x00\n        /* \"#utility.yul\":14500:14567   */\n      tag_357\n        /* \"#utility.yul\":14564:14566   */\n      0x26\n        /* \"#utility.yul\":14559:14562   */\n      dup4\n        /* \"#utility.yul\":14500:14567   */\n      tag_166\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":14493:14567   */\n      swap2\n      pop\n        /* \"#utility.yul\":14576:14669   */\n      tag_358\n        /* \"#utility.yul\":14665:14668   */\n      dup3\n        /* \"#utility.yul\":14576:14669   */\n      tag_207\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":14694:14696   */\n      0x40\n        /* \"#utility.yul\":14689:14692   */\n      dup3\n        /* \"#utility.yul\":14685:14697   */\n      add\n        /* \"#utility.yul\":14678:14697   */\n      swap1\n      pop\n        /* \"#utility.yul\":14337:14703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14709:15128   */\n    tag_147:\n        /* \"#utility.yul\":14875:14879   */\n      0x00\n        /* \"#utility.yul\":14913:14915   */\n      0x20\n        /* \"#utility.yul\":14902:14911   */\n      dup3\n        /* \"#utility.yul\":14898:14916   */\n      add\n        /* \"#utility.yul\":14890:14916   */\n      swap1\n      pop\n        /* \"#utility.yul\":14962:14971   */\n      dup2\n        /* \"#utility.yul\":14956:14960   */\n      dup2\n        /* \"#utility.yul\":14952:14972   */\n      sub\n        /* \"#utility.yul\":14948:14949   */\n      0x00\n        /* \"#utility.yul\":14937:14946   */\n      dup4\n        /* \"#utility.yul\":14933:14950   */\n      add\n        /* \"#utility.yul\":14926:14973   */\n      mstore\n        /* \"#utility.yul\":14990:15121   */\n      tag_360\n        /* \"#utility.yul\":15116:15120   */\n      dup2\n        /* \"#utility.yul\":14990:15121   */\n      tag_208\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":14982:15121   */\n      swap1\n      pop\n        /* \"#utility.yul\":14709:15128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15134:15311   */\n    tag_209:\n        /* \"#utility.yul\":15274:15303   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":15270:15271   */\n      0x00\n        /* \"#utility.yul\":15262:15268   */\n      dup3\n        /* \"#utility.yul\":15258:15272   */\n      add\n        /* \"#utility.yul\":15251:15304   */\n      mstore\n        /* \"#utility.yul\":15134:15311   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15317:15683   */\n    tag_210:\n        /* \"#utility.yul\":15459:15462   */\n      0x00\n        /* \"#utility.yul\":15480:15547   */\n      tag_363\n        /* \"#utility.yul\":15544:15546   */\n      0x1b\n        /* \"#utility.yul\":15539:15542   */\n      dup4\n        /* \"#utility.yul\":15480:15547   */\n      tag_166\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":15473:15547   */\n      swap2\n      pop\n        /* \"#utility.yul\":15556:15649   */\n      tag_364\n        /* \"#utility.yul\":15645:15648   */\n      dup3\n        /* \"#utility.yul\":15556:15649   */\n      tag_209\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":15674:15676   */\n      0x20\n        /* \"#utility.yul\":15669:15672   */\n      dup3\n        /* \"#utility.yul\":15665:15677   */\n      add\n        /* \"#utility.yul\":15658:15677   */\n      swap1\n      pop\n        /* \"#utility.yul\":15317:15683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15689:16108   */\n    tag_155:\n        /* \"#utility.yul\":15855:15859   */\n      0x00\n        /* \"#utility.yul\":15893:15895   */\n      0x20\n        /* \"#utility.yul\":15882:15891   */\n      dup3\n        /* \"#utility.yul\":15878:15896   */\n      add\n        /* \"#utility.yul\":15870:15896   */\n      swap1\n      pop\n        /* \"#utility.yul\":15942:15951   */\n      dup2\n        /* \"#utility.yul\":15936:15940   */\n      dup2\n        /* \"#utility.yul\":15932:15952   */\n      sub\n        /* \"#utility.yul\":15928:15929   */\n      0x00\n        /* \"#utility.yul\":15917:15926   */\n      dup4\n        /* \"#utility.yul\":15913:15930   */\n      add\n        /* \"#utility.yul\":15906:15953   */\n      mstore\n        /* \"#utility.yul\":15970:16101   */\n      tag_366\n        /* \"#utility.yul\":16096:16100   */\n      dup2\n        /* \"#utility.yul\":15970:16101   */\n      tag_210\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":15962:16101   */\n      swap1\n      pop\n        /* \"#utility.yul\":15689:16108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16114:16296   */\n    tag_211:\n        /* \"#utility.yul\":16254:16288   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16250:16251   */\n      0x00\n        /* \"#utility.yul\":16242:16248   */\n      dup3\n        /* \"#utility.yul\":16238:16252   */\n      add\n        /* \"#utility.yul\":16231:16289   */\n      mstore\n        /* \"#utility.yul\":16114:16296   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16302:16668   */\n    tag_212:\n        /* \"#utility.yul\":16444:16447   */\n      0x00\n        /* \"#utility.yul\":16465:16532   */\n      tag_369\n        /* \"#utility.yul\":16529:16531   */\n      0x20\n        /* \"#utility.yul\":16524:16527   */\n      dup4\n        /* \"#utility.yul\":16465:16532   */\n      tag_166\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":16458:16532   */\n      swap2\n      pop\n        /* \"#utility.yul\":16541:16634   */\n      tag_370\n        /* \"#utility.yul\":16630:16633   */\n      dup3\n        /* \"#utility.yul\":16541:16634   */\n      tag_211\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":16659:16661   */\n      0x20\n        /* \"#utility.yul\":16654:16657   */\n      dup3\n        /* \"#utility.yul\":16650:16662   */\n      add\n        /* \"#utility.yul\":16643:16662   */\n      swap1\n      pop\n        /* \"#utility.yul\":16302:16668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16674:17093   */\n    tag_162:\n        /* \"#utility.yul\":16840:16844   */\n      0x00\n        /* \"#utility.yul\":16878:16880   */\n      0x20\n        /* \"#utility.yul\":16867:16876   */\n      dup3\n        /* \"#utility.yul\":16863:16881   */\n      add\n        /* \"#utility.yul\":16855:16881   */\n      swap1\n      pop\n        /* \"#utility.yul\":16927:16936   */\n      dup2\n        /* \"#utility.yul\":16921:16925   */\n      dup2\n        /* \"#utility.yul\":16917:16937   */\n      sub\n        /* \"#utility.yul\":16913:16914   */\n      0x00\n        /* \"#utility.yul\":16902:16911   */\n      dup4\n        /* \"#utility.yul\":16898:16915   */\n      add\n        /* \"#utility.yul\":16891:16938   */\n      mstore\n        /* \"#utility.yul\":16955:17086   */\n      tag_372\n        /* \"#utility.yul\":17081:17085   */\n      dup2\n        /* \"#utility.yul\":16955:17086   */\n      tag_212\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":16947:17086   */\n      swap1\n      pop\n        /* \"#utility.yul\":16674:17093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f782c976aff4b1241a8eb5dde63152623f5232f5a577d674ce27c912897bc1b564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 166,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 174,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200180b3803806200180b8339818101604052810190620000379190620001dc565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f462000172565b5b60006200020584828501620001c5565b91505092915050565b6115ed806200021e6000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b146102f8578063a694fc3a14610323578063d3ea43501461034c578063f2fde38b14610389578063f301af42146103b2578063fd71c650146103ef57610210565b8063150b7a02146102155780632e17de7814610252578063379607f51461027b578063715018a6146102a45780638488cc41146102bb57610210565b366102105760006100b16003610418565b036100f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e890610d4b565b60405180910390fd5b60006100fd6003610418565b346101089190610dd3565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101679190610e45565b600060405180830381865afa158015610184573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101ad9190610ff9565b905060005b815181101561020e578260056000600684815481106101d4576101d3611042565b5b9060005260206000200154815260200190815260200160002060008282546101fc9190611071565b925050819055508060010190506101b2565b005b600080fd5b34801561022157600080fd5b5061023c6004803603810190610237919061119b565b610426565b6040516102499190611259565b60405180910390f35b34801561025e57600080fd5b5061027960048036038101906102749190611274565b61043a565b005b34801561028757600080fd5b506102a2600480360381019061029d9190611274565b6106d7565b005b3480156102b057600080fd5b506102b96108a5565b005b3480156102c757600080fd5b506102e260048036038101906102dd9190611274565b6108b9565b6040516102ef9190610e45565b60405180910390f35b34801561030457600080fd5b5061030d6108ec565b60405161031a9190610e45565b60405180910390f35b34801561032f57600080fd5b5061034a60048036038101906103459190611274565b610915565b005b34801561035857600080fd5b50610373600480360381019061036e9190611274565b610a2e565b60405161038091906112b0565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab91906112cb565b610a4b565b005b3480156103be57600080fd5b506103d960048036038101906103d49190611274565b610ace565b6040516103e691906112b0565b60405180910390f35b3480156103fb57600080fd5b50610416600480360381019061041191906112cb565b610ae6565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b60026001540361047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047690611344565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f906113b0565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556105686003610b32565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660056000848152602001908152602001600020546040516105d490611401565b60006040518083038185875af1925050503d8060008114610611576040519150601f19603f3d011682016040523d82523d6000602084013e610616565b606091505b505090508061062457600080fd5b6005600083815260200190815260200160002060009055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b815260040161069a93929190611416565b600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506001808190555050565b60026001540361071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390611344565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc906113b0565b60405180910390fd5b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600560008481526020019081526020016000205460405161083190611401565b60006040518083038185875af1925050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b505090508061088157600080fd5b60006005600084815260200190815260200160002081905550506001808190555050565b6108ad610b8e565b6108b76000610c0c565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161097493929190611416565b600060405180830381600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006819080600181540180825580915050600190039060005260206000200160009091909190915055610a2b6003610cd0565b50565b600060056000838152602001908152602001600020549050919050565b610a53610b8e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab9906114bf565b60405180910390fd5b610acb81610c0c565b50565b60056020528060005260406000206000915090505481565b610aee610b8e565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160000154905060008111610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b759061152b565b60405180910390fd5b6001810382600001819055505050565b610b96610ce6565b73ffffffffffffffffffffffffffffffffffffffff16610bb46108ec565b73ffffffffffffffffffffffffffffffffffffffff1614610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0190611597565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600082825260208201905092915050565b7f4e6f204e46547320617265207374616b65640000000000000000000000000000600082015250565b6000610d35601283610cee565b9150610d4082610cff565b602082019050919050565b60006020820190508181036000830152610d6481610d28565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dde82610d6b565b9150610de983610d6b565b925082610df957610df8610d75565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2f82610e04565b9050919050565b610e3f81610e24565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ec282610e79565b810181811067ffffffffffffffff82111715610ee157610ee0610e8a565b5b80604052505050565b6000610ef4610e60565b9050610f008282610eb9565b919050565b600067ffffffffffffffff821115610f2057610f1f610e8a565b5b602082029050602081019050919050565b600080fd5b610f3f81610d6b565b8114610f4a57600080fd5b50565b600081519050610f5c81610f36565b92915050565b6000610f75610f7084610f05565b610eea565b90508083825260208201905060208402830185811115610f9857610f97610f31565b5b835b81811015610fc15780610fad8882610f4d565b845260208401935050602081019050610f9a565b5050509392505050565b600082601f830112610fe057610fdf610e74565b5b8151610ff0848260208601610f62565b91505092915050565b60006020828403121561100f5761100e610e6a565b5b600082015167ffffffffffffffff81111561102d5761102c610e6f565b5b61103984828501610fcb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061107c82610d6b565b915061108783610d6b565b925082820190508082111561109f5761109e610da4565b5b92915050565b6110ae81610e24565b81146110b957600080fd5b50565b6000813590506110cb816110a5565b92915050565b6000813590506110e081610f36565b92915050565b600080fd5b600067ffffffffffffffff82111561110657611105610e8a565b5b61110f82610e79565b9050602081019050919050565b82818337600083830152505050565b600061113e611139846110eb565b610eea565b90508281526020810184848401111561115a576111596110e6565b5b61116584828561111c565b509392505050565b600082601f83011261118257611181610e74565b5b813561119284826020860161112b565b91505092915050565b600080600080608085870312156111b5576111b4610e6a565b5b60006111c3878288016110bc565b94505060206111d4878288016110bc565b93505060406111e5878288016110d1565b925050606085013567ffffffffffffffff81111561120657611205610e6f565b5b6112128782880161116d565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112538161121e565b82525050565b600060208201905061126e600083018461124a565b92915050565b60006020828403121561128a57611289610e6a565b5b6000611298848285016110d1565b91505092915050565b6112aa81610d6b565b82525050565b60006020820190506112c560008301846112a1565b92915050565b6000602082840312156112e1576112e0610e6a565b5b60006112ef848285016110bc565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061132e601f83610cee565b9150611339826112f8565b602082019050919050565b6000602082019050818103600083015261135d81611321565b9050919050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b600061139a601683610cee565b91506113a582611364565b602082019050919050565b600060208201905081810360008301526113c98161138d565b9050919050565b600081905092915050565b50565b60006113eb6000836113d0565b91506113f6826113db565b600082019050919050565b600061140c826113de565b9150819050919050565b600060608201905061142b6000830186610e36565b6114386020830185610e36565b61144560408301846112a1565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114a9602683610cee565b91506114b48261144d565b604082019050919050565b600060208201905081810360008301526114d88161149c565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000611515601b83610cee565b9150611520826114df565b602082019050919050565b6000602082019050818103600083015261154481611508565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611581602083610cee565b915061158c8261154b565b602082019050919050565b600060208201905081810360008301526115b081611574565b905091905056fea2646970667358221220f782c976aff4b1241a8eb5dde63152623f5232f5a577d674ce27c912897bc1b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x180B CODESIZE SUB DUP1 PUSH3 0x180B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1DC JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x20E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A4 DUP3 PUSH3 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B6 DUP2 PUSH3 0x197 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x172 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x205 DUP5 DUP3 DUP6 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15ED DUP1 PUSH3 0x21E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x3EF JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x2BB JUMPI PUSH2 0x210 JUMP JUMPDEST CALLDATASIZE PUSH2 0x210 JUMPI PUSH1 0x0 PUSH2 0xB1 PUSH1 0x3 PUSH2 0x418 JUMP JUMPDEST SUB PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD PUSH1 0x3 PUSH2 0x418 JUMP JUMPDEST CALLVALUE PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x1042 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x568 PUSH1 0x3 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x616 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BC SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x831 SWAP1 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x873 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x8B7 PUSH1 0x0 PUSH2 0xC0C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0xA2B PUSH1 0x3 PUSH2 0xCD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA53 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB9 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACB DUP2 PUSH2 0xC0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAEE PUSH2 0xB8E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xCE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB4 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC01 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E46547320617265207374616B65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD35 PUSH1 0x12 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0xD40 DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD64 DUP2 PUSH2 0xD28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDDE DUP3 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xD75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP3 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xEC2 DUP3 PUSH2 0xE79 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xE8A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP PUSH2 0xF00 DUP3 DUP3 PUSH2 0xEB9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0xE8A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3F DUP2 PUSH2 0xD6B JUMP JUMPDEST DUP2 EQ PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5C DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF75 PUSH2 0xF70 DUP5 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xF31 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFC1 JUMPI DUP1 PUSH2 0xFAD DUP9 DUP3 PUSH2 0xF4D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFE0 JUMPI PUSH2 0xFDF PUSH2 0xE74 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xFF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100F JUMPI PUSH2 0x100E PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102D JUMPI PUSH2 0x102C PUSH2 0xE6F JUMP JUMPDEST JUMPDEST PUSH2 0x1039 DUP5 DUP3 DUP6 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x107C DUP3 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0xDA4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10AE DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CB DUP2 PUSH2 0x10A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E0 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xE8A JUMP JUMPDEST JUMPDEST PUSH2 0x110F DUP3 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH2 0x1139 DUP5 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1165 DUP5 DUP3 DUP6 PUSH2 0x111C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xE74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1192 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C3 DUP8 DUP3 DUP9 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x11D4 DUP8 DUP3 DUP9 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x11E5 DUP8 DUP3 DUP9 ADD PUSH2 0x10D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0xE6F JUMP JUMPDEST JUMPDEST PUSH2 0x1212 DUP8 DUP3 DUP9 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1253 DUP2 PUSH2 0x121E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x126E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x124A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128A JUMPI PUSH2 0x1289 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1298 DUP5 DUP3 DUP6 ADD PUSH2 0x10D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0xD6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12EF DUP5 DUP3 DUP6 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH1 0x1F DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1339 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139A PUSH1 0x16 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x13A5 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C9 DUP2 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EB PUSH1 0x0 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F6 DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP3 PUSH2 0x13DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x142B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1445 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 PUSH1 0x26 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x14B4 DUP3 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D8 DUP2 PUSH2 0x149C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH1 0x1B DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1520 DUP3 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1544 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 PUSH1 0x20 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B0 DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 DUP3 0xC9 PUSH23 0xAFF4B1241A8EB5DDE63152623F5232F5A577D674CE27C9 SLT DUP10 PUSH28 0xC1B564736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "492:2262:8:-:0;;;999:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;1059:12:8;1044;;:27;;;;;;;;;;;;;;;;;;999:79;492:2262;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;492:2262:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2958,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 3302,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 3084,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRewards_666": {
									"entryPoint": 2606,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_654": {
									"entryPoint": 1751,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_353": {
									"entryPoint": 1048,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_395": {
									"entryPoint": 2866,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_367": {
									"entryPoint": 3280,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": 1062,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2284,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2213,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_482": {
									"entryPoint": 2766,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_507": {
									"entryPoint": 2790,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_544": {
									"entryPoint": 2325,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnedBy_478": {
									"entryPoint": 2233,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2635,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_610": {
									"entryPoint": 1082,
									"id": 610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 5343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 5451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17096:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:9",
														"type": ""
													}
												],
												"src": "7:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:9"
																	},
																	{
																		"hexValue": "4e6f204e46547320617265207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:20:9",
																		"type": "",
																		"value": "No NFTs are staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:44:9"
														}
													]
												},
												"name": "store_literal_in_memory_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"src": "182:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "502:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "512:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "578:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "583:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "519:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "512:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "684:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																	"nodeType": "YulIdentifier",
																	"src": "595:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "595:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "595:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "697:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "713:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "704:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "697:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "490:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "498:3:9",
														"type": ""
													}
												],
												"src": "356:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "899:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "921:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "917:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "956:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "967:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "952:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "975:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "981:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "945:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1001:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1135:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1009:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1001:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "879:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "894:4:9",
														"type": ""
													}
												],
												"src": "728:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1219:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1208:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1180:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1190:7:9",
														"type": ""
													}
												],
												"src": "1153:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1264:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1284:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1274:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1378:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1381:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1371:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1371:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1236:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1470:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1460:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1588:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1581:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1581:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1581:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1422:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1660:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1683:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1665:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1660:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1694:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1717:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1699:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1694:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1741:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1743:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1743:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1738:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1731:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:9:9"
															},
															"nodeType": "YulIf",
															"src": "1728:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1773:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1782:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1785:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1778:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1773:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1639:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1642:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1648:1:9",
														"type": ""
													}
												],
												"src": "1608:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1844:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1854:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1869:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1854:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1826:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1836:7:9",
														"type": ""
													}
												],
												"src": "1799:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1976:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1986:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2015:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1997:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1986:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1958:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1968:7:9",
														"type": ""
													}
												],
												"src": "1931:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2115:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2138:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2120:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2120:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2108:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2108:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2086:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2093:3:9",
														"type": ""
													}
												],
												"src": "2033:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2255:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2265:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2277:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2288:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2273:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2265:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2345:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2369:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2354:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2301:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2301:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2227:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2239:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2250:4:9",
														"type": ""
													}
												],
												"src": "2157:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2425:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2435:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2445:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2445:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2435:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2418:6:9",
														"type": ""
													}
												],
												"src": "2385:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2565:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2466:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2678:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2695:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2698:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2688:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2688:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2589:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2801:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2818:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2821:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2811:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2712:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2893:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2911:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2918:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2907:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2907:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2927:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2923:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2923:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2903:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2866:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2876:6:9",
														"type": ""
													}
												],
												"src": "2835:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2971:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2988:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2991:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2981:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3085:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3078:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3109:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3102:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3102:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2943:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3172:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3182:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3234:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3212:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3200:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3186:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3351:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3353:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3353:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3353:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3294:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3306:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3291:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3291:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3330:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3342:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3327:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3288:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3288:62:9"
															},
															"nodeType": "YulIf",
															"src": "3285:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3393:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3382:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3382:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3158:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3166:4:9",
														"type": ""
													}
												],
												"src": "3129:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3457:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3467:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "3477:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3526:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3534:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3506:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3506:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3441:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3450:6:9",
														"type": ""
													}
												],
												"src": "3416:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3633:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3738:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3740:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3740:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3740:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3718:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3707:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3707:30:9"
															},
															"nodeType": "YulIf",
															"src": "3704:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3770:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3782:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3790:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3770:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3832:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3844:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3840:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3832:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3617:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3628:4:9",
														"type": ""
													}
												],
												"src": "3551:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3977:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3868:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4091:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4100:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4103:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4093:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4093:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4093:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4057:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4082:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4064:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4064:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4054:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:43:9"
															},
															"nodeType": "YulIf",
															"src": "4044:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4027:5:9",
														"type": ""
													}
												],
												"src": "3991:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4182:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4192:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4207:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4201:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4192:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4250:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4223:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4223:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4223:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4160:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4168:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4176:5:9",
														"type": ""
													}
												],
												"src": "4119:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4398:619:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4408:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4490:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4433:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4433:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4417:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4408:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4507:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4518:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4511:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4540:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4547:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4533:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4533:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4563:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4574:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4581:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4570:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4570:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4596:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4614:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4626:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4634:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4622:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4610:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4610:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4600:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4668:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4682:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4682:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4682:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4655:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4663:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4652:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:15:9"
															},
															"nodeType": "YulIf",
															"src": "4649:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4856:155:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4871:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4875:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4913:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4950:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4962:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "4918:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4918:48:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4906:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4906:61:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4906:61:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4980:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4991:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4996:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4987:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4987:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4980:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4809:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4806:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4822:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4824:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4840:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4831:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4831:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4824:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4784:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4786:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4797:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4790:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4780:231:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4368:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4376:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4384:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4392:5:9",
														"type": ""
													}
												],
												"src": "4285:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5128:297:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5177:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5179:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5179:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5179:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5156:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5164:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5152:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5152:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5171:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5148:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5141:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5141:35:9"
															},
															"nodeType": "YulIf",
															"src": "5138:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5269:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5289:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5283:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5273:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5305:114:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5392:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5388:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5388:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5407:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5415:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5314:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:105:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5305:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5106:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5114:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5122:5:9",
														"type": ""
													}
												],
												"src": "5040:385:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5533:452:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5579:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5581:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5581:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5581:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5554:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5563:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5550:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5550:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5575:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5546:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:32:9"
															},
															"nodeType": "YulIf",
															"src": "5543:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5672:306:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5687:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5711:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5722:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5707:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5707:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5701:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5701:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5691:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5772:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5774:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5774:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5774:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5744:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5752:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5741:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5741:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "5738:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5869:99:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5940:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5951:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5936:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5936:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5960:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5879:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5879:89:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5869:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5503:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5514:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5526:6:9",
														"type": ""
													}
												],
												"src": "5431:554:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6019:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6036:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6039:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6029:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6029:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6133:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6136:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6126:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6126:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6160:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6150:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5991:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6221:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6231:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6254:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6236:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6231:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6265:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6288:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6270:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6270:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6265:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6299:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6310:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6313:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6306:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6299:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6339:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6341:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6341:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6341:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6331:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6334:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6328:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:10:9"
															},
															"nodeType": "YulIf",
															"src": "6325:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6208:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6211:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6217:3:9",
														"type": ""
													}
												],
												"src": "6177:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6417:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6474:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6483:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6486:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6476:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6440:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6465:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6447:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6447:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6437:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6437:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6430:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:43:9"
															},
															"nodeType": "YulIf",
															"src": "6427:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6410:5:9",
														"type": ""
													}
												],
												"src": "6374:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6554:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6564:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6586:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6573:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6573:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6564:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6629:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6602:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6602:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6532:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6548:5:9",
														"type": ""
													}
												],
												"src": "6502:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6699:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6709:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6731:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6718:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6718:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6709:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6774:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6747:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6747:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6747:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6677:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6685:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6693:5:9",
														"type": ""
													}
												],
												"src": "6647:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6881:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6898:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6901:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6891:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6891:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6792:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6981:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7086:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7088:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7088:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7088:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7058:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7066:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:30:9"
															},
															"nodeType": "YulIf",
															"src": "7052:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7118:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7148:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7126:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7126:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7118:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7192:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7204:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7210:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7200:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7192:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6965:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6976:4:9",
														"type": ""
													}
												],
												"src": "6915:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7292:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7315:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7320:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7325:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7302:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7302:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7352:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7357:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7348:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7366:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7341:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7341:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7341:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7274:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7279:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7284:6:9",
														"type": ""
													}
												],
												"src": "7228:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7463:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7473:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7539:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7498:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7498:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7482:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7473:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7563:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7556:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7586:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7601:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7608:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7597:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7597:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7590:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7651:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7653:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7653:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7653:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7632:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7637:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7646:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7625:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:25:9"
															},
															"nodeType": "YulIf",
															"src": "7622:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7780:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7785:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7790:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7743:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7436:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7441:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7449:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7457:5:9",
														"type": ""
													}
												],
												"src": "7380:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7883:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7932:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7934:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7934:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7934:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7911:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7919:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7907:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7907:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7926:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:35:9"
															},
															"nodeType": "YulIf",
															"src": "7893:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8024:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8051:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8038:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8028:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8067:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8135:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8123:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8142:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8150:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8076:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8067:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7861:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7869:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7877:5:9",
														"type": ""
													}
												],
												"src": "7822:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8292:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8339:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8341:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8341:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8341:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8313:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8322:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8334:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8305:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8305:33:9"
															},
															"nodeType": "YulIf",
															"src": "8302:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8432:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8447:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8461:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8451:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8476:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8511:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8522:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8507:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8507:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8531:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8486:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8486:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8476:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8559:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8574:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8578:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8604:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8639:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8650:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8635:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8635:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8659:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8614:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8614:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8604:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8687:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8702:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8716:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8706:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8732:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8767:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8778:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8763:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8787:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8742:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8742:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8732:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8815:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8830:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8861:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8872:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8857:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8857:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8844:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8844:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8834:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8923:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8925:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8925:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8925:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8895:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8903:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8892:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8892:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8889:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9020:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9064:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9075:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9060:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9060:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9030:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9030:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9020:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8238:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8249:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8261:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8269:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8277:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8285:6:9",
														"type": ""
													}
												],
												"src": "8166:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9159:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9169:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9184:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9191:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9180:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9180:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9169:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9141:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9151:7:9",
														"type": ""
													}
												],
												"src": "9115:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9333:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9350:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9372:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "9355:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9355:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9343:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9343:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9321:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9328:3:9",
														"type": ""
													}
												],
												"src": "9270:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9487:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9497:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9509:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9520:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9505:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9505:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9497:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9575:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9588:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9599:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9584:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9584:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9533:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9533:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9459:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9471:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9482:4:9",
														"type": ""
													}
												],
												"src": "9391:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9681:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9727:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9729:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9729:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9729:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9702:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9698:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9698:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9723:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:32:9"
															},
															"nodeType": "YulIf",
															"src": "9691:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9820:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9835:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9849:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9839:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9864:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9899:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9910:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9895:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9895:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9919:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9874:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9874:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9864:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9651:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9662:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9674:6:9",
														"type": ""
													}
												],
												"src": "9615:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10015:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10032:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10055:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10037:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10037:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10025:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10025:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10003:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10010:3:9",
														"type": ""
													}
												],
												"src": "9950:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10172:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10182:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10194:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10190:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10182:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10262:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10275:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10286:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10271:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10271:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10218:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10218:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10218:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10144:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10156:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10167:4:9",
														"type": ""
													}
												],
												"src": "10074:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10368:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10414:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10416:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10416:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10416:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10389:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10398:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10385:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10410:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10381:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10381:32:9"
															},
															"nodeType": "YulIf",
															"src": "10378:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "10507:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10522:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10536:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10526:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10551:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10586:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10597:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10582:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10582:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10606:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10561:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10561:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10551:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10338:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10349:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10361:6:9",
														"type": ""
													}
												],
												"src": "10302:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10743:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10765:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10773:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10761:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10777:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10754:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10754:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10735:6:9",
														"type": ""
													}
												],
												"src": "10637:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10970:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10980:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11046:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11051:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10987:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10980:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11152:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "11063:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11063:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11063:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11165:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11176:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11172:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11172:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11165:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10958:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10966:3:9",
														"type": ""
													}
												],
												"src": "10824:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11367:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11377:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11389:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11400:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11385:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11385:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11377:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11435:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11420:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11443:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11449:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11439:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11439:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11413:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11469:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11603:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11477:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11469:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11347:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11362:4:9",
														"type": ""
													}
												],
												"src": "11196:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11727:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11749:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11757:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11745:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11745:14:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11761:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11738:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11738:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11738:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11719:6:9",
														"type": ""
													}
												],
												"src": "11621:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11955:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12021:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11962:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11962:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12127:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																	"nodeType": "YulIdentifier",
																	"src": "12038:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12038:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12038:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12140:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12151:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12156:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12147:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12147:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12140:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11933:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11941:3:9",
														"type": ""
													}
												],
												"src": "11799:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12342:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12352:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12364:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12375:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12360:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12360:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12352:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12399:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12410:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12395:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12418:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12424:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12414:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12414:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12388:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12388:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12388:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12444:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12578:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12452:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12452:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12444:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12322:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12337:4:9",
														"type": ""
													}
												],
												"src": "12171:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12709:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12719:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12734:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "12719:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12681:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12686:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "12697:11:9",
														"type": ""
													}
												],
												"src": "12596:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12855:8:9",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12847:6:9",
														"type": ""
													}
												],
												"src": "12749:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13032:235:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13042:90:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13125:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13130:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13049:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:83:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13042:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13230:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "13141:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13141:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13141:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13243:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13254:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13259:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13250:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13250:11:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13243:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13020:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13028:3:9",
														"type": ""
													}
												],
												"src": "12869:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13461:191:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13472:154:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13622:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13479:141:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:147:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13643:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13448:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13457:3:9",
														"type": ""
													}
												],
												"src": "13273:379:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13812:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13822:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13834:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13845:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13830:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13822:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13902:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13915:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13926:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13911:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13858:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13858:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13858:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13983:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13996:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14007:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13939:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13939:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13939:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14065:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14078:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14089:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14074:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14074:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14021:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14021:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14021:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13768:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13780:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13788:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13796:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13807:4:9",
														"type": ""
													}
												],
												"src": "13658:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14212:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14234:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14242:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14230:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14246:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14223:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14223:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14302:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14310:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14298:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14298:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14315:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14291:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14291:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14291:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14204:6:9",
														"type": ""
													}
												],
												"src": "14106:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14483:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14493:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14559:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14564:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14500:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14500:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14493:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14665:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "14576:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14576:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14576:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14678:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14689:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14694:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14685:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14685:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14678:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14471:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14479:3:9",
														"type": ""
													}
												],
												"src": "14337:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14880:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14890:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14902:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14913:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14898:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14890:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14937:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14948:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14933:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14933:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14956:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14962:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14952:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14926:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14926:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14926:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14982:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15116:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14990:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14990:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14982:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14860:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14875:4:9",
														"type": ""
													}
												],
												"src": "14709:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15240:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15262:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15270:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15258:14:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15274:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15251:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15251:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15251:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15232:6:9",
														"type": ""
													}
												],
												"src": "15134:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15463:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15473:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15539:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15544:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15480:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15480:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15473:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15645:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nodeType": "YulIdentifier",
																	"src": "15556:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15556:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15556:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15658:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15669:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15674:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15665:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15665:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15658:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15451:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15459:3:9",
														"type": ""
													}
												],
												"src": "15317:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15860:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15870:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15882:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15878:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15870:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15917:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15928:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15913:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15913:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15936:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15942:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15932:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15906:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15906:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15906:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15962:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16096:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15970:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15970:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15962:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15840:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15855:4:9",
														"type": ""
													}
												],
												"src": "15689:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16220:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16242:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16250:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16238:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16238:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16254:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16231:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16231:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16212:6:9",
														"type": ""
													}
												],
												"src": "16114:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16448:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16458:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16524:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16529:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16465:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16465:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16458:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16630:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "16541:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16541:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16541:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16643:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16654:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16659:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16650:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16650:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16643:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16436:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16444:3:9",
														"type": ""
													}
												],
												"src": "16302:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16845:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16855:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16867:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16878:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16863:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16863:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16855:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16902:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16913:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16898:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16898:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16921:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16927:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16917:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16917:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16891:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16891:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16891:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16947:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17081:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16955:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16955:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16947:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16825:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16840:4:9",
														"type": ""
													}
												],
												"src": "16674:419:9"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400(memPtr) {\n\n        mstore(add(memPtr, 0), \"No NFTs are staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b146102f8578063a694fc3a14610323578063d3ea43501461034c578063f2fde38b14610389578063f301af42146103b2578063fd71c650146103ef57610210565b8063150b7a02146102155780632e17de7814610252578063379607f51461027b578063715018a6146102a45780638488cc41146102bb57610210565b366102105760006100b16003610418565b036100f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100e890610d4b565b60405180910390fd5b60006100fd6003610418565b346101089190610dd3565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101679190610e45565b600060405180830381865afa158015610184573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101ad9190610ff9565b905060005b815181101561020e578260056000600684815481106101d4576101d3611042565b5b9060005260206000200154815260200190815260200160002060008282546101fc9190611071565b925050819055508060010190506101b2565b005b600080fd5b34801561022157600080fd5b5061023c6004803603810190610237919061119b565b610426565b6040516102499190611259565b60405180910390f35b34801561025e57600080fd5b5061027960048036038101906102749190611274565b61043a565b005b34801561028757600080fd5b506102a2600480360381019061029d9190611274565b6106d7565b005b3480156102b057600080fd5b506102b96108a5565b005b3480156102c757600080fd5b506102e260048036038101906102dd9190611274565b6108b9565b6040516102ef9190610e45565b60405180910390f35b34801561030457600080fd5b5061030d6108ec565b60405161031a9190610e45565b60405180910390f35b34801561032f57600080fd5b5061034a60048036038101906103459190611274565b610915565b005b34801561035857600080fd5b50610373600480360381019061036e9190611274565b610a2e565b60405161038091906112b0565b60405180910390f35b34801561039557600080fd5b506103b060048036038101906103ab91906112cb565b610a4b565b005b3480156103be57600080fd5b506103d960048036038101906103d49190611274565b610ace565b6040516103e691906112b0565b60405180910390f35b3480156103fb57600080fd5b50610416600480360381019061041191906112cb565b610ae6565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b60026001540361047f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047690611344565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f906113b0565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556105686003610b32565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660056000848152602001908152602001600020546040516105d490611401565b60006040518083038185875af1925050503d8060008114610611576040519150601f19603f3d011682016040523d82523d6000602084013e610616565b606091505b505090508061062457600080fd5b6005600083815260200190815260200160002060009055600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b815260040161069a93929190611416565b600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506001808190555050565b60026001540361071c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071390611344565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc906113b0565b60405180910390fd5b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600560008481526020019081526020016000205460405161083190611401565b60006040518083038185875af1925050503d806000811461086e576040519150601f19603f3d011682016040523d82523d6000602084013e610873565b606091505b505090508061088157600080fd5b60006005600084815260200190815260200160002081905550506001808190555050565b6108ad610b8e565b6108b76000610c0c565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161097493929190611416565b600060405180830381600087803b15801561098e57600080fd5b505af11580156109a2573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006819080600181540180825580915050600190039060005260206000200160009091909190915055610a2b6003610cd0565b50565b600060056000838152602001908152602001600020549050919050565b610a53610b8e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab9906114bf565b60405180910390fd5b610acb81610c0c565b50565b60056020528060005260406000206000915090505481565b610aee610b8e565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160000154905060008111610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b759061152b565b60405180910390fd5b6001810382600001819055505050565b610b96610ce6565b73ffffffffffffffffffffffffffffffffffffffff16610bb46108ec565b73ffffffffffffffffffffffffffffffffffffffff1614610c0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0190611597565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600082825260208201905092915050565b7f4e6f204e46547320617265207374616b65640000000000000000000000000000600082015250565b6000610d35601283610cee565b9150610d4082610cff565b602082019050919050565b60006020820190508181036000830152610d6481610d28565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dde82610d6b565b9150610de983610d6b565b925082610df957610df8610d75565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e2f82610e04565b9050919050565b610e3f81610e24565b82525050565b6000602082019050610e5a6000830184610e36565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ec282610e79565b810181811067ffffffffffffffff82111715610ee157610ee0610e8a565b5b80604052505050565b6000610ef4610e60565b9050610f008282610eb9565b919050565b600067ffffffffffffffff821115610f2057610f1f610e8a565b5b602082029050602081019050919050565b600080fd5b610f3f81610d6b565b8114610f4a57600080fd5b50565b600081519050610f5c81610f36565b92915050565b6000610f75610f7084610f05565b610eea565b90508083825260208201905060208402830185811115610f9857610f97610f31565b5b835b81811015610fc15780610fad8882610f4d565b845260208401935050602081019050610f9a565b5050509392505050565b600082601f830112610fe057610fdf610e74565b5b8151610ff0848260208601610f62565b91505092915050565b60006020828403121561100f5761100e610e6a565b5b600082015167ffffffffffffffff81111561102d5761102c610e6f565b5b61103984828501610fcb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061107c82610d6b565b915061108783610d6b565b925082820190508082111561109f5761109e610da4565b5b92915050565b6110ae81610e24565b81146110b957600080fd5b50565b6000813590506110cb816110a5565b92915050565b6000813590506110e081610f36565b92915050565b600080fd5b600067ffffffffffffffff82111561110657611105610e8a565b5b61110f82610e79565b9050602081019050919050565b82818337600083830152505050565b600061113e611139846110eb565b610eea565b90508281526020810184848401111561115a576111596110e6565b5b61116584828561111c565b509392505050565b600082601f83011261118257611181610e74565b5b813561119284826020860161112b565b91505092915050565b600080600080608085870312156111b5576111b4610e6a565b5b60006111c3878288016110bc565b94505060206111d4878288016110bc565b93505060406111e5878288016110d1565b925050606085013567ffffffffffffffff81111561120657611205610e6f565b5b6112128782880161116d565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112538161121e565b82525050565b600060208201905061126e600083018461124a565b92915050565b60006020828403121561128a57611289610e6a565b5b6000611298848285016110d1565b91505092915050565b6112aa81610d6b565b82525050565b60006020820190506112c560008301846112a1565b92915050565b6000602082840312156112e1576112e0610e6a565b5b60006112ef848285016110bc565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061132e601f83610cee565b9150611339826112f8565b602082019050919050565b6000602082019050818103600083015261135d81611321565b9050919050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b600061139a601683610cee565b91506113a582611364565b602082019050919050565b600060208201905081810360008301526113c98161138d565b9050919050565b600081905092915050565b50565b60006113eb6000836113d0565b91506113f6826113db565b600082019050919050565b600061140c826113de565b9150819050919050565b600060608201905061142b6000830186610e36565b6114386020830185610e36565b61144560408301846112a1565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006114a9602683610cee565b91506114b48261144d565b604082019050919050565b600060208201905081810360008301526114d88161149c565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000611515601b83610cee565b9150611520826114df565b602082019050919050565b6000602082019050818103600083015261154481611508565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611581602083610cee565b915061158c8261154b565b602082019050919050565b600060208201905081810360008301526115b081611574565b905091905056fea2646970667358221220f782c976aff4b1241a8eb5dde63152623f5232f5a577d674ce27c912897bc1b564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x3EF JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x2BB JUMPI PUSH2 0x210 JUMP JUMPDEST CALLDATASIZE PUSH2 0x210 JUMPI PUSH1 0x0 PUSH2 0xB1 PUSH1 0x3 PUSH2 0x418 JUMP JUMPDEST SUB PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8 SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFD PUSH1 0x3 PUSH2 0x418 JUMP JUMPDEST CALLVALUE PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xFF9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20E JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1D4 JUMPI PUSH2 0x1D3 PUSH2 0x1042 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1071 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x119B JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31A SWAP2 SWAP1 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D4 SWAP2 SWAP1 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x416 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH2 0xAE6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x476 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x528 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51F SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x568 PUSH1 0x3 PUSH2 0xB32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP1 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x616 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BC SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x831 SWAP1 PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x873 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0xB8E JUMP JUMPDEST PUSH2 0x8B7 PUSH1 0x0 PUSH2 0xC0C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0xA2B PUSH1 0x3 PUSH2 0xCD0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA53 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB9 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xACB DUP2 PUSH2 0xC0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAEE PUSH2 0xB8E JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xB7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB75 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xCE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBB4 PUSH2 0x8EC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC01 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F204E46547320617265207374616B65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD35 PUSH1 0x12 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0xD40 DUP3 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD64 DUP2 PUSH2 0xD28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDDE DUP3 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDF9 JUMPI PUSH2 0xDF8 PUSH2 0xD75 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2F DUP3 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE3F DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xEC2 DUP3 PUSH2 0xE79 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xEE1 JUMPI PUSH2 0xEE0 PUSH2 0xE8A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF4 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP PUSH2 0xF00 DUP3 DUP3 PUSH2 0xEB9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF1F PUSH2 0xE8A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF3F DUP2 PUSH2 0xD6B JUMP JUMPDEST DUP2 EQ PUSH2 0xF4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF5C DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF75 PUSH2 0xF70 DUP5 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xF31 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFC1 JUMPI DUP1 PUSH2 0xFAD DUP9 DUP3 PUSH2 0xF4D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFE0 JUMPI PUSH2 0xFDF PUSH2 0xE74 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xFF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100F JUMPI PUSH2 0x100E PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x102D JUMPI PUSH2 0x102C PUSH2 0xE6F JUMP JUMPDEST JUMPDEST PUSH2 0x1039 DUP5 DUP3 DUP6 ADD PUSH2 0xFCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x107C DUP3 PUSH2 0xD6B JUMP JUMPDEST SWAP2 POP PUSH2 0x1087 DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0xDA4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10AE DUP2 PUSH2 0xE24 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CB DUP2 PUSH2 0x10A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10E0 DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1106 JUMPI PUSH2 0x1105 PUSH2 0xE8A JUMP JUMPDEST JUMPDEST PUSH2 0x110F DUP3 PUSH2 0xE79 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113E PUSH2 0x1139 DUP5 PUSH2 0x10EB JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x115A JUMPI PUSH2 0x1159 PUSH2 0x10E6 JUMP JUMPDEST JUMPDEST PUSH2 0x1165 DUP5 DUP3 DUP6 PUSH2 0x111C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xE74 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1192 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x112B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11B5 JUMPI PUSH2 0x11B4 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11C3 DUP8 DUP3 DUP9 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x11D4 DUP8 DUP3 DUP9 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x11E5 DUP8 DUP3 DUP9 ADD PUSH2 0x10D1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1206 JUMPI PUSH2 0x1205 PUSH2 0xE6F JUMP JUMPDEST JUMPDEST PUSH2 0x1212 DUP8 DUP3 DUP9 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1253 DUP2 PUSH2 0x121E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x126E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x124A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x128A JUMPI PUSH2 0x1289 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1298 DUP5 DUP3 DUP6 ADD PUSH2 0x10D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12AA DUP2 PUSH2 0xD6B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E1 JUMPI PUSH2 0x12E0 PUSH2 0xE6A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12EF DUP5 DUP3 DUP6 ADD PUSH2 0x10BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x132E PUSH1 0x1F DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1339 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x135D DUP2 PUSH2 0x1321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x139A PUSH1 0x16 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x13A5 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C9 DUP2 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EB PUSH1 0x0 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F6 DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140C DUP3 PUSH2 0x13DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x142B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1438 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x1445 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A9 PUSH1 0x26 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x14B4 DUP3 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D8 DUP2 PUSH2 0x149C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1515 PUSH1 0x1B DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x1520 DUP3 PUSH2 0x14DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1544 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1581 PUSH1 0x20 DUP4 PUSH2 0xCEE JUMP JUMPDEST SWAP2 POP PUSH2 0x158C DUP3 PUSH2 0x154B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15B0 DUP2 PUSH2 0x1574 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 DUP3 0xC9 PUSH23 0xAFF4B1241A8EB5DDE63152623F5232F5A577D674CE27C9 SLT DUP10 PUSH28 0xC1B564736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "492:2262:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2405:1;2374:27;:17;:25;:27::i;:::-;:32;2366:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2439:20;2474:27;:17;:25;:27::i;:::-;2462:9;:39;;;;:::i;:::-;2439:62;;2511:29;2548:12;;;;;;;;;;;2543:32;;;2584:4;2543:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2511:79;;2613:9;2609:137;2632:12;:19;2628:1;:23;2609:137;;;2694:12;2667:7;:23;2675:11;2687:1;2675:14;;;;;;;;:::i;:::-;;;;;;;;;;2667:23;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;2731:3;;;;;2609:137;;;;492:2262;;;;588:200:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1454:456:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1916:290;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;868:48:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1198:250:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2212:111;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;922:43:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1084:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:112:6;892:7;918;:14;;;911:21;;827:112;;;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;1454:456:8:-;1744:1:1;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1553:10:8::1;1528:35;;:12;:21;1541:7;1528:21;;;;;;;;;;;;;;;;;;;;;:35;;;1520:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1607:12;:21;1620:7;1607:21;;;;;;;;;;;;1600:28;;;;;;;;;;;1638:29;:17;:27;:29::i;:::-;1678:12;1704;:21;1717:7;1704:21;;;;;;;;;;;;;;;;;;;;;1696:35;;1739:7;:16;1747:7;1739:16;;;;;;;;;;;;1696:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:83;;;1778:7;1770:16;;;::::0;::::1;;1803:7;:16;1811:7;1803:16;;;;;;;;;;;1796:23;;;1837:12;;;;;;;;;;;1829:38;;;1876:4;1883:10;1895:7;1829:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1510:400;1701:1:1::0;2628:7;:22;;;;1454:456:8;:::o;1916:290::-;1744:1:1;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;2013:10:8::1;1988:35;;:12;:21;2001:7;1988:21;;;;;;;;;;;;;;;;;;;;;:35;;;1980:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2061:12;2087;:21;2100:7;2087:21;;;;;;;;;;;;;;;;;;;;;2079:35;;2122:7;:16;2130:7;2122:16;;;;;;;;;;;;2079:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:83;;;2161:7;2153:16;;;::::0;::::1;;2198:1;2179:7;:16;2187:7;2179:16;;;;;;;;;;;:20;;;;1970:236;1701:1:1::0;2628:7;:22;;;;1916:290:8;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;868:48:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1198:250:8:-;1257:12;;;;;;;;;;;1249:38;;;1288:10;1308:4;1315:7;1249:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1357:10;1333:12;:21;1346:7;1333:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1377:11;1394:7;1377:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:29;:17;:27;:29::i;:::-;1198:250;:::o;2212:111::-;2275:7;2300;:16;2308:7;2300:16;;;;;;;;;;;;2293:23;;2212:111;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;922:43:8:-;;;;;;;;;;;;;;;;;:::o;1084:108::-;1094:13:0;:11;:13::i;:::-;1173:12:8::1;1158;;:27;;;;;;;;;;;;;;;;;;1084:108:::0;:::o;1074:229:6:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7:169:9:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:168::-;322:20;318:1;310:6;306:14;299:44;182:168;:::o;356:366::-;498:3;519:67;583:2;578:3;519:67;:::i;:::-;512:74;;595:93;684:3;595:93;:::i;:::-;713:2;708:3;704:12;697:19;;356:366;;;:::o;728:419::-;894:4;932:2;921:9;917:18;909:26;;981:9;975:4;971:20;967:1;956:9;952:17;945:47;1009:131;1135:4;1009:131;:::i;:::-;1001:139;;728:419;;;:::o;1153:77::-;1190:7;1219:5;1208:16;;1153:77;;;:::o;1236:180::-;1284:77;1281:1;1274:88;1381:4;1378:1;1371:15;1405:4;1402:1;1395:15;1422:180;1470:77;1467:1;1460:88;1567:4;1564:1;1557:15;1591:4;1588:1;1581:15;1608:185;1648:1;1665:20;1683:1;1665:20;:::i;:::-;1660:25;;1699:20;1717:1;1699:20;:::i;:::-;1694:25;;1738:1;1728:35;;1743:18;;:::i;:::-;1728:35;1785:1;1782;1778:9;1773:14;;1608:185;;;;:::o;1799:126::-;1836:7;1876:42;1869:5;1865:54;1854:65;;1799:126;;;:::o;1931:96::-;1968:7;1997:24;2015:5;1997:24;:::i;:::-;1986:35;;1931:96;;;:::o;2033:118::-;2120:24;2138:5;2120:24;:::i;:::-;2115:3;2108:37;2033:118;;:::o;2157:222::-;2250:4;2288:2;2277:9;2273:18;2265:26;;2301:71;2369:1;2358:9;2354:17;2345:6;2301:71;:::i;:::-;2157:222;;;;:::o;2385:75::-;2418:6;2451:2;2445:9;2435:19;;2385:75;:::o;2466:117::-;2575:1;2572;2565:12;2589:117;2698:1;2695;2688:12;2712:117;2821:1;2818;2811:12;2835:102;2876:6;2927:2;2923:7;2918:2;2911:5;2907:14;2903:28;2893:38;;2835:102;;;:::o;2943:180::-;2991:77;2988:1;2981:88;3088:4;3085:1;3078:15;3112:4;3109:1;3102:15;3129:281;3212:27;3234:4;3212:27;:::i;:::-;3204:6;3200:40;3342:6;3330:10;3327:22;3306:18;3294:10;3291:34;3288:62;3285:88;;;3353:18;;:::i;:::-;3285:88;3393:10;3389:2;3382:22;3172:238;3129:281;;:::o;3416:129::-;3450:6;3477:20;;:::i;:::-;3467:30;;3506:33;3534:4;3526:6;3506:33;:::i;:::-;3416:129;;;:::o;3551:311::-;3628:4;3718:18;3710:6;3707:30;3704:56;;;3740:18;;:::i;:::-;3704:56;3790:4;3782:6;3778:17;3770:25;;3850:4;3844;3840:15;3832:23;;3551:311;;;:::o;3868:117::-;3977:1;3974;3967:12;3991:122;4064:24;4082:5;4064:24;:::i;:::-;4057:5;4054:35;4044:63;;4103:1;4100;4093:12;4044:63;3991:122;:::o;4119:143::-;4176:5;4207:6;4201:13;4192:22;;4223:33;4250:5;4223:33;:::i;:::-;4119:143;;;;:::o;4285:732::-;4392:5;4417:81;4433:64;4490:6;4433:64;:::i;:::-;4417:81;:::i;:::-;4408:90;;4518:5;4547:6;4540:5;4533:21;4581:4;4574:5;4570:16;4563:23;;4634:4;4626:6;4622:17;4614:6;4610:30;4663:3;4655:6;4652:15;4649:122;;;4682:79;;:::i;:::-;4649:122;4797:6;4780:231;4814:6;4809:3;4806:15;4780:231;;;4889:3;4918:48;4962:3;4950:10;4918:48;:::i;:::-;4913:3;4906:61;4996:4;4991:3;4987:14;4980:21;;4856:155;4840:4;4835:3;4831:14;4824:21;;4780:231;;;4784:21;4398:619;;4285:732;;;;;:::o;5040:385::-;5122:5;5171:3;5164:4;5156:6;5152:17;5148:27;5138:122;;5179:79;;:::i;:::-;5138:122;5289:6;5283:13;5314:105;5415:3;5407:6;5400:4;5392:6;5388:17;5314:105;:::i;:::-;5305:114;;5128:297;5040:385;;;;:::o;5431:554::-;5526:6;5575:2;5563:9;5554:7;5550:23;5546:32;5543:119;;;5581:79;;:::i;:::-;5543:119;5722:1;5711:9;5707:17;5701:24;5752:18;5744:6;5741:30;5738:117;;;5774:79;;:::i;:::-;5738:117;5879:89;5960:7;5951:6;5940:9;5936:22;5879:89;:::i;:::-;5869:99;;5672:306;5431:554;;;;:::o;5991:180::-;6039:77;6036:1;6029:88;6136:4;6133:1;6126:15;6160:4;6157:1;6150:15;6177:191;6217:3;6236:20;6254:1;6236:20;:::i;:::-;6231:25;;6270:20;6288:1;6270:20;:::i;:::-;6265:25;;6313:1;6310;6306:9;6299:16;;6334:3;6331:1;6328:10;6325:36;;;6341:18;;:::i;:::-;6325:36;6177:191;;;;:::o;6374:122::-;6447:24;6465:5;6447:24;:::i;:::-;6440:5;6437:35;6427:63;;6486:1;6483;6476:12;6427:63;6374:122;:::o;6502:139::-;6548:5;6586:6;6573:20;6564:29;;6602:33;6629:5;6602:33;:::i;:::-;6502:139;;;;:::o;6647:::-;6693:5;6731:6;6718:20;6709:29;;6747:33;6774:5;6747:33;:::i;:::-;6647:139;;;;:::o;6792:117::-;6901:1;6898;6891:12;6915:307;6976:4;7066:18;7058:6;7055:30;7052:56;;;7088:18;;:::i;:::-;7052:56;7126:29;7148:6;7126:29;:::i;:::-;7118:37;;7210:4;7204;7200:15;7192:23;;6915:307;;;:::o;7228:146::-;7325:6;7320:3;7315;7302:30;7366:1;7357:6;7352:3;7348:16;7341:27;7228:146;;;:::o;7380:423::-;7457:5;7482:65;7498:48;7539:6;7498:48;:::i;:::-;7482:65;:::i;:::-;7473:74;;7570:6;7563:5;7556:21;7608:4;7601:5;7597:16;7646:3;7637:6;7632:3;7628:16;7625:25;7622:112;;;7653:79;;:::i;:::-;7622:112;7743:54;7790:6;7785:3;7780;7743:54;:::i;:::-;7463:340;7380:423;;;;;:::o;7822:338::-;7877:5;7926:3;7919:4;7911:6;7907:17;7903:27;7893:122;;7934:79;;:::i;:::-;7893:122;8051:6;8038:20;8076:78;8150:3;8142:6;8135:4;8127:6;8123:17;8076:78;:::i;:::-;8067:87;;7883:277;7822:338;;;;:::o;8166:943::-;8261:6;8269;8277;8285;8334:3;8322:9;8313:7;8309:23;8305:33;8302:120;;;8341:79;;:::i;:::-;8302:120;8461:1;8486:53;8531:7;8522:6;8511:9;8507:22;8486:53;:::i;:::-;8476:63;;8432:117;8588:2;8614:53;8659:7;8650:6;8639:9;8635:22;8614:53;:::i;:::-;8604:63;;8559:118;8716:2;8742:53;8787:7;8778:6;8767:9;8763:22;8742:53;:::i;:::-;8732:63;;8687:118;8872:2;8861:9;8857:18;8844:32;8903:18;8895:6;8892:30;8889:117;;;8925:79;;:::i;:::-;8889:117;9030:62;9084:7;9075:6;9064:9;9060:22;9030:62;:::i;:::-;9020:72;;8815:287;8166:943;;;;;;;:::o;9115:149::-;9151:7;9191:66;9184:5;9180:78;9169:89;;9115:149;;;:::o;9270:115::-;9355:23;9372:5;9355:23;:::i;:::-;9350:3;9343:36;9270:115;;:::o;9391:218::-;9482:4;9520:2;9509:9;9505:18;9497:26;;9533:69;9599:1;9588:9;9584:17;9575:6;9533:69;:::i;:::-;9391:218;;;;:::o;9615:329::-;9674:6;9723:2;9711:9;9702:7;9698:23;9694:32;9691:119;;;9729:79;;:::i;:::-;9691:119;9849:1;9874:53;9919:7;9910:6;9899:9;9895:22;9874:53;:::i;:::-;9864:63;;9820:117;9615:329;;;;:::o;9950:118::-;10037:24;10055:5;10037:24;:::i;:::-;10032:3;10025:37;9950:118;;:::o;10074:222::-;10167:4;10205:2;10194:9;10190:18;10182:26;;10218:71;10286:1;10275:9;10271:17;10262:6;10218:71;:::i;:::-;10074:222;;;;:::o;10302:329::-;10361:6;10410:2;10398:9;10389:7;10385:23;10381:32;10378:119;;;10416:79;;:::i;:::-;10378:119;10536:1;10561:53;10606:7;10597:6;10586:9;10582:22;10561:53;:::i;:::-;10551:63;;10507:117;10302:329;;;;:::o;10637:181::-;10777:33;10773:1;10765:6;10761:14;10754:57;10637:181;:::o;10824:366::-;10966:3;10987:67;11051:2;11046:3;10987:67;:::i;:::-;10980:74;;11063:93;11152:3;11063:93;:::i;:::-;11181:2;11176:3;11172:12;11165:19;;10824:366;;;:::o;11196:419::-;11362:4;11400:2;11389:9;11385:18;11377:26;;11449:9;11443:4;11439:20;11435:1;11424:9;11420:17;11413:47;11477:131;11603:4;11477:131;:::i;:::-;11469:139;;11196:419;;;:::o;11621:172::-;11761:24;11757:1;11749:6;11745:14;11738:48;11621:172;:::o;11799:366::-;11941:3;11962:67;12026:2;12021:3;11962:67;:::i;:::-;11955:74;;12038:93;12127:3;12038:93;:::i;:::-;12156:2;12151:3;12147:12;12140:19;;11799:366;;;:::o;12171:419::-;12337:4;12375:2;12364:9;12360:18;12352:26;;12424:9;12418:4;12414:20;12410:1;12399:9;12395:17;12388:47;12452:131;12578:4;12452:131;:::i;:::-;12444:139;;12171:419;;;:::o;12596:147::-;12697:11;12734:3;12719:18;;12596:147;;;;:::o;12749:114::-;;:::o;12869:398::-;13028:3;13049:83;13130:1;13125:3;13049:83;:::i;:::-;13042:90;;13141:93;13230:3;13141:93;:::i;:::-;13259:1;13254:3;13250:11;13243:18;;12869:398;;;:::o;13273:379::-;13457:3;13479:147;13622:3;13479:147;:::i;:::-;13472:154;;13643:3;13636:10;;13273:379;;;:::o;13658:442::-;13807:4;13845:2;13834:9;13830:18;13822:26;;13858:71;13926:1;13915:9;13911:17;13902:6;13858:71;:::i;:::-;13939:72;14007:2;13996:9;13992:18;13983:6;13939:72;:::i;:::-;14021;14089:2;14078:9;14074:18;14065:6;14021:72;:::i;:::-;13658:442;;;;;;:::o;14106:225::-;14246:34;14242:1;14234:6;14230:14;14223:58;14315:8;14310:2;14302:6;14298:15;14291:33;14106:225;:::o;14337:366::-;14479:3;14500:67;14564:2;14559:3;14500:67;:::i;:::-;14493:74;;14576:93;14665:3;14576:93;:::i;:::-;14694:2;14689:3;14685:12;14678:19;;14337:366;;;:::o;14709:419::-;14875:4;14913:2;14902:9;14898:18;14890:26;;14962:9;14956:4;14952:20;14948:1;14937:9;14933:17;14926:47;14990:131;15116:4;14990:131;:::i;:::-;14982:139;;14709:419;;;:::o;15134:177::-;15274:29;15270:1;15262:6;15258:14;15251:53;15134:177;:::o;15317:366::-;15459:3;15480:67;15544:2;15539:3;15480:67;:::i;:::-;15473:74;;15556:93;15645:3;15556:93;:::i;:::-;15674:2;15669:3;15665:12;15658:19;;15317:366;;;:::o;15689:419::-;15855:4;15893:2;15882:9;15878:18;15870:26;;15942:9;15936:4;15932:20;15928:1;15917:9;15913:17;15906:47;15970:131;16096:4;15970:131;:::i;:::-;15962:139;;15689:419;;;:::o;16114:182::-;16254:34;16250:1;16242:6;16238:14;16231:58;16114:182;:::o;16302:366::-;16444:3;16465:67;16529:2;16524:3;16465:67;:::i;:::-;16458:74;;16541:93;16630:3;16541:93;:::i;:::-;16659:2;16654:3;16650:12;16643:19;;16302:366;;;:::o;16674:419::-;16840:4;16878:2;16867:9;16863:18;16855:26;;16927:9;16921:4;16917:20;16913:1;16902:9;16898:17;16891:47;16955:131;17081:4;16955:131;:::i;:::-;16947:139;;16674:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1122600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateRewards(uint256)": "infinite",
								"claim(uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30465",
								"rewards(uint256)": "infinite",
								"setNftContact(address)": "27096",
								"stake(uint256)": "infinite",
								"tokenOwnedBy(uint256)": "2928",
								"transferOwnership(address)": "30810",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 999,
									"end": 1078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1059,
									"end": 1071,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f782c976aff4b1241a8eb5dde63152623f5232f5a577d674ce27c912897bc1b564736f6c63430008110033",
									".code": [
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "D3EA4350"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "F301AF42"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2374,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2374,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2401,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2374,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2366,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2474,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 2474,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2462,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2651,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2675,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2667,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1548,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1520,
											"end": 1590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1754,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1696,
											"end": 1760,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1819,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1876,
											"end": 1880,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1883,
											"end": 1893,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1895,
											"end": 1902,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1829,
											"end": 1903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2008,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1980,
											"end": 2050,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2107,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2079,
											"end": 2114,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2137,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2079,
											"end": 2143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2198,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2194,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1970,
											"end": 2206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1288,
											"end": 1298,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1249,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1388,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1394,
											"end": 1401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1412,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1412,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1412,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1177,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 350,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 182,
											"end": 350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 322,
											"end": 342,
											"name": "PUSH",
											"source": 9,
											"value": "4E6F204E46547320617265207374616B65640000000000000000000000000000"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 299,
											"end": 343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 182,
											"end": 350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 182,
											"end": 350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 356,
											"end": 722,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 356,
											"end": 722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 498,
											"end": 501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 583,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 578,
											"end": 581,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 519,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 519,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 519,
											"end": 586,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 519,
											"end": 586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 512,
											"end": 586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 595,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 595,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 595,
											"end": 688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 595,
											"end": 688,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 595,
											"end": 688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 713,
											"end": 715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 704,
											"end": 716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 697,
											"end": 716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 356,
											"end": 722,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 356,
											"end": 722,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 356,
											"end": 722,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 356,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 728,
											"end": 1147,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 728,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 909,
											"end": 935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 909,
											"end": 935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 975,
											"end": 979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 971,
											"end": 991,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 967,
											"end": 968,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 956,
											"end": 965,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 952,
											"end": 969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 945,
											"end": 992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1009,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1009,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1009,
											"end": 1140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1009,
											"end": 1140,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1009,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1001,
											"end": 1140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 728,
											"end": 1147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 728,
											"end": 1147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 1147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 728,
											"end": 1147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1230,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1153,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1230,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1230,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1416,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1236,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1284,
											"end": 1361,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1362,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1381,
											"end": 1385,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1371,
											"end": 1386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1405,
											"end": 1409,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1402,
											"end": 1403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1602,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1422,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1547,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1548,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1557,
											"end": 1572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1665,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1665,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1699,
											"end": 1719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1699,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1694,
											"end": 1719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1728,
											"end": 1763,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 1743,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1763,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1728,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1918,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1919,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1919,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1854,
											"end": 1919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2027,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 1931,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1997,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2021,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2021,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2027,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2027,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2151,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2033,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2138,
											"end": 2143,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2120,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2120,
											"end": 2144,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 2120,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2115,
											"end": 2118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2033,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2290,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2277,
											"end": 2286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2273,
											"end": 2291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2369,
											"end": 2370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2367,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2354,
											"end": 2371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2351,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2301,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2301,
											"end": 2372,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2301,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2157,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2460,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 2385,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2385,
											"end": 2460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2565,
											"end": 2577,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2589,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2589,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2688,
											"end": 2700,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2829,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 2712,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2937,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2835,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2923,
											"end": 2930,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2920,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2907,
											"end": 2921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2903,
											"end": 2931,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2931,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2937,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2937,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 3123,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 2943,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3068,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3069,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3116,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3109,
											"end": 3110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3117,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3410,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3129,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3212,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3200,
											"end": 3240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3327,
											"end": 3349,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3304,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3291,
											"end": 3325,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3288,
											"end": 3350,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3373,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3285,
											"end": 3373,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3353,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3373,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3285,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3404,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3545,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 3416,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3456,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3477,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3477,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3477,
											"end": 3497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3477,
											"end": 3497,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3477,
											"end": 3497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3497,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3467,
											"end": 3497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3534,
											"end": 3538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3506,
											"end": 3539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3416,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3862,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3551,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3737,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3740,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3740,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3740,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3740,
											"end": 3758,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3740,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3795,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3840,
											"end": 3855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3832,
											"end": 3855,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3832,
											"end": 3855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3862,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3862,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3862,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3868,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3868,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4113,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 3991,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4082,
											"end": 4087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4064,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4064,
											"end": 4088,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4064,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4054,
											"end": 4089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4101,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4105,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4044,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4201,
											"end": 4214,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4250,
											"end": 4255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4223,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4256,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4223,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4119,
											"end": 4262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4417,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4433,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4433,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4433,
											"end": 4497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4433,
											"end": 4497,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 4433,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4417,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4498,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 4417,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4498,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4547,
											"end": 4553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4540,
											"end": 4545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4554,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4581,
											"end": 4585,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4634,
											"end": 4638,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4622,
											"end": 4639,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4610,
											"end": 4640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4652,
											"end": 4667,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4771,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4649,
											"end": 4771,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4682,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4682,
											"end": 4761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4682,
											"end": 4761,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 4682,
											"end": 4761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4771,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 4649,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4809,
											"end": 4812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4821,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4892,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4962,
											"end": 4965,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4918,
											"end": 4966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 4918,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4913,
											"end": 4916,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4906,
											"end": 4967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4996,
											"end": 5000,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 4994,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4856,
											"end": 5011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 4780,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 5017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4398,
											"end": 5017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 5017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5122,
											"end": 5127,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5168,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5152,
											"end": 5169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5148,
											"end": 5175,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5138,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5138,
											"end": 5260,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5179,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5179,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5258,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5179,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5138,
											"end": 5260,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5138,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5289,
											"end": 5295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5283,
											"end": 5296,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5404,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5392,
											"end": 5398,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5388,
											"end": 5405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5314,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5419,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 5314,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5419,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5128,
											"end": 5425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5563,
											"end": 5572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5561,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5573,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5546,
											"end": 5578,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5662,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5543,
											"end": 5662,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5581,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 5581,
											"end": 5660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5660,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 5581,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5662,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5543,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5724,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 5725,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5855,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5738,
											"end": 5855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5774,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5774,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5774,
											"end": 5853,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5774,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5855,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 5738,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5879,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5960,
											"end": 5967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5949,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5879,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5879,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5879,
											"end": 5968,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5879,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5968,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5968,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5672,
											"end": 5978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5991,
											"end": 6171,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 5991,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6039,
											"end": 6116,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6136,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6126,
											"end": 6141,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6160,
											"end": 6164,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6165,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6254,
											"end": 6255,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6236,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6236,
											"end": 6256,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6236,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6231,
											"end": 6256,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6231,
											"end": 6256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 6288,
											"end": 6289,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6270,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6270,
											"end": 6290,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 6270,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6290,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6265,
											"end": 6290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6313,
											"end": 6314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6310,
											"end": 6311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6299,
											"end": 6315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6299,
											"end": 6315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6334,
											"end": 6337,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6328,
											"end": 6338,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6325,
											"end": 6361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6341,
											"end": 6359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6341,
											"end": 6359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6361,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6325,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6496,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6374,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6465,
											"end": 6470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 6447,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6437,
											"end": 6472,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6427,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6427,
											"end": 6490,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6487,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6488,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6427,
											"end": 6490,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6427,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6496,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6593,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6564,
											"end": 6593,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6629,
											"end": 6634,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6602,
											"end": 6635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6602,
											"end": 6635,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6602,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6502,
											"end": 6641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6718,
											"end": 6738,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 6747,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6780,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 6747,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6792,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7222,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 6915,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6976,
											"end": 6980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7084,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7058,
											"end": 7064,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7055,
											"end": 7085,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7108,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7052,
											"end": 7108,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 7088,
											"end": 7106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 7088,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7052,
											"end": 7108,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7052,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7126,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7126,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7126,
											"end": 7155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7126,
											"end": 7155,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 7126,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7155,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7118,
											"end": 7155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7214,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7200,
											"end": 7215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6915,
											"end": 7222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7374,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7228,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7331,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7320,
											"end": 7323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7318,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7332,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7363,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7352,
											"end": 7355,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7341,
											"end": 7368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7498,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 7539,
											"end": 7545,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7498,
											"end": 7546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7498,
											"end": 7546,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 7498,
											"end": 7546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 7482,
											"end": 7547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7547,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 7482,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7473,
											"end": 7547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7563,
											"end": 7568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7608,
											"end": 7612,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7597,
											"end": 7613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7646,
											"end": 7649,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7635,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7628,
											"end": 7644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7625,
											"end": 7650,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7622,
											"end": 7734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7653,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7653,
											"end": 7732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7653,
											"end": 7732,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 7653,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7734,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 7622,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7790,
											"end": 7796,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7785,
											"end": 7788,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7780,
											"end": 7783,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 7743,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7797,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7743,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7380,
											"end": 7803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7882,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7923,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7911,
											"end": 7917,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7907,
											"end": 7924,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7903,
											"end": 7930,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7893,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7893,
											"end": 8015,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7934,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 7934,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7893,
											"end": 8015,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 7893,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8038,
											"end": 8058,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8150,
											"end": 8153,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8142,
											"end": 8148,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8135,
											"end": 8139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8123,
											"end": 8140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 8076,
											"end": 8154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8154,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8076,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8067,
											"end": 8154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8067,
											"end": 8154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 8160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 8160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8269,
											"end": 8275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8334,
											"end": 8337,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8322,
											"end": 8331,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8313,
											"end": 8320,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8309,
											"end": 8332,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8338,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8302,
											"end": 8422,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8302,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8302,
											"end": 8422,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 8341,
											"end": 8420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8341,
											"end": 8420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8341,
											"end": 8420,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 8341,
											"end": 8420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8302,
											"end": 8422,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8302,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8531,
											"end": 8538,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8511,
											"end": 8520,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8507,
											"end": 8529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8486,
											"end": 8539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8486,
											"end": 8539,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 8486,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8539,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8476,
											"end": 8539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8432,
											"end": 8549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8614,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8614,
											"end": 8667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8614,
											"end": 8667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8614,
											"end": 8667,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8614,
											"end": 8667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8667,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8604,
											"end": 8667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8559,
											"end": 8677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8718,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8742,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8787,
											"end": 8794,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8763,
											"end": 8785,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8742,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8742,
											"end": 8795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8742,
											"end": 8795,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8742,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8795,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8732,
											"end": 8795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8687,
											"end": 8805,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8844,
											"end": 8876,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8903,
											"end": 8921,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8892,
											"end": 8922,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 8925,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8925,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8889,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9073,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 9060,
											"end": 9082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 9030,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 9030,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9092,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8815,
											"end": 9102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8166,
											"end": 9109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9115,
											"end": 9264,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9115,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9151,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9257,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9184,
											"end": 9189,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9180,
											"end": 9258,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9169,
											"end": 9258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9115,
											"end": 9264,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9115,
											"end": 9264,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9115,
											"end": 9264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9115,
											"end": 9264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9385,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9270,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9372,
											"end": 9377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 9355,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9355,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9350,
											"end": 9353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9482,
											"end": 9486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9522,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9509,
											"end": 9518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9497,
											"end": 9523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9599,
											"end": 9600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9588,
											"end": 9597,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9584,
											"end": 9601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9581,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9533,
											"end": 9602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9602,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9533,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9725,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9711,
											"end": 9720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9702,
											"end": 9709,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9698,
											"end": 9721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9694,
											"end": 9726,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9810,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 9691,
											"end": 9810,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9729,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 9729,
											"end": 9808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9729,
											"end": 9808,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9729,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9691,
											"end": 9810,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 9691,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9849,
											"end": 9850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9874,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9919,
											"end": 9926,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9916,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9899,
											"end": 9908,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9895,
											"end": 9917,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 9874,
											"end": 9927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9874,
											"end": 9927,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9874,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9927,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9864,
											"end": 9927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9820,
											"end": 9937,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10068,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 9950,
											"end": 10068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10037,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10055,
											"end": 10060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10037,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 10037,
											"end": 10061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10037,
											"end": 10061,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10037,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10032,
											"end": 10035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10025,
											"end": 10062,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9950,
											"end": 10068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10205,
											"end": 10207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10194,
											"end": 10203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10190,
											"end": 10208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10182,
											"end": 10208,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10286,
											"end": 10287,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10284,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 10218,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10218,
											"end": 10289,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10218,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10074,
											"end": 10296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10398,
											"end": 10407,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10389,
											"end": 10396,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10385,
											"end": 10408,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10381,
											"end": 10413,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10497,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10378,
											"end": 10497,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 10416,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 10416,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10495,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 10416,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10497,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 10378,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10561,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10606,
											"end": 10613,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10597,
											"end": 10603,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10586,
											"end": 10595,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10582,
											"end": 10604,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10561,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10561,
											"end": 10614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10561,
											"end": 10614,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 10561,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10551,
											"end": 10614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10507,
											"end": 10624,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10302,
											"end": 10631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10818,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 10637,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10777,
											"end": 10810,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10771,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10818,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10966,
											"end": 10969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11051,
											"end": 11053,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11046,
											"end": 11049,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10987,
											"end": 11054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 10987,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11054,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 11152,
											"end": 11155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 11063,
											"end": 11156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 11063,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11181,
											"end": 11183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11176,
											"end": 11179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11172,
											"end": 11184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11165,
											"end": 11184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 11190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10824,
											"end": 11190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11400,
											"end": 11402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11385,
											"end": 11403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11377,
											"end": 11403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11449,
											"end": 11458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11443,
											"end": 11447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11459,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11435,
											"end": 11436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11424,
											"end": 11433,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11413,
											"end": 11460,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 11477,
											"end": 11608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11477,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11469,
											"end": 11608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11615,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11196,
											"end": 11615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11621,
											"end": 11793,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 11621,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11761,
											"end": 11785,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F7420746865206F776E65722E00000000000000000000"
										},
										{
											"begin": 11757,
											"end": 11758,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11749,
											"end": 11755,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11745,
											"end": 11759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11738,
											"end": 11786,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11621,
											"end": 11793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11621,
											"end": 11793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 12165,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11799,
											"end": 12165,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11941,
											"end": 11944,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 12021,
											"end": 12024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11962,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 11962,
											"end": 12029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11962,
											"end": 12029,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 11962,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 12029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11955,
											"end": 12029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 12127,
											"end": 12130,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 12038,
											"end": 12131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12038,
											"end": 12131,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 12038,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12156,
											"end": 12158,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12147,
											"end": 12159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12140,
											"end": 12159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 12165,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 12165,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 12165,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11799,
											"end": 12165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12590,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 12171,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12337,
											"end": 12341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12377,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12360,
											"end": 12378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12352,
											"end": 12378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12352,
											"end": 12378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12424,
											"end": 12433,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12418,
											"end": 12422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12414,
											"end": 12434,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12410,
											"end": 12411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12408,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12412,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12578,
											"end": 12582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 12452,
											"end": 12583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12452,
											"end": 12583,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12452,
											"end": 12583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12444,
											"end": 12583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12697,
											"end": 12708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12734,
											"end": 12737,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12596,
											"end": 12743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12749,
											"end": 12863,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12749,
											"end": 12863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13028,
											"end": 13031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 13130,
											"end": 13131,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13125,
											"end": 13128,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 13049,
											"end": 13132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 13049,
											"end": 13132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13132,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 13230,
											"end": 13233,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 13141,
											"end": 13234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 13141,
											"end": 13234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13254,
											"end": 13257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13250,
											"end": 13261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13243,
											"end": 13261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13267,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 13622,
											"end": 13625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 13479,
											"end": 13626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 13479,
											"end": 13626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13472,
											"end": 13626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13472,
											"end": 13626,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13643,
											"end": 13646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13646,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13636,
											"end": 13646,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13652,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13273,
											"end": 13652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13807,
											"end": 13811,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13847,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13834,
											"end": 13843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13830,
											"end": 13848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13822,
											"end": 13848,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13822,
											"end": 13848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13858,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13915,
											"end": 13924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13911,
											"end": 13928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13902,
											"end": 13908,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13858,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 13858,
											"end": 13929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13858,
											"end": 13929,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 13858,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 14007,
											"end": 14009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13996,
											"end": 14005,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 14010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13983,
											"end": 13989,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 14011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 13939,
											"end": 14011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 14011,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 13939,
											"end": 14011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14021,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14089,
											"end": 14091,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14078,
											"end": 14087,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14074,
											"end": 14092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14071,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14021,
											"end": 14093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 14021,
											"end": 14093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14021,
											"end": 14093,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 14021,
											"end": 14093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13658,
											"end": 14100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14106,
											"end": 14331,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 14106,
											"end": 14331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14246,
											"end": 14280,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14242,
											"end": 14243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14234,
											"end": 14240,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14230,
											"end": 14244,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14223,
											"end": 14281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14315,
											"end": 14323,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14310,
											"end": 14312,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14298,
											"end": 14313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14291,
											"end": 14324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14106,
											"end": 14331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14106,
											"end": 14331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14703,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 14337,
											"end": 14703,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 14482,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14564,
											"end": 14566,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 14559,
											"end": 14562,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 14500,
											"end": 14567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 14500,
											"end": 14567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14493,
											"end": 14567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14576,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 14665,
											"end": 14668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14576,
											"end": 14669,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 14576,
											"end": 14669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14576,
											"end": 14669,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 14576,
											"end": 14669,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14696,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14689,
											"end": 14692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14685,
											"end": 14697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14678,
											"end": 14697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14678,
											"end": 14697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14703,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14703,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14703,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14337,
											"end": 14703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14709,
											"end": 15128,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 14709,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14875,
											"end": 14879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14913,
											"end": 14915,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14902,
											"end": 14911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14898,
											"end": 14916,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 14916,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14890,
											"end": 14916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14962,
											"end": 14971,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14956,
											"end": 14960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14952,
											"end": 14972,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 14949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14937,
											"end": 14946,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14933,
											"end": 14950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14926,
											"end": 14973,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 15116,
											"end": 15120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 14990,
											"end": 15121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14990,
											"end": 15121,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 14990,
											"end": 15121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14982,
											"end": 15121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14982,
											"end": 15121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14709,
											"end": 15128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14709,
											"end": 15128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14709,
											"end": 15128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14709,
											"end": 15128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15311,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 15134,
											"end": 15311,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15274,
											"end": 15303,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 15270,
											"end": 15271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15258,
											"end": 15272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15251,
											"end": 15304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15311,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15317,
											"end": 15683,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15317,
											"end": 15683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15459,
											"end": 15462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 15544,
											"end": 15546,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 15539,
											"end": 15542,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15480,
											"end": 15547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 15480,
											"end": 15547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15480,
											"end": 15547,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 15480,
											"end": 15547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15473,
											"end": 15547,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15473,
											"end": 15547,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15645,
											"end": 15648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 15556,
											"end": 15649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15649,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 15556,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15674,
											"end": 15676,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15669,
											"end": 15672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15665,
											"end": 15677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15658,
											"end": 15677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15658,
											"end": 15677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15317,
											"end": 15683,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15317,
											"end": 15683,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15317,
											"end": 15683,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15317,
											"end": 15683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 16108,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 15689,
											"end": 16108,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15855,
											"end": 15859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15893,
											"end": 15895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15882,
											"end": 15891,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15878,
											"end": 15896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15870,
											"end": 15896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15870,
											"end": 15896,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15942,
											"end": 15951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15936,
											"end": 15940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15932,
											"end": 15952,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15928,
											"end": 15929,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15917,
											"end": 15926,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15913,
											"end": 15930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15906,
											"end": 15953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15970,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 16096,
											"end": 16100,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15970,
											"end": 16101,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 15970,
											"end": 16101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15970,
											"end": 16101,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 15970,
											"end": 16101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15962,
											"end": 16101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15962,
											"end": 16101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 16108,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 16108,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 16108,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15689,
											"end": 16108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16296,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 16114,
											"end": 16296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16288,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16250,
											"end": 16251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16242,
											"end": 16248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16238,
											"end": 16252,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16231,
											"end": 16289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16302,
											"end": 16668,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 16302,
											"end": 16668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16444,
											"end": 16447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16465,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 16529,
											"end": 16531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16524,
											"end": 16527,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16465,
											"end": 16532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 16465,
											"end": 16532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16465,
											"end": 16532,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 16465,
											"end": 16532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16532,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16630,
											"end": 16633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 16541,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16541,
											"end": 16634,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 16541,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16659,
											"end": 16661,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16654,
											"end": 16657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16650,
											"end": 16662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16643,
											"end": 16662,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16302,
											"end": 16668,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16302,
											"end": 16668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16302,
											"end": 16668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16302,
											"end": 16668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 17093,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 16674,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16840,
											"end": 16844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16878,
											"end": 16880,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16867,
											"end": 16876,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16863,
											"end": 16881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16855,
											"end": 16881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16855,
											"end": 16881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16927,
											"end": 16936,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16921,
											"end": 16925,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16917,
											"end": 16937,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16913,
											"end": 16914,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16902,
											"end": 16911,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16898,
											"end": 16915,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16891,
											"end": 16938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16955,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 17081,
											"end": 17085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16955,
											"end": 17086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 16955,
											"end": 17086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16955,
											"end": 17086,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 16955,
											"end": 17086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16947,
											"end": 17086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16947,
											"end": 17086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 17093,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 17093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 17093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16674,
											"end": 17093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateRewards(uint256)": "d3ea4350",
							"claim(uint256)": "379607f5",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(uint256)": "f301af42",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnedBy(uint256)": "8488cc41",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xf316f6a5ad874075367f618cd94d2b484ed184cec061fdc4c0d21dcb7ef059c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59bdeac4b4fddcdfe4314235f701d9af56bacffeba6e95ce7990f39516bd9493\",\"dweb:/ipfs/QmbV2gjcXpXFW5H8w6gkHMhrbtURzDRoJmneN1seeC4vq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 445,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 478,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnedBy",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 482,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 485,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nameLocations": [
											"424:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "756:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "773:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"INFT": [
							437
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							726
						]
					},
					"id": 727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 113,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 153,
							"src": "117:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 314,
							"src": "186:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 269,
							"src": "262:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 410,
							"src": "327:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "INFT",
							"nameLocation": "397:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "438b6300",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "417:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "439:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "431:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:16:8"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "470:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "470:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "470:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:18:8"
									},
									"scope": 437,
									"src": "408:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 727,
							"src": "387:103:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Ownable",
										"nameLocations": [
											"517:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "517:7:8"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "517:7:8"
								},
								{
									"baseName": {
										"id": 440,
										"name": "ERC721Holder",
										"nameLocations": [
											"526:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "526:12:8"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "526:12:8"
								},
								{
									"baseName": {
										"id": 442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"540:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "540:15:8"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "540:15:8"
								}
							],
							"canonicalName": "SacredTemple",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "501:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "570:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "562:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 449,
									"libraryName": {
										"id": 446,
										"name": "Counters",
										"nameLocations": [
											"595:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "595:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "589:36:8",
									"typeName": {
										"id": 448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 447,
											"name": "Counters.Counter",
											"nameLocations": [
												"608:8:8",
												"617:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "608:16:8"
										},
										"referencedDeclaration": 341,
										"src": "608:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "655:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "630:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 451,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 450,
											"name": "Counters.Counter",
											"nameLocations": [
												"630:8:8",
												"639:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "630:16:8"
										},
										"referencedDeclaration": 341,
										"src": "630:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39",
									"id": 460,
									"name": "NFTStaked",
									"nameLocation": "685:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "695:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "718:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "710:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "735:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "727:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:47:8"
									},
									"src": "679:63:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b",
									"id": 468,
									"name": "NFTUnstaked",
									"nameLocation": "753:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "773:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "765:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "788:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "780:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "797:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:47:8"
									},
									"src": "747:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 474,
									"name": "Claimed",
									"nameLocation": "823:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "839:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "831:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "854:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "846:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:31:8"
									},
									"src": "817:45:8"
								},
								{
									"constant": false,
									"functionSelector": "8488cc41",
									"id": 478,
									"mutability": "mutable",
									"name": "tokenOwnedBy",
									"nameLocation": "904:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "868:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 477,
										"keyType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "877:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "868:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f301af42",
									"id": 482,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "958:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "922:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 481,
										"keyType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "931:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "922:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "tokenStaked",
									"nameLocation": "981:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "971:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "971:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"nodeType": "ArrayTypeName",
										"src": "971:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1034:44:8",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1044:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1059:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1044:27:8"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1020:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1012:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:22:8"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:8"
									},
									"scope": 726,
									"src": "999:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1148:44:8",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1158:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1173:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1158:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1158:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nameLocations": [
													"1138:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1138:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1138:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "1093:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1115:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1107:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:22:8"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:8"
									},
									"scope": 726,
									"src": "1084:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1239:209:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1288:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1292:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1288:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1308:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1300:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1300:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1300:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1315:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1257:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1249:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1249:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1271:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1249:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1249:74:8"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1333:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1346:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1333:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1357:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1361:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1357:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1333:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1333:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1394:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1377:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1377:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1377:25:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 538,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1412:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1430:9:8",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1412:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1412:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1207:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1221:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1213:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:8"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:8"
									},
									"scope": 726,
									"src": "1198:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "1510:400:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1528:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1528:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1553:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1557:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1553:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1528:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1520:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1520:70:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1600:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1607:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1620:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1607:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1600:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 566,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1638:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1656:9:8",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1638:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1638:29:8"
											},
											{
												"assignments": [
													572,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1683:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 609,
														"src": "1678:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 571,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1678:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1757:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 575,
																			"name": "tokenOwnedBy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "1704:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 577,
																		"indexExpression": {
																			"id": 576,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1717:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1704:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1696:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1696:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1696:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1727:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1696:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 580,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1739:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1747:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1739:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1696:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1677:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1778:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1770:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1770:16:8"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1796:23:8",
													"subExpression": {
														"baseExpression": {
															"id": 591,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "1803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1811:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1803:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1796:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1876:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1868:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1868:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1868:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1883:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1887:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1883:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1895:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1837:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1829:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1829:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "1829:74:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nameLocations": [
													"1488:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1488:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1463:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1479:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1471:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:17:8"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:0:8"
									},
									"scope": 726,
									"src": "1454:456:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1970:236:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 618,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1988:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 620,
																"indexExpression": {
																	"id": 619,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2001:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1988:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2013:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2017:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2013:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1988:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2025:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1980:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1980:70:8"
											},
											{
												"assignments": [
													628,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2066:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "2061:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 627,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2061:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 631,
																			"name": "tokenOwnedBy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "2087:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 633,
																		"indexExpression": {
																			"id": 632,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "2100:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2087:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2079:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2079:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2079:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2110:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2079:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 636,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2122:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2130:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2122:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2079:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2161:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2153:16:8"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 647,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2179:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "2187:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2179:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2198:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2179:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2179:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "nonReentrant",
												"nameLocations": [
													"1948:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1948:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:12:8"
										}
									],
									"name": "claim",
									"nameLocation": "1925:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:17:8"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:0:8"
									},
									"scope": 726,
									"src": "1916:290:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2283:40:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 661,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 663,
													"indexExpression": {
														"id": 662,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "2308:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2300:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 664,
												"nodeType": "Return",
												"src": "2293:23:8"
											}
										]
									},
									"functionSelector": "d3ea4350",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "2221:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2246:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2238:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:17:8"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2275:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:9:8"
									},
									"scope": 726,
									"src": "2212:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "2356:396:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 670,
																		"name": "_stakedNFTCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "2374:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$341_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2392:7:8",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 353,
																	"src": "2374:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2374:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2405:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2374:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e46547320617265207374616b6564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															},
															"value": "No NFTs are staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2366:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "2366:63:8"
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "sharePerEach",
														"nameLocation": "2447:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "2439:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2439:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 680,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2462:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2466:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2462:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 682,
																"name": "_stakedNFTCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2474:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$341_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2492:7:8",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "2474:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2474:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2462:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2439:62:8"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "tokensStaked",
														"nameLocation": "2528:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "2511:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 689,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2511:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 690,
															"nodeType": "ArrayTypeName",
															"src": "2511:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 698,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2584:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2576:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2576:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2576:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 693,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2548:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 692,
																"name": "INFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "2543:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INFT_$437_$",
																	"typeString": "type(contract INFT)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2543:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFT_$437",
																"typeString": "contract INFT"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2562:13:8",
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "2543:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2511:79:8"
											},
											{
												"body": {
													"id": 722,
													"nodeType": "Block",
													"src": "2653:93:8",
													"statements": [
														{
															"expression": {
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 710,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2667:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 714,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 711,
																			"name": "tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "2675:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 713,
																		"indexExpression": {
																			"id": 712,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "2687:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2675:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2667:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 715,
																	"name": "sharePerEach",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "2694:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2667:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"nodeType": "ExpressionStatement",
															"src": "2667:39:8"
														},
														{
															"id": 721,
															"nodeType": "UncheckedBlock",
															"src": "2720:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2731:3:8",
																		"subExpression": {
																			"id": 718,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "2733:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 720,
																	"nodeType": "ExpressionStatement",
																	"src": "2731:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 706,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "2628:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 707,
															"name": "tokensStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2632:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2645:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2632:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"initializationExpression": {
													"assignments": [
														703
													],
													"declarations": [
														{
															"constant": false,
															"id": 703,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2621:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 723,
															"src": "2613:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 702,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2613:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 705,
													"initialValue": {
														"hexValue": "30",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2625:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2613:13:8"
												},
												"nodeType": "ForStatement",
												"src": "2609:137:8"
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:2:8"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:0:8"
									},
									"scope": 726,
									"src": "2329:423:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 727,
							"src": "492:2262:8",
							"usedErrors": []
						}
					],
					"src": "32:2722:8"
				},
				"id": 8
			}
		}
	}
}