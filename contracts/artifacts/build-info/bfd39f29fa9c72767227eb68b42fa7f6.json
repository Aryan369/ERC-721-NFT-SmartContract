{
	"id": "bfd39f29fa9c72767227eb68b42fa7f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ninterface NFT {\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\n}\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    address _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnedBy;\n    mapping (uint256 => uint256) public rewards;\n    uint256[] tokenStaked;\n\n    constructor (address nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(address nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnedBy[tokenId] = msg.sender;\n        tokenStaked.push(tokenId);\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnedBy[tokenId];\n        _stakedNFTCounter.decrement();\n        (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    receive() external payable {\n        uint256 sharePerEach = msg.value / _stakedNFTCounter.current();\n        uint256[] memory tokensStaked = NFT(_nftContract).walletOfOwner(address(this));\n        \n        for(uint256 i = 0; i < tokensStaked.length;){\n            rewards[tokenStaked[i]] += sharePerEach;\n            unchecked {++i;}\n        }\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_11:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_13:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_47\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_48:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_50\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_21:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_22:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1545   */\n    tag_23:\n        /* \"#utility.yul\":1484:1490   */\n      0x00\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1531:1538   */\n      not\n        /* \"#utility.yul\":1526:1528   */\n      0x1f\n        /* \"#utility.yul\":1519:1524   */\n      dup4\n        /* \"#utility.yul\":1515:1529   */\n      add\n        /* \"#utility.yul\":1511:1539   */\n      and\n        /* \"#utility.yul\":1501:1539   */\n      swap1\n      pop\n        /* \"#utility.yul\":1443:1545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1551:1731   */\n    tag_24:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x41\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n        /* \"#utility.yul\":1737:2018   */\n    tag_25:\n        /* \"#utility.yul\":1820:1847   */\n      tag_56\n        /* \"#utility.yul\":1842:1846   */\n      dup3\n        /* \"#utility.yul\":1820:1847   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1812:1818   */\n      dup2\n        /* \"#utility.yul\":1808:1848   */\n      add\n        /* \"#utility.yul\":1950:1956   */\n      dup2\n        /* \"#utility.yul\":1938:1948   */\n      dup2\n        /* \"#utility.yul\":1935:1957   */\n      lt\n        /* \"#utility.yul\":1914:1932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1902:1912   */\n      dup3\n        /* \"#utility.yul\":1899:1933   */\n      gt\n        /* \"#utility.yul\":1896:1958   */\n      or\n        /* \"#utility.yul\":1893:1981   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1961:1979   */\n      tag_58\n      tag_24\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1893:1981   */\n    tag_57:\n        /* \"#utility.yul\":2001:2011   */\n      dup1\n        /* \"#utility.yul\":1997:1999   */\n      0x40\n        /* \"#utility.yul\":1990:2012   */\n      mstore\n        /* \"#utility.yul\":1780:2018   */\n      pop\n        /* \"#utility.yul\":1737:2018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2024:2153   */\n    tag_26:\n        /* \"#utility.yul\":2058:2064   */\n      0x00\n        /* \"#utility.yul\":2085:2105   */\n      tag_60\n      tag_11\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2075:2105   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2147   */\n      tag_61\n        /* \"#utility.yul\":2142:2146   */\n      dup3\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2114:2147   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2024:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2466   */\n    tag_27:\n        /* \"#utility.yul\":2220:2224   */\n      0x00\n        /* \"#utility.yul\":2310:2328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2302:2308   */\n      dup3\n        /* \"#utility.yul\":2299:2329   */\n      gt\n        /* \"#utility.yul\":2296:2352   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2332:2350   */\n      tag_64\n      tag_24\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2296:2352   */\n    tag_63:\n        /* \"#utility.yul\":2370:2399   */\n      tag_65\n        /* \"#utility.yul\":2392:2398   */\n      dup3\n        /* \"#utility.yul\":2370:2399   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2362:2399   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2458   */\n      0x20\n        /* \"#utility.yul\":2448:2452   */\n      dup2\n        /* \"#utility.yul\":2444:2459   */\n      add\n        /* \"#utility.yul\":2436:2459   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2472:2618   */\n    tag_28:\n        /* \"#utility.yul\":2569:2575   */\n      dup3\n        /* \"#utility.yul\":2564:2567   */\n      dup2\n        /* \"#utility.yul\":2559:2562   */\n      dup4\n        /* \"#utility.yul\":2546:2576   */\n      calldatacopy\n        /* \"#utility.yul\":2610:2611   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup4\n        /* \"#utility.yul\":2596:2599   */\n      dup4\n        /* \"#utility.yul\":2592:2608   */\n      add\n        /* \"#utility.yul\":2585:2612   */\n      mstore\n        /* \"#utility.yul\":2472:2618   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:3047   */\n    tag_29:\n        /* \"#utility.yul\":2701:2706   */\n      0x00\n        /* \"#utility.yul\":2726:2791   */\n      tag_68\n        /* \"#utility.yul\":2742:2790   */\n      tag_69\n        /* \"#utility.yul\":2783:2789   */\n      dup5\n        /* \"#utility.yul\":2742:2790   */\n      tag_27\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2726:2791   */\n      tag_26\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2717:2791   */\n      swap1\n      pop\n        /* \"#utility.yul\":2814:2820   */\n      dup3\n        /* \"#utility.yul\":2807:2812   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      mstore\n        /* \"#utility.yul\":2852:2856   */\n      0x20\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2841:2857   */\n      add\n        /* \"#utility.yul\":2890:2893   */\n      dup5\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2879   */\n      dup5\n        /* \"#utility.yul\":2872:2888   */\n      add\n        /* \"#utility.yul\":2869:2894   */\n      gt\n        /* \"#utility.yul\":2866:2978   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2897:2976   */\n      tag_71\n      tag_22\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2866:2978   */\n    tag_70:\n        /* \"#utility.yul\":2987:3041   */\n      tag_72\n        /* \"#utility.yul\":3034:3040   */\n      dup5\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2987:3041   */\n      tag_28\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2707:3047   */\n      pop\n        /* \"#utility.yul\":2624:3047   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3404   */\n    tag_30:\n        /* \"#utility.yul\":3121:3126   */\n      0x00\n        /* \"#utility.yul\":3170:3173   */\n      dup3\n        /* \"#utility.yul\":3163:3167   */\n      0x1f\n        /* \"#utility.yul\":3155:3161   */\n      dup4\n        /* \"#utility.yul\":3151:3168   */\n      add\n        /* \"#utility.yul\":3147:3174   */\n      slt\n        /* \"#utility.yul\":3137:3259   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3178:3257   */\n      tag_75\n      tag_21\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3137:3259   */\n    tag_74:\n        /* \"#utility.yul\":3295:3301   */\n      dup2\n        /* \"#utility.yul\":3282:3302   */\n      calldataload\n        /* \"#utility.yul\":3320:3398   */\n      tag_76\n        /* \"#utility.yul\":3394:3397   */\n      dup5\n        /* \"#utility.yul\":3386:3392   */\n      dup3\n        /* \"#utility.yul\":3379:3383   */\n      0x20\n        /* \"#utility.yul\":3371:3377   */\n      dup7\n        /* \"#utility.yul\":3367:3384   */\n      add\n        /* \"#utility.yul\":3320:3398   */\n      tag_29\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3311:3398   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3404   */\n      pop\n        /* \"#utility.yul\":3066:3404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3410:4353   */\n    tag_6:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3513:3519   */\n      dup1\n        /* \"#utility.yul\":3521:3527   */\n      0x00\n        /* \"#utility.yul\":3529:3535   */\n      dup1\n        /* \"#utility.yul\":3578:3581   */\n      0x80\n        /* \"#utility.yul\":3566:3575   */\n      dup6\n        /* \"#utility.yul\":3557:3564   */\n      dup8\n        /* \"#utility.yul\":3553:3576   */\n      sub\n        /* \"#utility.yul\":3549:3582   */\n      slt\n        /* \"#utility.yul\":3546:3666   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":3585:3664   */\n      tag_79\n      tag_12\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3546:3666   */\n    tag_78:\n        /* \"#utility.yul\":3705:3706   */\n      0x00\n        /* \"#utility.yul\":3730:3783   */\n      tag_80\n        /* \"#utility.yul\":3775:3782   */\n      dup8\n        /* \"#utility.yul\":3766:3772   */\n      dup3\n        /* \"#utility.yul\":3755:3764   */\n      dup9\n        /* \"#utility.yul\":3751:3773   */\n      add\n        /* \"#utility.yul\":3730:3783   */\n      tag_17\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3720:3783   */\n      swap5\n      pop\n        /* \"#utility.yul\":3676:3793   */\n      pop\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3858:3911   */\n      tag_81\n        /* \"#utility.yul\":3903:3910   */\n      dup8\n        /* \"#utility.yul\":3894:3900   */\n      dup3\n        /* \"#utility.yul\":3883:3892   */\n      dup9\n        /* \"#utility.yul\":3879:3901   */\n      add\n        /* \"#utility.yul\":3858:3911   */\n      tag_17\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3848:3911   */\n      swap4\n      pop\n        /* \"#utility.yul\":3803:3921   */\n      pop\n        /* \"#utility.yul\":3960:3962   */\n      0x40\n        /* \"#utility.yul\":3986:4039   */\n      tag_82\n        /* \"#utility.yul\":4031:4038   */\n      dup8\n        /* \"#utility.yul\":4022:4028   */\n      dup3\n        /* \"#utility.yul\":4011:4020   */\n      dup9\n        /* \"#utility.yul\":4007:4029   */\n      add\n        /* \"#utility.yul\":3986:4039   */\n      tag_20\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3976:4039   */\n      swap3\n      pop\n        /* \"#utility.yul\":3931:4049   */\n      pop\n        /* \"#utility.yul\":4116:4118   */\n      0x60\n        /* \"#utility.yul\":4105:4114   */\n      dup6\n        /* \"#utility.yul\":4101:4119   */\n      add\n        /* \"#utility.yul\":4088:4120   */\n      calldataload\n        /* \"#utility.yul\":4147:4165   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4139:4145   */\n      dup2\n        /* \"#utility.yul\":4136:4166   */\n      gt\n        /* \"#utility.yul\":4133:4250   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":4169:4248   */\n      tag_84\n      tag_13\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4133:4250   */\n    tag_83:\n        /* \"#utility.yul\":4274:4336   */\n      tag_85\n        /* \"#utility.yul\":4328:4335   */\n      dup8\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4308:4317   */\n      dup9\n        /* \"#utility.yul\":4304:4326   */\n      add\n        /* \"#utility.yul\":4274:4336   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4264:4336   */\n      swap2\n      pop\n        /* \"#utility.yul\":4059:4346   */\n      pop\n        /* \"#utility.yul\":3410:4353   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4359:4508   */\n    tag_31:\n        /* \"#utility.yul\":4395:4402   */\n      0x00\n        /* \"#utility.yul\":4435:4501   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4428:4433   */\n      dup3\n        /* \"#utility.yul\":4424:4502   */\n      and\n        /* \"#utility.yul\":4413:4502   */\n      swap1\n      pop\n        /* \"#utility.yul\":4359:4508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4629   */\n    tag_32:\n        /* \"#utility.yul\":4599:4622   */\n      tag_88\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4599:4622   */\n      tag_31\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4594:4597   */\n      dup3\n        /* \"#utility.yul\":4587:4623   */\n      mstore\n        /* \"#utility.yul\":4514:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4853   */\n    tag_9:\n        /* \"#utility.yul\":4726:4730   */\n      0x00\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4753:4762   */\n      dup3\n        /* \"#utility.yul\":4749:4767   */\n      add\n        /* \"#utility.yul\":4741:4767   */\n      swap1\n      pop\n        /* \"#utility.yul\":4777:4846   */\n      tag_90\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4832:4841   */\n      dup4\n        /* \"#utility.yul\":4828:4845   */\n      add\n        /* \"#utility.yul\":4819:4825   */\n      dup5\n        /* \"#utility.yul\":4777:4846   */\n      tag_32\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":4635:4853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x806D47964AC7A0CD463EEA1CC4933296A2263F4F PUSH27 0x6964AAB75D8B1282C0C064736F6C63430008110033000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": 96,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4856:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1519:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1474:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1484:6:9",
														"type": ""
													}
												],
												"src": "1443:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1790:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "1842:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1820:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1820:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1794:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1959:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1961:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1961:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1961:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1902:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1914:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1899:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1899:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1938:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1896:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:62:9"
															},
															"nodeType": "YulIf",
															"src": "1893:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2001:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1990:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1766:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1774:4:9",
														"type": ""
													}
												],
												"src": "1737:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2065:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2075:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2085:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2134:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2142:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2114:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2114:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2049:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2058:6:9",
														"type": ""
													}
												],
												"src": "2024:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2225:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2332:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2302:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2299:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:30:9"
															},
															"nodeType": "YulIf",
															"src": "2296:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2392:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2370:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2436:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2448:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2454:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2436:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2209:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2220:4:9",
														"type": ""
													}
												],
												"src": "2159:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2559:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2564:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2569:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2546:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2546:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2546:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2596:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2601:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2592:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2610:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2585:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2518:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2523:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2528:6:9",
														"type": ""
													}
												],
												"src": "2472:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2783:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2742:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2726:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2717:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2807:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2800:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2800:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2830:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2845:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2852:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2841:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2834:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2897:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2876:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2881:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2890:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:25:9"
															},
															"nodeType": "YulIf",
															"src": "2866:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3034:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2987:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2987:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2680:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2685:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2693:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2701:5:9",
														"type": ""
													}
												],
												"src": "2624:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3127:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3176:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3178:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3178:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3178:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3155:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3163:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3151:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3151:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3170:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3147:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:35:9"
															},
															"nodeType": "YulIf",
															"src": "3137:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3268:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3295:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3282:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3282:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3272:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3311:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3386:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3394:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3320:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3105:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3113:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3121:5:9",
														"type": ""
													}
												],
												"src": "3066:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3536:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3583:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3585:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3585:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3585:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3557:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3566:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3553:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3578:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:33:9"
															},
															"nodeType": "YulIf",
															"src": "3546:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3676:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3691:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3705:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3695:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3720:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3730:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3720:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3803:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3848:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3883:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3894:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3879:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3879:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3903:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3858:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3858:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3931:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3946:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3950:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3976:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4011:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4022:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4007:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4007:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4031:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3986:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3976:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4059:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4074:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4105:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4116:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4101:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4101:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4088:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4088:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4078:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4167:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4169:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4169:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4169:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4139:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4147:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4136:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4136:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4133:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4264:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4308:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4319:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4304:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4304:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4328:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4274:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4274:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4264:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3513:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3521:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3529:6:9",
														"type": ""
													}
												],
												"src": "3410:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4403:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4413:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4428:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4435:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4413:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4385:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4395:7:9",
														"type": ""
													}
												],
												"src": "4359:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4577:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4594:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4599:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4599:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4587:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4565:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4572:3:9",
														"type": ""
													}
												],
												"src": "4514:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4731:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4741:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4819:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4832:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4843:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4828:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4777:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4703:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4715:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4726:4:9",
														"type": ""
													}
												],
												"src": "4635:218:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x806D47964AC7A0CD463EEA1CC4933296A2263F4F PUSH27 0x6964AAB75D8B1282C0C064736F6C63430008110033000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:146::-;2569:6;2564:3;2559;2546:30;2610:1;2601:6;2596:3;2592:16;2585:27;2472:146;;;:::o;2624:423::-;2701:5;2726:65;2742:48;2783:6;2742:48;:::i;:::-;2726:65;:::i;:::-;2717:74;;2814:6;2807:5;2800:21;2852:4;2845:5;2841:16;2890:3;2881:6;2876:3;2872:16;2869:25;2866:112;;;2897:79;;:::i;:::-;2866:112;2987:54;3034:6;3029:3;3024;2987:54;:::i;:::-;2707:340;2624:423;;;;;:::o;3066:338::-;3121:5;3170:3;3163:4;3155:6;3151:17;3147:27;3137:122;;3178:79;;:::i;:::-;3137:122;3295:6;3282:20;3320:78;3394:3;3386:6;3379:4;3371:6;3367:17;3320:78;:::i;:::-;3311:87;;3127:277;3066:338;;;;:::o;3410:943::-;3505:6;3513;3521;3529;3578:3;3566:9;3557:7;3553:23;3549:33;3546:120;;;3585:79;;:::i;:::-;3546:120;3705:1;3730:53;3775:7;3766:6;3755:9;3751:22;3730:53;:::i;:::-;3720:63;;3676:117;3832:2;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3803:118;3960:2;3986:53;4031:7;4022:6;4011:9;4007:22;3986:53;:::i;:::-;3976:63;;3931:118;4116:2;4105:9;4101:18;4088:32;4147:18;4139:6;4136:30;4133:117;;;4169:79;;:::i;:::-;4133:117;4274:62;4328:7;4319:6;4308:9;4304:22;4274:62;:::i;:::-;4264:72;;4059:287;3410:943;;;;;;;:::o;4359:149::-;4395:7;4435:66;4428:5;4424:78;4413:89;;4359:149;;;:::o;4514:115::-;4599:23;4616:5;4599:23;:::i;:::-;4594:3;4587:36;4514:115;;:::o;4635:218::-;4726:4;4764:2;4753:9;4749:18;4741:26;;4777:69;4843:1;4832:9;4828:17;4819:6;4777:69;:::i;:::-;4635:218;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073806d47964ac7a0cd463eea1cc4933296a2263f4f7a6964aab75d8b1282c0c064736f6c63430008110033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1515,
											"end": 1529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1820,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1820,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1818,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1808,
											"end": 1848,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1938,
											"end": 1948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1935,
											"end": 1957,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1902,
											"end": 1912,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1933,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1958,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1961,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 1999,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1990,
											"end": 2012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1780,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1737,
											"end": 2018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2114,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2114,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2299,
											"end": 2329,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2296,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2370,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2370,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2458,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2459,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2562,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2546,
											"end": 2576,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2596,
											"end": 2599,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2585,
											"end": 2612,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2472,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2742,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2742,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2726,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2726,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2812,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2856,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2893,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2869,
											"end": 2894,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2897,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2897,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2866,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3034,
											"end": 3040,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 2987,
											"end": 3041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2987,
											"end": 3041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3174,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3178,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3178,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3137,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3302,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3394,
											"end": 3397,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3377,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 3320,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3320,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3398,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3066,
											"end": 3404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3519,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3566,
											"end": 3575,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3582,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3585,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 3585,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3546,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3706,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3751,
											"end": 3773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3730,
											"end": 3783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3730,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3676,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 3858,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3858,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4011,
											"end": 4020,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3986,
											"end": 4039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 3986,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 4039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3931,
											"end": 4049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4119,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4088,
											"end": 4120,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4165,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4166,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 4169,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4169,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4133,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4328,
											"end": 4335,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4308,
											"end": 4317,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4304,
											"end": 4326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4274,
											"end": 4336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4274,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4264,
											"end": 4336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3410,
											"end": 4353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4501,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4428,
											"end": 4433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4502,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4359,
											"end": 4508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4599,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 4599,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 4597,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4587,
											"end": 4623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4749,
											"end": 4767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4741,
											"end": 4767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 4825,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4777,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4777,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP8 SWAP6 DUP11 DUP16 PUSH18 0x7437DA2B4469630D1766B155A880A2132CFC GASLIMIT 0xE1 SWAP15 0xBE 0xC1 0xFC BALANCE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 SWAP8 SWAP6 DUP11 DUP16 PUSH18 0x7437DA2B4469630D1766B155A880A2132CFC GASLIMIT 0xE1 SWAP15 0xBE 0xC1 0xFC BALANCE MSTORE8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e97958a8f717437da2b4469630d1766b155a880a2132cfc45e19ebec1fc315364736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"NFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"NFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xa6bd273663275dbd3af37cd4a1eba8fc4fef46bc8faddade505a89f71103221a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94a5630e82c090ffbba111eae12219bfcdd8360944b4b93064b3eaab1b04abd3\",\"dweb:/ipfs/QmaEYcxf9L4V98ammpvpw26MBNknkdoNTBixMaEvDfkXLp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":491:2233  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":998:1077  constructor (address nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1813  _status */\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1058:1070  nftContract_ */\n  dup1\n    /* \"contracts/NFTStaking.sol\":1043:1055  _nftContract */\n  0x02\n  0x00\n    /* \"contracts/NFTStaking.sol\":1043:1070  _nftContract = nftContract_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":998:1077  constructor (address nftContract_) {... */\n  pop\n    /* \"contracts/NFTStaking.sol\":491:2233  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_30\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_32\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_33:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_35\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_38\n  tag_18\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":932:1051   */\ntag_37:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_39\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTStaking.sol\":491:2233  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":491:2233  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf301af42\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8488cc41\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTStaking.sol\":1919:1939  uint256 sharePerEach */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1954:1981  _stakedNFTCounter.current() */\n      tag_15\n        /* \"contracts/NFTStaking.sol\":1954:1971  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1954:1979  _stakedNFTCounter.current */\n      tag_16\n        /* \"contracts/NFTStaking.sol\":1954:1981  _stakedNFTCounter.current() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/NFTStaking.sol\":1942:1951  msg.value */\n      callvalue\n        /* \"contracts/NFTStaking.sol\":1942:1981  msg.value / _stakedNFTCounter.current() */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contracts/NFTStaking.sol\":1919:1981  uint256 sharePerEach = msg.value / _stakedNFTCounter.current() */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1991:2020  uint256[] memory tokensStaked */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2027:2039  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":2023:2054  NFT(_nftContract).walletOfOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x438b6300\n        /* \"contracts/NFTStaking.sol\":2063:2067  this */\n      address\n        /* \"contracts/NFTStaking.sol\":2023:2069  NFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/NFTStaking.sol\":1991:2069  uint256[] memory tokensStaked = NFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2092:2101  uint256 i */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2088:2225  for(uint256 i = 0; i < tokensStaked.length;){... */\n    tag_25:\n        /* \"contracts/NFTStaking.sol\":2111:2123  tokensStaked */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2111:2130  tokensStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":2107:2108  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2107:2130  i < tokensStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":2088:2225  for(uint256 i = 0; i < tokensStaked.length;){... */\n      iszero\n      tag_26\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2173:2185  sharePerEach */\n      dup3\n        /* \"contracts/NFTStaking.sol\":2146:2153  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2146:2169  rewards[tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2154:2165  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2166:2167  i */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2154:2168  tokenStaked[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_28\n      jumpi\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n    tag_28:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":2146:2169  rewards[tokenStaked[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":2146:2185  rewards[tokenStaked[i]] += sharePerEach */\n      dup3\n      dup3\n      sload\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2210:2213  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2088:2225  for(uint256 i = 0; i < tokensStaked.length;){... */\n      jump(tag_25)\n    tag_26:\n      stop\n        /* \"contracts/NFTStaking.sol\":491:2233  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1453:1876  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/NFTStaking.sol\":867:915  mapping (uint256 => address) public tokenOwnedBy */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1197:1447  function stake(uint256 tokenId) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/NFTStaking.sol\":921:964  mapping (uint256 => uint256) public rewards */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1083:1191  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_38:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1453:1876  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_45:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1552:1562  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1527:1562  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1527:1539  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1527:1548  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1540:1547  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1527:1548  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1527:1562  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":1519:1589  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/NFTStaking.sol\":1606:1618  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1606:1627  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1619:1626  tokenId */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1606:1627  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1599:1627  delete tokenOwnedBy[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1637:1666  _stakedNFTCounter.decrement() */\n      tag_87\n        /* \"contracts/NFTStaking.sol\":1637:1654  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1637:1664  _stakedNFTCounter.decrement */\n      tag_88\n        /* \"contracts/NFTStaking.sol\":1637:1666  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/NFTStaking.sol\":1677:1689  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1703:1715  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1703:1724  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1716:1723  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1703:1724  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1695:1730  payable(tokenOwnedBy[tokenId]).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1738:1745  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1738:1754  rewards[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1746:1753  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1738:1754  rewards[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1695:1759  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      mload(0x40)\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_93\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_92)\n    tag_93:\n      0x60\n      swap2\n      pop\n    tag_92:\n      pop\n        /* \"contracts/NFTStaking.sol\":1676:1759  (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1777:1784  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1769:1785  require(success) */\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n        /* \"contracts/NFTStaking.sol\":1803:1815  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1795:1833  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1842:1846  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1849:1859  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1861:1868  tokenId */\n      dup6\n        /* \"contracts/NFTStaking.sol\":1795:1869  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1509:1876  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1453:1876  function unstake(uint256 tokenId) nonReentrant external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_102\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_104\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_105\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":867:915  mapping (uint256 => address) public tokenOwnedBy */\n    tag_52:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1197:1447  function stake(uint256 tokenId) external {... */\n    tag_61:\n        /* \"contracts/NFTStaking.sol\":1256:1268  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1248:1286  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1287:1297  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1307:1311  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1314:1321  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1248:1322  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_108:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1356:1366  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1332:1344  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1332:1353  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1345:1352  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1332:1353  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1332:1366  tokenOwnedBy[tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1376:1387  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":1393:1400  tokenId */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1376:1401  tokenStaked.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStaking.sol\":1411:1440  _stakedNFTCounter.increment() */\n      tag_113\n        /* \"contracts/NFTStaking.sol\":1411:1428  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1411:1438  _stakedNFTCounter.increment */\n      tag_114\n        /* \"contracts/NFTStaking.sol\":1411:1440  _stakedNFTCounter.increment() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/NFTStaking.sol\":1197:1447  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_102\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_121\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_105\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":921:964  mapping (uint256 => uint256) public rewards */\n    tag_70:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1083:1191  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_102\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/NFTStaking.sol\":1172:1184  nftContract_ */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1157:1169  _nftContract */\n      0x02\n      0x00\n        /* \"contracts/NFTStaking.sol\":1157:1184  _nftContract = nftContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1083:1191  function setNftContact(address nftContract_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      tag_132\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1427  owner */\n      tag_56\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_139:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_140:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x12\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:456   */\n    tag_141:\n        /* \"#utility.yul\":324:401   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":321:322   */\n      0x00\n        /* \"#utility.yul\":314:402   */\n      mstore\n        /* \"#utility.yul\":421:425   */\n      0x11\n        /* \"#utility.yul\":418:419   */\n      0x04\n        /* \"#utility.yul\":411:426   */\n      mstore\n        /* \"#utility.yul\":445:449   */\n      0x24\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":435:450   */\n      revert\n        /* \"#utility.yul\":462:647   */\n    tag_18:\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":519:539   */\n      tag_189\n        /* \"#utility.yul\":537:538   */\n      dup3\n        /* \"#utility.yul\":519:539   */\n      tag_139\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":514:539   */\n      swap2\n      pop\n        /* \"#utility.yul\":553:573   */\n      tag_190\n        /* \"#utility.yul\":571:572   */\n      dup4\n        /* \"#utility.yul\":553:573   */\n      tag_139\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":548:573   */\n      swap3\n      pop\n        /* \"#utility.yul\":592:593   */\n      dup3\n        /* \"#utility.yul\":582:617   */\n      tag_191\n      jumpi\n        /* \"#utility.yul\":597:615   */\n      tag_192\n      tag_140\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":582:617   */\n    tag_191:\n        /* \"#utility.yul\":639:640   */\n      dup3\n        /* \"#utility.yul\":636:637   */\n      dup3\n        /* \"#utility.yul\":632:641   */\n      div\n        /* \"#utility.yul\":627:641   */\n      swap1\n      pop\n        /* \"#utility.yul\":462:647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":653:779   */\n    tag_142:\n        /* \"#utility.yul\":690:697   */\n      0x00\n        /* \"#utility.yul\":730:772   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":723:728   */\n      dup3\n        /* \"#utility.yul\":719:773   */\n      and\n        /* \"#utility.yul\":708:773   */\n      swap1\n      pop\n        /* \"#utility.yul\":653:779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":785:881   */\n    tag_143:\n        /* \"#utility.yul\":822:829   */\n      0x00\n        /* \"#utility.yul\":851:875   */\n      tag_195\n        /* \"#utility.yul\":869:874   */\n      dup3\n        /* \"#utility.yul\":851:875   */\n      tag_142\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":840:875   */\n      swap1\n      pop\n        /* \"#utility.yul\":785:881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":887:1005   */\n    tag_144:\n        /* \"#utility.yul\":974:998   */\n      tag_197\n        /* \"#utility.yul\":992:997   */\n      dup2\n        /* \"#utility.yul\":974:998   */\n      tag_143\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":969:972   */\n      dup3\n        /* \"#utility.yul\":962:999   */\n      mstore\n        /* \"#utility.yul\":887:1005   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1011:1233   */\n    tag_20:\n        /* \"#utility.yul\":1104:1108   */\n      0x00\n        /* \"#utility.yul\":1142:1144   */\n      0x20\n        /* \"#utility.yul\":1131:1140   */\n      dup3\n        /* \"#utility.yul\":1127:1145   */\n      add\n        /* \"#utility.yul\":1119:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1155:1226   */\n      tag_199\n        /* \"#utility.yul\":1223:1224   */\n      0x00\n        /* \"#utility.yul\":1212:1221   */\n      dup4\n        /* \"#utility.yul\":1208:1225   */\n      add\n        /* \"#utility.yul\":1199:1205   */\n      dup5\n        /* \"#utility.yul\":1155:1226   */\n      tag_144\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1011:1233   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1314   */\n    tag_145:\n        /* \"#utility.yul\":1272:1278   */\n      0x00\n        /* \"#utility.yul\":1305:1307   */\n      0x40\n        /* \"#utility.yul\":1299:1308   */\n      mload\n        /* \"#utility.yul\":1289:1308   */\n      swap1\n      pop\n        /* \"#utility.yul\":1239:1314   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1320:1437   */\n    tag_146:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_147:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1566:1683   */\n    tag_148:\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1672:1673   */\n      dup1\n        /* \"#utility.yul\":1665:1677   */\n      revert\n        /* \"#utility.yul\":1689:1791   */\n    tag_149:\n        /* \"#utility.yul\":1730:1736   */\n      0x00\n        /* \"#utility.yul\":1781:1783   */\n      0x1f\n        /* \"#utility.yul\":1777:1784   */\n      not\n        /* \"#utility.yul\":1772:1774   */\n      0x1f\n        /* \"#utility.yul\":1765:1770   */\n      dup4\n        /* \"#utility.yul\":1761:1775   */\n      add\n        /* \"#utility.yul\":1757:1785   */\n      and\n        /* \"#utility.yul\":1747:1785   */\n      swap1\n      pop\n        /* \"#utility.yul\":1689:1791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1797:1977   */\n    tag_150:\n        /* \"#utility.yul\":1845:1922   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1842:1843   */\n      0x00\n        /* \"#utility.yul\":1835:1923   */\n      mstore\n        /* \"#utility.yul\":1942:1946   */\n      0x41\n        /* \"#utility.yul\":1939:1940   */\n      0x04\n        /* \"#utility.yul\":1932:1947   */\n      mstore\n        /* \"#utility.yul\":1966:1970   */\n      0x24\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1956:1971   */\n      revert\n        /* \"#utility.yul\":1983:2264   */\n    tag_151:\n        /* \"#utility.yul\":2066:2093   */\n      tag_207\n        /* \"#utility.yul\":2088:2092   */\n      dup3\n        /* \"#utility.yul\":2066:2093   */\n      tag_149\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":2058:2064   */\n      dup2\n        /* \"#utility.yul\":2054:2094   */\n      add\n        /* \"#utility.yul\":2196:2202   */\n      dup2\n        /* \"#utility.yul\":2184:2194   */\n      dup2\n        /* \"#utility.yul\":2181:2203   */\n      lt\n        /* \"#utility.yul\":2160:2178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2148:2158   */\n      dup3\n        /* \"#utility.yul\":2145:2179   */\n      gt\n        /* \"#utility.yul\":2142:2204   */\n      or\n        /* \"#utility.yul\":2139:2227   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2207:2225   */\n      tag_209\n      tag_150\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2139:2227   */\n    tag_208:\n        /* \"#utility.yul\":2247:2257   */\n      dup1\n        /* \"#utility.yul\":2243:2245   */\n      0x40\n        /* \"#utility.yul\":2236:2258   */\n      mstore\n        /* \"#utility.yul\":2026:2264   */\n      pop\n        /* \"#utility.yul\":1983:2264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2399   */\n    tag_152:\n        /* \"#utility.yul\":2304:2310   */\n      0x00\n        /* \"#utility.yul\":2331:2351   */\n      tag_211\n      tag_145\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2321:2351   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2393   */\n      tag_212\n        /* \"#utility.yul\":2388:2392   */\n      dup3\n        /* \"#utility.yul\":2380:2386   */\n      dup3\n        /* \"#utility.yul\":2360:2393   */\n      tag_151\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2270:2399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2716   */\n    tag_153:\n        /* \"#utility.yul\":2482:2486   */\n      0x00\n        /* \"#utility.yul\":2572:2590   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2564:2570   */\n      dup3\n        /* \"#utility.yul\":2561:2591   */\n      gt\n        /* \"#utility.yul\":2558:2614   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2594:2612   */\n      tag_215\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2558:2614   */\n    tag_214:\n        /* \"#utility.yul\":2644:2648   */\n      0x20\n        /* \"#utility.yul\":2636:2642   */\n      dup3\n        /* \"#utility.yul\":2632:2649   */\n      mul\n        /* \"#utility.yul\":2624:2649   */\n      swap1\n      pop\n        /* \"#utility.yul\":2704:2708   */\n      0x20\n        /* \"#utility.yul\":2698:2702   */\n      dup2\n        /* \"#utility.yul\":2694:2709   */\n      add\n        /* \"#utility.yul\":2686:2709   */\n      swap1\n      pop\n        /* \"#utility.yul\":2405:2716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2722:2839   */\n    tag_154:\n        /* \"#utility.yul\":2831:2832   */\n      0x00\n        /* \"#utility.yul\":2828:2829   */\n      dup1\n        /* \"#utility.yul\":2821:2833   */\n      revert\n        /* \"#utility.yul\":2845:2967   */\n    tag_155:\n        /* \"#utility.yul\":2918:2942   */\n      tag_218\n        /* \"#utility.yul\":2936:2941   */\n      dup2\n        /* \"#utility.yul\":2918:2942   */\n      tag_139\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2911:2916   */\n      dup2\n        /* \"#utility.yul\":2908:2943   */\n      eq\n        /* \"#utility.yul\":2898:2961   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2957:2958   */\n      0x00\n        /* \"#utility.yul\":2954:2955   */\n      dup1\n        /* \"#utility.yul\":2947:2959   */\n      revert\n        /* \"#utility.yul\":2898:2961   */\n    tag_219:\n        /* \"#utility.yul\":2845:2967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2973:3116   */\n    tag_156:\n        /* \"#utility.yul\":3030:3035   */\n      0x00\n        /* \"#utility.yul\":3061:3067   */\n      dup2\n        /* \"#utility.yul\":3055:3068   */\n      mload\n        /* \"#utility.yul\":3046:3068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3077:3110   */\n      tag_221\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3077:3110   */\n      tag_155\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2973:3116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3139:3871   */\n    tag_157:\n        /* \"#utility.yul\":3246:3251   */\n      0x00\n        /* \"#utility.yul\":3271:3352   */\n      tag_223\n        /* \"#utility.yul\":3287:3351   */\n      tag_224\n        /* \"#utility.yul\":3344:3350   */\n      dup5\n        /* \"#utility.yul\":3287:3351   */\n      tag_153\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3271:3352   */\n      tag_152\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3262:3352   */\n      swap1\n      pop\n        /* \"#utility.yul\":3372:3377   */\n      dup1\n        /* \"#utility.yul\":3401:3407   */\n      dup4\n        /* \"#utility.yul\":3394:3399   */\n      dup3\n        /* \"#utility.yul\":3387:3408   */\n      mstore\n        /* \"#utility.yul\":3435:3439   */\n      0x20\n        /* \"#utility.yul\":3428:3433   */\n      dup3\n        /* \"#utility.yul\":3424:3440   */\n      add\n        /* \"#utility.yul\":3417:3440   */\n      swap1\n      pop\n        /* \"#utility.yul\":3488:3492   */\n      0x20\n        /* \"#utility.yul\":3480:3486   */\n      dup5\n        /* \"#utility.yul\":3476:3493   */\n      mul\n        /* \"#utility.yul\":3468:3474   */\n      dup4\n        /* \"#utility.yul\":3464:3494   */\n      add\n        /* \"#utility.yul\":3517:3520   */\n      dup6\n        /* \"#utility.yul\":3509:3515   */\n      dup2\n        /* \"#utility.yul\":3506:3521   */\n      gt\n        /* \"#utility.yul\":3503:3625   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3536:3615   */\n      tag_226\n      tag_154\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3503:3625   */\n    tag_225:\n        /* \"#utility.yul\":3651:3657   */\n      dup4\n        /* \"#utility.yul\":3634:3865   */\n    tag_227:\n        /* \"#utility.yul\":3668:3674   */\n      dup2\n        /* \"#utility.yul\":3663:3666   */\n      dup2\n        /* \"#utility.yul\":3660:3675   */\n      lt\n        /* \"#utility.yul\":3634:3865   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3743:3746   */\n      dup1\n        /* \"#utility.yul\":3772:3820   */\n      tag_230\n        /* \"#utility.yul\":3816:3819   */\n      dup9\n        /* \"#utility.yul\":3804:3814   */\n      dup3\n        /* \"#utility.yul\":3772:3820   */\n      tag_156\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3767:3770   */\n      dup5\n        /* \"#utility.yul\":3760:3821   */\n      mstore\n        /* \"#utility.yul\":3850:3854   */\n      0x20\n        /* \"#utility.yul\":3845:3848   */\n      dup5\n        /* \"#utility.yul\":3841:3855   */\n      add\n        /* \"#utility.yul\":3834:3855   */\n      swap4\n      pop\n        /* \"#utility.yul\":3710:3865   */\n      pop\n        /* \"#utility.yul\":3694:3698   */\n      0x20\n        /* \"#utility.yul\":3689:3692   */\n      dup2\n        /* \"#utility.yul\":3685:3699   */\n      add\n        /* \"#utility.yul\":3678:3699   */\n      swap1\n      pop\n        /* \"#utility.yul\":3634:3865   */\n      jump(tag_227)\n    tag_229:\n        /* \"#utility.yul\":3638:3659   */\n      pop\n        /* \"#utility.yul\":3252:3871   */\n      pop\n      pop\n        /* \"#utility.yul\":3139:3871   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3894:4279   */\n    tag_158:\n        /* \"#utility.yul\":3976:3981   */\n      0x00\n        /* \"#utility.yul\":4025:4028   */\n      dup3\n        /* \"#utility.yul\":4018:4022   */\n      0x1f\n        /* \"#utility.yul\":4010:4016   */\n      dup4\n        /* \"#utility.yul\":4006:4023   */\n      add\n        /* \"#utility.yul\":4002:4029   */\n      slt\n        /* \"#utility.yul\":3992:4114   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4033:4112   */\n      tag_233\n      tag_148\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3992:4114   */\n    tag_232:\n        /* \"#utility.yul\":4143:4149   */\n      dup2\n        /* \"#utility.yul\":4137:4150   */\n      mload\n        /* \"#utility.yul\":4168:4273   */\n      tag_234\n        /* \"#utility.yul\":4269:4272   */\n      dup5\n        /* \"#utility.yul\":4261:4267   */\n      dup3\n        /* \"#utility.yul\":4254:4258   */\n      0x20\n        /* \"#utility.yul\":4246:4252   */\n      dup7\n        /* \"#utility.yul\":4242:4259   */\n      add\n        /* \"#utility.yul\":4168:4273   */\n      tag_157\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4159:4273   */\n      swap2\n      pop\n        /* \"#utility.yul\":3982:4279   */\n      pop\n        /* \"#utility.yul\":3894:4279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4285:4839   */\n    tag_24:\n        /* \"#utility.yul\":4380:4386   */\n      0x00\n        /* \"#utility.yul\":4429:4431   */\n      0x20\n        /* \"#utility.yul\":4417:4426   */\n      dup3\n        /* \"#utility.yul\":4408:4415   */\n      dup5\n        /* \"#utility.yul\":4404:4427   */\n      sub\n        /* \"#utility.yul\":4400:4432   */\n      slt\n        /* \"#utility.yul\":4397:4516   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":4435:4514   */\n      tag_237\n      tag_146\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":4397:4516   */\n    tag_236:\n        /* \"#utility.yul\":4576:4577   */\n      0x00\n        /* \"#utility.yul\":4565:4574   */\n      dup3\n        /* \"#utility.yul\":4561:4578   */\n      add\n        /* \"#utility.yul\":4555:4579   */\n      mload\n        /* \"#utility.yul\":4606:4624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4598:4604   */\n      dup2\n        /* \"#utility.yul\":4595:4625   */\n      gt\n        /* \"#utility.yul\":4592:4709   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":4628:4707   */\n      tag_239\n      tag_147\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4592:4709   */\n    tag_238:\n        /* \"#utility.yul\":4733:4822   */\n      tag_240\n        /* \"#utility.yul\":4814:4821   */\n      dup5\n        /* \"#utility.yul\":4805:4811   */\n      dup3\n        /* \"#utility.yul\":4794:4803   */\n      dup6\n        /* \"#utility.yul\":4790:4812   */\n      add\n        /* \"#utility.yul\":4733:4822   */\n      tag_158\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":4723:4822   */\n      swap2\n      pop\n        /* \"#utility.yul\":4526:4832   */\n      pop\n        /* \"#utility.yul\":4285:4839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5025   */\n    tag_30:\n        /* \"#utility.yul\":4893:4970   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4890:4891   */\n      0x00\n        /* \"#utility.yul\":4883:4971   */\n      mstore\n        /* \"#utility.yul\":4990:4994   */\n      0x32\n        /* \"#utility.yul\":4987:4988   */\n      0x04\n        /* \"#utility.yul\":4980:4995   */\n      mstore\n        /* \"#utility.yul\":5014:5018   */\n      0x24\n        /* \"#utility.yul\":5011:5012   */\n      0x00\n        /* \"#utility.yul\":5004:5019   */\n      revert\n        /* \"#utility.yul\":5031:5222   */\n    tag_33:\n        /* \"#utility.yul\":5071:5074   */\n      0x00\n        /* \"#utility.yul\":5090:5110   */\n      tag_243\n        /* \"#utility.yul\":5108:5109   */\n      dup3\n        /* \"#utility.yul\":5090:5110   */\n      tag_139\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5085:5110   */\n      swap2\n      pop\n        /* \"#utility.yul\":5124:5144   */\n      tag_244\n        /* \"#utility.yul\":5142:5143   */\n      dup4\n        /* \"#utility.yul\":5124:5144   */\n      tag_139\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5119:5144   */\n      swap3\n      pop\n        /* \"#utility.yul\":5167:5168   */\n      dup3\n        /* \"#utility.yul\":5164:5165   */\n      dup3\n        /* \"#utility.yul\":5160:5169   */\n      add\n        /* \"#utility.yul\":5153:5169   */\n      swap1\n      pop\n        /* \"#utility.yul\":5188:5191   */\n      dup1\n        /* \"#utility.yul\":5185:5186   */\n      dup3\n        /* \"#utility.yul\":5182:5192   */\n      gt\n        /* \"#utility.yul\":5179:5215   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":5195:5213   */\n      tag_246\n      tag_141\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":5179:5215   */\n    tag_245:\n        /* \"#utility.yul\":5031:5222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5228:5350   */\n    tag_159:\n        /* \"#utility.yul\":5301:5325   */\n      tag_248\n        /* \"#utility.yul\":5319:5324   */\n      dup2\n        /* \"#utility.yul\":5301:5325   */\n      tag_143\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5294:5299   */\n      dup2\n        /* \"#utility.yul\":5291:5326   */\n      eq\n        /* \"#utility.yul\":5281:5344   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":5340:5341   */\n      0x00\n        /* \"#utility.yul\":5337:5338   */\n      dup1\n        /* \"#utility.yul\":5330:5342   */\n      revert\n        /* \"#utility.yul\":5281:5344   */\n    tag_249:\n        /* \"#utility.yul\":5228:5350   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5356:5495   */\n    tag_160:\n        /* \"#utility.yul\":5402:5407   */\n      0x00\n        /* \"#utility.yul\":5440:5446   */\n      dup2\n        /* \"#utility.yul\":5427:5447   */\n      calldataload\n        /* \"#utility.yul\":5418:5447   */\n      swap1\n      pop\n        /* \"#utility.yul\":5456:5489   */\n      tag_251\n        /* \"#utility.yul\":5483:5488   */\n      dup2\n        /* \"#utility.yul\":5456:5489   */\n      tag_159\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":5356:5495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5501:5640   */\n    tag_161:\n        /* \"#utility.yul\":5547:5552   */\n      0x00\n        /* \"#utility.yul\":5585:5591   */\n      dup2\n        /* \"#utility.yul\":5572:5592   */\n      calldataload\n        /* \"#utility.yul\":5563:5592   */\n      swap1\n      pop\n        /* \"#utility.yul\":5601:5634   */\n      tag_253\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5601:5634   */\n      tag_155\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5501:5640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5646:5763   */\n    tag_162:\n        /* \"#utility.yul\":5755:5756   */\n      0x00\n        /* \"#utility.yul\":5752:5753   */\n      dup1\n        /* \"#utility.yul\":5745:5757   */\n      revert\n        /* \"#utility.yul\":5769:6076   */\n    tag_163:\n        /* \"#utility.yul\":5830:5834   */\n      0x00\n        /* \"#utility.yul\":5920:5938   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5912:5918   */\n      dup3\n        /* \"#utility.yul\":5909:5939   */\n      gt\n        /* \"#utility.yul\":5906:5962   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":5942:5960   */\n      tag_257\n      tag_150\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5906:5962   */\n    tag_256:\n        /* \"#utility.yul\":5980:6009   */\n      tag_258\n        /* \"#utility.yul\":6002:6008   */\n      dup3\n        /* \"#utility.yul\":5980:6009   */\n      tag_149\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5972:6009   */\n      swap1\n      pop\n        /* \"#utility.yul\":6064:6068   */\n      0x20\n        /* \"#utility.yul\":6058:6062   */\n      dup2\n        /* \"#utility.yul\":6054:6069   */\n      add\n        /* \"#utility.yul\":6046:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5769:6076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6082:6228   */\n    tag_164:\n        /* \"#utility.yul\":6179:6185   */\n      dup3\n        /* \"#utility.yul\":6174:6177   */\n      dup2\n        /* \"#utility.yul\":6169:6172   */\n      dup4\n        /* \"#utility.yul\":6156:6186   */\n      calldatacopy\n        /* \"#utility.yul\":6220:6221   */\n      0x00\n        /* \"#utility.yul\":6211:6217   */\n      dup4\n        /* \"#utility.yul\":6206:6209   */\n      dup4\n        /* \"#utility.yul\":6202:6218   */\n      add\n        /* \"#utility.yul\":6195:6222   */\n      mstore\n        /* \"#utility.yul\":6082:6228   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6234:6657   */\n    tag_165:\n        /* \"#utility.yul\":6311:6316   */\n      0x00\n        /* \"#utility.yul\":6336:6401   */\n      tag_261\n        /* \"#utility.yul\":6352:6400   */\n      tag_262\n        /* \"#utility.yul\":6393:6399   */\n      dup5\n        /* \"#utility.yul\":6352:6400   */\n      tag_163\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6336:6401   */\n      tag_152\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6327:6401   */\n      swap1\n      pop\n        /* \"#utility.yul\":6424:6430   */\n      dup3\n        /* \"#utility.yul\":6417:6422   */\n      dup2\n        /* \"#utility.yul\":6410:6431   */\n      mstore\n        /* \"#utility.yul\":6462:6466   */\n      0x20\n        /* \"#utility.yul\":6455:6460   */\n      dup2\n        /* \"#utility.yul\":6451:6467   */\n      add\n        /* \"#utility.yul\":6500:6503   */\n      dup5\n        /* \"#utility.yul\":6491:6497   */\n      dup5\n        /* \"#utility.yul\":6486:6489   */\n      dup5\n        /* \"#utility.yul\":6482:6498   */\n      add\n        /* \"#utility.yul\":6479:6504   */\n      gt\n        /* \"#utility.yul\":6476:6588   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":6507:6586   */\n      tag_264\n      tag_162\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6476:6588   */\n    tag_263:\n        /* \"#utility.yul\":6597:6651   */\n      tag_265\n        /* \"#utility.yul\":6644:6650   */\n      dup5\n        /* \"#utility.yul\":6639:6642   */\n      dup3\n        /* \"#utility.yul\":6634:6637   */\n      dup6\n        /* \"#utility.yul\":6597:6651   */\n      tag_164\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":6317:6657   */\n      pop\n        /* \"#utility.yul\":6234:6657   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6676:7014   */\n    tag_166:\n        /* \"#utility.yul\":6731:6736   */\n      0x00\n        /* \"#utility.yul\":6780:6783   */\n      dup3\n        /* \"#utility.yul\":6773:6777   */\n      0x1f\n        /* \"#utility.yul\":6765:6771   */\n      dup4\n        /* \"#utility.yul\":6761:6778   */\n      add\n        /* \"#utility.yul\":6757:6784   */\n      slt\n        /* \"#utility.yul\":6747:6869   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":6788:6867   */\n      tag_268\n      tag_148\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6747:6869   */\n    tag_267:\n        /* \"#utility.yul\":6905:6911   */\n      dup2\n        /* \"#utility.yul\":6892:6912   */\n      calldataload\n        /* \"#utility.yul\":6930:7008   */\n      tag_269\n        /* \"#utility.yul\":7004:7007   */\n      dup5\n        /* \"#utility.yul\":6996:7002   */\n      dup3\n        /* \"#utility.yul\":6989:6993   */\n      0x20\n        /* \"#utility.yul\":6981:6987   */\n      dup7\n        /* \"#utility.yul\":6977:6994   */\n      add\n        /* \"#utility.yul\":6930:7008   */\n      tag_165\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":6921:7008   */\n      swap2\n      pop\n        /* \"#utility.yul\":6737:7014   */\n      pop\n        /* \"#utility.yul\":6676:7014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7020:7963   */\n    tag_37:\n        /* \"#utility.yul\":7115:7121   */\n      0x00\n        /* \"#utility.yul\":7123:7129   */\n      dup1\n        /* \"#utility.yul\":7131:7137   */\n      0x00\n        /* \"#utility.yul\":7139:7145   */\n      dup1\n        /* \"#utility.yul\":7188:7191   */\n      0x80\n        /* \"#utility.yul\":7176:7185   */\n      dup6\n        /* \"#utility.yul\":7167:7174   */\n      dup8\n        /* \"#utility.yul\":7163:7186   */\n      sub\n        /* \"#utility.yul\":7159:7192   */\n      slt\n        /* \"#utility.yul\":7156:7276   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":7195:7274   */\n      tag_272\n      tag_146\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":7156:7276   */\n    tag_271:\n        /* \"#utility.yul\":7315:7316   */\n      0x00\n        /* \"#utility.yul\":7340:7393   */\n      tag_273\n        /* \"#utility.yul\":7385:7392   */\n      dup8\n        /* \"#utility.yul\":7376:7382   */\n      dup3\n        /* \"#utility.yul\":7365:7374   */\n      dup9\n        /* \"#utility.yul\":7361:7383   */\n      add\n        /* \"#utility.yul\":7340:7393   */\n      tag_160\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7330:7393   */\n      swap5\n      pop\n        /* \"#utility.yul\":7286:7403   */\n      pop\n        /* \"#utility.yul\":7442:7444   */\n      0x20\n        /* \"#utility.yul\":7468:7521   */\n      tag_274\n        /* \"#utility.yul\":7513:7520   */\n      dup8\n        /* \"#utility.yul\":7504:7510   */\n      dup3\n        /* \"#utility.yul\":7493:7502   */\n      dup9\n        /* \"#utility.yul\":7489:7511   */\n      add\n        /* \"#utility.yul\":7468:7521   */\n      tag_160\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7458:7521   */\n      swap4\n      pop\n        /* \"#utility.yul\":7413:7531   */\n      pop\n        /* \"#utility.yul\":7570:7572   */\n      0x40\n        /* \"#utility.yul\":7596:7649   */\n      tag_275\n        /* \"#utility.yul\":7641:7648   */\n      dup8\n        /* \"#utility.yul\":7632:7638   */\n      dup3\n        /* \"#utility.yul\":7621:7630   */\n      dup9\n        /* \"#utility.yul\":7617:7639   */\n      add\n        /* \"#utility.yul\":7596:7649   */\n      tag_161\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":7586:7649   */\n      swap3\n      pop\n        /* \"#utility.yul\":7541:7659   */\n      pop\n        /* \"#utility.yul\":7726:7728   */\n      0x60\n        /* \"#utility.yul\":7715:7724   */\n      dup6\n        /* \"#utility.yul\":7711:7729   */\n      add\n        /* \"#utility.yul\":7698:7730   */\n      calldataload\n        /* \"#utility.yul\":7757:7775   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7749:7755   */\n      dup2\n        /* \"#utility.yul\":7746:7776   */\n      gt\n        /* \"#utility.yul\":7743:7860   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":7779:7858   */\n      tag_277\n      tag_147\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":7743:7860   */\n    tag_276:\n        /* \"#utility.yul\":7884:7946   */\n      tag_278\n        /* \"#utility.yul\":7938:7945   */\n      dup8\n        /* \"#utility.yul\":7929:7935   */\n      dup3\n        /* \"#utility.yul\":7918:7927   */\n      dup9\n        /* \"#utility.yul\":7914:7936   */\n      add\n        /* \"#utility.yul\":7884:7946   */\n      tag_166\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":7874:7946   */\n      swap2\n      pop\n        /* \"#utility.yul\":7669:7956   */\n      pop\n        /* \"#utility.yul\":7020:7963   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7969:8118   */\n    tag_167:\n        /* \"#utility.yul\":8005:8012   */\n      0x00\n        /* \"#utility.yul\":8045:8111   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8038:8043   */\n      dup3\n        /* \"#utility.yul\":8034:8112   */\n      and\n        /* \"#utility.yul\":8023:8112   */\n      swap1\n      pop\n        /* \"#utility.yul\":7969:8118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8239   */\n    tag_168:\n        /* \"#utility.yul\":8209:8232   */\n      tag_281\n        /* \"#utility.yul\":8226:8231   */\n      dup2\n        /* \"#utility.yul\":8209:8232   */\n      tag_167\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8204:8207   */\n      dup3\n        /* \"#utility.yul\":8197:8233   */\n      mstore\n        /* \"#utility.yul\":8124:8239   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8245:8463   */\n    tag_40:\n        /* \"#utility.yul\":8336:8340   */\n      0x00\n        /* \"#utility.yul\":8374:8376   */\n      0x20\n        /* \"#utility.yul\":8363:8372   */\n      dup3\n        /* \"#utility.yul\":8359:8377   */\n      add\n        /* \"#utility.yul\":8351:8377   */\n      swap1\n      pop\n        /* \"#utility.yul\":8387:8456   */\n      tag_283\n        /* \"#utility.yul\":8453:8454   */\n      0x00\n        /* \"#utility.yul\":8442:8451   */\n      dup4\n        /* \"#utility.yul\":8438:8455   */\n      add\n        /* \"#utility.yul\":8429:8435   */\n      dup5\n        /* \"#utility.yul\":8387:8456   */\n      tag_168\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":8245:8463   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8469:8798   */\n    tag_44:\n        /* \"#utility.yul\":8528:8534   */\n      0x00\n        /* \"#utility.yul\":8577:8579   */\n      0x20\n        /* \"#utility.yul\":8565:8574   */\n      dup3\n        /* \"#utility.yul\":8556:8563   */\n      dup5\n        /* \"#utility.yul\":8552:8575   */\n      sub\n        /* \"#utility.yul\":8548:8580   */\n      slt\n        /* \"#utility.yul\":8545:8664   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":8583:8662   */\n      tag_286\n      tag_146\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":8545:8664   */\n    tag_285:\n        /* \"#utility.yul\":8703:8704   */\n      0x00\n        /* \"#utility.yul\":8728:8781   */\n      tag_287\n        /* \"#utility.yul\":8773:8780   */\n      dup5\n        /* \"#utility.yul\":8764:8770   */\n      dup3\n        /* \"#utility.yul\":8753:8762   */\n      dup6\n        /* \"#utility.yul\":8749:8771   */\n      add\n        /* \"#utility.yul\":8728:8781   */\n      tag_161\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":8718:8781   */\n      swap2\n      pop\n        /* \"#utility.yul\":8674:8791   */\n      pop\n        /* \"#utility.yul\":8469:8798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8804:9133   */\n    tag_65:\n        /* \"#utility.yul\":8863:8869   */\n      0x00\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"#utility.yul\":8900:8909   */\n      dup3\n        /* \"#utility.yul\":8891:8898   */\n      dup5\n        /* \"#utility.yul\":8887:8910   */\n      sub\n        /* \"#utility.yul\":8883:8915   */\n      slt\n        /* \"#utility.yul\":8880:8999   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":8918:8997   */\n      tag_290\n      tag_146\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8880:8999   */\n    tag_289:\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9063:9116   */\n      tag_291\n        /* \"#utility.yul\":9108:9115   */\n      dup5\n        /* \"#utility.yul\":9099:9105   */\n      dup3\n        /* \"#utility.yul\":9088:9097   */\n      dup6\n        /* \"#utility.yul\":9084:9106   */\n      add\n        /* \"#utility.yul\":9063:9116   */\n      tag_160\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9053:9116   */\n      swap2\n      pop\n        /* \"#utility.yul\":9009:9126   */\n      pop\n        /* \"#utility.yul\":8804:9133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9139:9257   */\n    tag_169:\n        /* \"#utility.yul\":9226:9250   */\n      tag_293\n        /* \"#utility.yul\":9244:9249   */\n      dup2\n        /* \"#utility.yul\":9226:9250   */\n      tag_139\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9221:9224   */\n      dup3\n        /* \"#utility.yul\":9214:9251   */\n      mstore\n        /* \"#utility.yul\":9139:9257   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9263:9485   */\n    tag_72:\n        /* \"#utility.yul\":9356:9360   */\n      0x00\n        /* \"#utility.yul\":9394:9396   */\n      0x20\n        /* \"#utility.yul\":9383:9392   */\n      dup3\n        /* \"#utility.yul\":9379:9397   */\n      add\n        /* \"#utility.yul\":9371:9397   */\n      swap1\n      pop\n        /* \"#utility.yul\":9407:9478   */\n      tag_295\n        /* \"#utility.yul\":9475:9476   */\n      0x00\n        /* \"#utility.yul\":9464:9473   */\n      dup4\n        /* \"#utility.yul\":9460:9477   */\n      add\n        /* \"#utility.yul\":9451:9457   */\n      dup5\n        /* \"#utility.yul\":9407:9478   */\n      tag_169\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9263:9485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9660   */\n    tag_170:\n        /* \"#utility.yul\":9575:9586   */\n      0x00\n        /* \"#utility.yul\":9609:9615   */\n      dup3\n        /* \"#utility.yul\":9604:9607   */\n      dup3\n        /* \"#utility.yul\":9597:9616   */\n      mstore\n        /* \"#utility.yul\":9649:9653   */\n      0x20\n        /* \"#utility.yul\":9644:9647   */\n      dup3\n        /* \"#utility.yul\":9640:9654   */\n      add\n        /* \"#utility.yul\":9625:9654   */\n      swap1\n      pop\n        /* \"#utility.yul\":9491:9660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9666:9847   */\n    tag_171:\n        /* \"#utility.yul\":9806:9839   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9802:9803   */\n      0x00\n        /* \"#utility.yul\":9794:9800   */\n      dup3\n        /* \"#utility.yul\":9790:9804   */\n      add\n        /* \"#utility.yul\":9783:9840   */\n      mstore\n        /* \"#utility.yul\":9666:9847   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9853:10219   */\n    tag_172:\n        /* \"#utility.yul\":9995:9998   */\n      0x00\n        /* \"#utility.yul\":10016:10083   */\n      tag_299\n        /* \"#utility.yul\":10080:10082   */\n      0x1f\n        /* \"#utility.yul\":10075:10078   */\n      dup4\n        /* \"#utility.yul\":10016:10083   */\n      tag_170\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10009:10083   */\n      swap2\n      pop\n        /* \"#utility.yul\":10092:10185   */\n      tag_300\n        /* \"#utility.yul\":10181:10184   */\n      dup3\n        /* \"#utility.yul\":10092:10185   */\n      tag_171\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10210:10212   */\n      0x20\n        /* \"#utility.yul\":10205:10208   */\n      dup3\n        /* \"#utility.yul\":10201:10213   */\n      add\n        /* \"#utility.yul\":10194:10213   */\n      swap1\n      pop\n        /* \"#utility.yul\":9853:10219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10225:10644   */\n    tag_82:\n        /* \"#utility.yul\":10391:10395   */\n      0x00\n        /* \"#utility.yul\":10429:10431   */\n      0x20\n        /* \"#utility.yul\":10418:10427   */\n      dup3\n        /* \"#utility.yul\":10414:10432   */\n      add\n        /* \"#utility.yul\":10406:10432   */\n      swap1\n      pop\n        /* \"#utility.yul\":10478:10487   */\n      dup2\n        /* \"#utility.yul\":10472:10476   */\n      dup2\n        /* \"#utility.yul\":10468:10488   */\n      sub\n        /* \"#utility.yul\":10464:10465   */\n      0x00\n        /* \"#utility.yul\":10453:10462   */\n      dup4\n        /* \"#utility.yul\":10449:10466   */\n      add\n        /* \"#utility.yul\":10442:10489   */\n      mstore\n        /* \"#utility.yul\":10506:10637   */\n      tag_302\n        /* \"#utility.yul\":10632:10636   */\n      dup2\n        /* \"#utility.yul\":10506:10637   */\n      tag_172\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10498:10637   */\n      swap1\n      pop\n        /* \"#utility.yul\":10225:10644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10650:10822   */\n    tag_173:\n        /* \"#utility.yul\":10790:10814   */\n      0x596f7520617265206e6f7420746865206f776e65722e00000000000000000000\n        /* \"#utility.yul\":10786:10787   */\n      0x00\n        /* \"#utility.yul\":10778:10784   */\n      dup3\n        /* \"#utility.yul\":10774:10788   */\n      add\n        /* \"#utility.yul\":10767:10815   */\n      mstore\n        /* \"#utility.yul\":10650:10822   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10828:11194   */\n    tag_174:\n        /* \"#utility.yul\":10970:10973   */\n      0x00\n        /* \"#utility.yul\":10991:11058   */\n      tag_305\n        /* \"#utility.yul\":11055:11057   */\n      0x16\n        /* \"#utility.yul\":11050:11053   */\n      dup4\n        /* \"#utility.yul\":10991:11058   */\n      tag_170\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10984:11058   */\n      swap2\n      pop\n        /* \"#utility.yul\":11067:11160   */\n      tag_306\n        /* \"#utility.yul\":11156:11159   */\n      dup3\n        /* \"#utility.yul\":11067:11160   */\n      tag_173\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11185:11187   */\n      0x20\n        /* \"#utility.yul\":11180:11183   */\n      dup3\n        /* \"#utility.yul\":11176:11188   */\n      add\n        /* \"#utility.yul\":11169:11188   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:11194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11200:11619   */\n    tag_86:\n        /* \"#utility.yul\":11366:11370   */\n      0x00\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"#utility.yul\":11393:11402   */\n      dup3\n        /* \"#utility.yul\":11389:11407   */\n      add\n        /* \"#utility.yul\":11381:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":11453:11462   */\n      dup2\n        /* \"#utility.yul\":11447:11451   */\n      dup2\n        /* \"#utility.yul\":11443:11463   */\n      sub\n        /* \"#utility.yul\":11439:11440   */\n      0x00\n        /* \"#utility.yul\":11428:11437   */\n      dup4\n        /* \"#utility.yul\":11424:11441   */\n      add\n        /* \"#utility.yul\":11417:11464   */\n      mstore\n        /* \"#utility.yul\":11481:11612   */\n      tag_308\n        /* \"#utility.yul\":11607:11611   */\n      dup2\n        /* \"#utility.yul\":11481:11612   */\n      tag_174\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11473:11612   */\n      swap1\n      pop\n        /* \"#utility.yul\":11200:11619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11625:11772   */\n    tag_175:\n        /* \"#utility.yul\":11726:11737   */\n      0x00\n        /* \"#utility.yul\":11763:11766   */\n      dup2\n        /* \"#utility.yul\":11748:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11625:11772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11778:11892   */\n    tag_176:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11898:12296   */\n    tag_177:\n        /* \"#utility.yul\":12057:12060   */\n      0x00\n        /* \"#utility.yul\":12078:12161   */\n      tag_312\n        /* \"#utility.yul\":12159:12160   */\n      0x00\n        /* \"#utility.yul\":12154:12157   */\n      dup4\n        /* \"#utility.yul\":12078:12161   */\n      tag_175\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12071:12161   */\n      swap2\n      pop\n        /* \"#utility.yul\":12170:12263   */\n      tag_313\n        /* \"#utility.yul\":12259:12262   */\n      dup3\n        /* \"#utility.yul\":12170:12263   */\n      tag_176\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12288:12289   */\n      0x00\n        /* \"#utility.yul\":12283:12286   */\n      dup3\n        /* \"#utility.yul\":12279:12290   */\n      add\n        /* \"#utility.yul\":12272:12290   */\n      swap1\n      pop\n        /* \"#utility.yul\":11898:12296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12302:12681   */\n    tag_90:\n        /* \"#utility.yul\":12486:12489   */\n      0x00\n        /* \"#utility.yul\":12508:12655   */\n      tag_315\n        /* \"#utility.yul\":12651:12654   */\n      dup3\n        /* \"#utility.yul\":12508:12655   */\n      tag_177\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12501:12655   */\n      swap2\n      pop\n        /* \"#utility.yul\":12672:12675   */\n      dup2\n        /* \"#utility.yul\":12665:12675   */\n      swap1\n      pop\n        /* \"#utility.yul\":12302:12681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12687:13129   */\n    tag_96:\n        /* \"#utility.yul\":12836:12840   */\n      0x00\n        /* \"#utility.yul\":12874:12876   */\n      0x60\n        /* \"#utility.yul\":12863:12872   */\n      dup3\n        /* \"#utility.yul\":12859:12877   */\n      add\n        /* \"#utility.yul\":12851:12877   */\n      swap1\n      pop\n        /* \"#utility.yul\":12887:12958   */\n      tag_317\n        /* \"#utility.yul\":12955:12956   */\n      0x00\n        /* \"#utility.yul\":12944:12953   */\n      dup4\n        /* \"#utility.yul\":12940:12957   */\n      add\n        /* \"#utility.yul\":12931:12937   */\n      dup7\n        /* \"#utility.yul\":12887:12958   */\n      tag_144\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12968:13040   */\n      tag_318\n        /* \"#utility.yul\":13036:13038   */\n      0x20\n        /* \"#utility.yul\":13025:13034   */\n      dup4\n        /* \"#utility.yul\":13021:13039   */\n      add\n        /* \"#utility.yul\":13012:13018   */\n      dup6\n        /* \"#utility.yul\":12968:13040   */\n      tag_144\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":13050:13122   */\n      tag_319\n        /* \"#utility.yul\":13118:13120   */\n      0x40\n        /* \"#utility.yul\":13107:13116   */\n      dup4\n        /* \"#utility.yul\":13103:13121   */\n      add\n        /* \"#utility.yul\":13094:13100   */\n      dup5\n        /* \"#utility.yul\":13050:13122   */\n      tag_169\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12687:13129   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13135:13360   */\n    tag_178:\n        /* \"#utility.yul\":13275:13309   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13271:13272   */\n      0x00\n        /* \"#utility.yul\":13263:13269   */\n      dup3\n        /* \"#utility.yul\":13259:13273   */\n      add\n        /* \"#utility.yul\":13252:13310   */\n      mstore\n        /* \"#utility.yul\":13344:13352   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13339:13341   */\n      0x20\n        /* \"#utility.yul\":13331:13337   */\n      dup3\n        /* \"#utility.yul\":13327:13342   */\n      add\n        /* \"#utility.yul\":13320:13353   */\n      mstore\n        /* \"#utility.yul\":13135:13360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13366:13732   */\n    tag_179:\n        /* \"#utility.yul\":13508:13511   */\n      0x00\n        /* \"#utility.yul\":13529:13596   */\n      tag_322\n        /* \"#utility.yul\":13593:13595   */\n      0x26\n        /* \"#utility.yul\":13588:13591   */\n      dup4\n        /* \"#utility.yul\":13529:13596   */\n      tag_170\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":13522:13596   */\n      swap2\n      pop\n        /* \"#utility.yul\":13605:13698   */\n      tag_323\n        /* \"#utility.yul\":13694:13697   */\n      dup3\n        /* \"#utility.yul\":13605:13698   */\n      tag_178\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":13723:13725   */\n      0x40\n        /* \"#utility.yul\":13718:13721   */\n      dup3\n        /* \"#utility.yul\":13714:13726   */\n      add\n        /* \"#utility.yul\":13707:13726   */\n      swap1\n      pop\n        /* \"#utility.yul\":13366:13732   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13738:14157   */\n    tag_120:\n        /* \"#utility.yul\":13904:13908   */\n      0x00\n        /* \"#utility.yul\":13942:13944   */\n      0x20\n        /* \"#utility.yul\":13931:13940   */\n      dup3\n        /* \"#utility.yul\":13927:13945   */\n      add\n        /* \"#utility.yul\":13919:13945   */\n      swap1\n      pop\n        /* \"#utility.yul\":13991:14000   */\n      dup2\n        /* \"#utility.yul\":13985:13989   */\n      dup2\n        /* \"#utility.yul\":13981:14001   */\n      sub\n        /* \"#utility.yul\":13977:13978   */\n      0x00\n        /* \"#utility.yul\":13966:13975   */\n      dup4\n        /* \"#utility.yul\":13962:13979   */\n      add\n        /* \"#utility.yul\":13955:14002   */\n      mstore\n        /* \"#utility.yul\":14019:14150   */\n      tag_325\n        /* \"#utility.yul\":14145:14149   */\n      dup2\n        /* \"#utility.yul\":14019:14150   */\n      tag_179\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":14011:14150   */\n      swap1\n      pop\n        /* \"#utility.yul\":13738:14157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14163:14340   */\n    tag_180:\n        /* \"#utility.yul\":14303:14332   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":14299:14300   */\n      0x00\n        /* \"#utility.yul\":14291:14297   */\n      dup3\n        /* \"#utility.yul\":14287:14301   */\n      add\n        /* \"#utility.yul\":14280:14333   */\n      mstore\n        /* \"#utility.yul\":14163:14340   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14712   */\n    tag_181:\n        /* \"#utility.yul\":14488:14491   */\n      0x00\n        /* \"#utility.yul\":14509:14576   */\n      tag_328\n        /* \"#utility.yul\":14573:14575   */\n      0x1b\n        /* \"#utility.yul\":14568:14571   */\n      dup4\n        /* \"#utility.yul\":14509:14576   */\n      tag_170\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":14502:14576   */\n      swap2\n      pop\n        /* \"#utility.yul\":14585:14678   */\n      tag_329\n        /* \"#utility.yul\":14674:14677   */\n      dup3\n        /* \"#utility.yul\":14585:14678   */\n      tag_180\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14703:14705   */\n      0x20\n        /* \"#utility.yul\":14698:14701   */\n      dup3\n        /* \"#utility.yul\":14694:14706   */\n      add\n        /* \"#utility.yul\":14687:14706   */\n      swap1\n      pop\n        /* \"#utility.yul\":14346:14712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:15137   */\n    tag_128:\n        /* \"#utility.yul\":14884:14888   */\n      0x00\n        /* \"#utility.yul\":14922:14924   */\n      0x20\n        /* \"#utility.yul\":14911:14920   */\n      dup3\n        /* \"#utility.yul\":14907:14925   */\n      add\n        /* \"#utility.yul\":14899:14925   */\n      swap1\n      pop\n        /* \"#utility.yul\":14971:14980   */\n      dup2\n        /* \"#utility.yul\":14965:14969   */\n      dup2\n        /* \"#utility.yul\":14961:14981   */\n      sub\n        /* \"#utility.yul\":14957:14958   */\n      0x00\n        /* \"#utility.yul\":14946:14955   */\n      dup4\n        /* \"#utility.yul\":14942:14959   */\n      add\n        /* \"#utility.yul\":14935:14982   */\n      mstore\n        /* \"#utility.yul\":14999:15130   */\n      tag_331\n        /* \"#utility.yul\":15125:15129   */\n      dup2\n        /* \"#utility.yul\":14999:15130   */\n      tag_181\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14991:15130   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:15137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15143:15325   */\n    tag_182:\n        /* \"#utility.yul\":15283:15317   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15279:15280   */\n      0x00\n        /* \"#utility.yul\":15271:15277   */\n      dup3\n        /* \"#utility.yul\":15267:15281   */\n      add\n        /* \"#utility.yul\":15260:15318   */\n      mstore\n        /* \"#utility.yul\":15143:15325   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15331:15697   */\n    tag_183:\n        /* \"#utility.yul\":15473:15476   */\n      0x00\n        /* \"#utility.yul\":15494:15561   */\n      tag_334\n        /* \"#utility.yul\":15558:15560   */\n      0x20\n        /* \"#utility.yul\":15553:15556   */\n      dup4\n        /* \"#utility.yul\":15494:15561   */\n      tag_170\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":15487:15561   */\n      swap2\n      pop\n        /* \"#utility.yul\":15570:15663   */\n      tag_335\n        /* \"#utility.yul\":15659:15662   */\n      dup3\n        /* \"#utility.yul\":15570:15663   */\n      tag_182\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":15688:15690   */\n      0x20\n        /* \"#utility.yul\":15683:15686   */\n      dup3\n        /* \"#utility.yul\":15679:15691   */\n      add\n        /* \"#utility.yul\":15672:15691   */\n      swap1\n      pop\n        /* \"#utility.yul\":15331:15697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15703:16122   */\n    tag_135:\n        /* \"#utility.yul\":15869:15873   */\n      0x00\n        /* \"#utility.yul\":15907:15909   */\n      0x20\n        /* \"#utility.yul\":15896:15905   */\n      dup3\n        /* \"#utility.yul\":15892:15910   */\n      add\n        /* \"#utility.yul\":15884:15910   */\n      swap1\n      pop\n        /* \"#utility.yul\":15956:15965   */\n      dup2\n        /* \"#utility.yul\":15950:15954   */\n      dup2\n        /* \"#utility.yul\":15946:15966   */\n      sub\n        /* \"#utility.yul\":15942:15943   */\n      0x00\n        /* \"#utility.yul\":15931:15940   */\n      dup4\n        /* \"#utility.yul\":15927:15944   */\n      add\n        /* \"#utility.yul\":15920:15967   */\n      mstore\n        /* \"#utility.yul\":15984:16115   */\n      tag_337\n        /* \"#utility.yul\":16110:16114   */\n      dup2\n        /* \"#utility.yul\":15984:16115   */\n      tag_183\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":15976:16115   */\n      swap1\n      pop\n        /* \"#utility.yul\":15703:16122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204c0b0930e1b3f396ce9c5f43e16766fe1b0c8c2ecfcbeff0a8e538eaa113ee4364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 166,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 174,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620014d5380380620014d58339818101604052810190620000379190620001dc565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f462000172565b5b60006200020584828501620001c5565b91505092915050565b6112b7806200021e6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461026d578063a694fc3a14610298578063f2fde38b146102c1578063f301af42146102ea578063fd71c65014610327576101ae565b8063150b7a02146101b35780632e17de78146101f0578063715018a6146102195780638488cc4114610230576101ae565b366101ae57600061009b6003610350565b346100a69190610a8c565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101059190610afe565b600060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061014b9190610cb2565b905060005b81518110156101ac5782600560006006848154811061017257610171610cfb565b5b90600052602060002001548152602001908152602001600020600082825461019a9190610d2a565b92505081905550806001019050610150565b005b600080fd5b3480156101bf57600080fd5b506101da60048036038101906101d59190610e54565b61035e565b6040516101e79190610f12565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190610f2d565b610372565b005b34801561022557600080fd5b5061022e6105f8565b005b34801561023c57600080fd5b5061025760048036038101906102529190610f2d565b61060c565b6040516102649190610afe565b60405180910390f35b34801561027957600080fd5b5061028261063f565b60405161028f9190610afe565b60405180910390f35b3480156102a457600080fd5b506102bf60048036038101906102ba9190610f2d565b610668565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190610f5a565b610781565b005b3480156102f657600080fd5b50610311600480360381019061030c9190610f2d565b610804565b60405161031e9190610f96565b60405180910390f35b34801561033357600080fd5b5061034e60048036038101906103499190610f5a565b61081c565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b6002600154036103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae9061100e565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104579061107a565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556104a06003610868565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600560008481526020019081526020016000205460405161050c906110cb565b60006040518083038185875af1925050503d8060008114610549576040519150601f19603f3d011682016040523d82523d6000602084013e61054e565b606091505b505090508061055c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b81526004016105bb939291906110e0565b600060405180830381600087803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b50505050506001808190555050565b6106006108c4565b61060a6000610942565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b81526004016106c7939291906110e0565b600060405180830381600087803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600681908060018154018082558091505060019003906000526020600020016000909190919091505561077e6003610a06565b50565b6107896108c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611189565b60405180910390fd5b61080181610942565b50565b60056020528060005260406000206000915090505481565b6108246108c4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600001549050600081116108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ab906111f5565b60405180910390fd5b6001810382600001819055505050565b6108cc610a1c565b73ffffffffffffffffffffffffffffffffffffffff166108ea61063f565b73ffffffffffffffffffffffffffffffffffffffff1614610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611261565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9782610a24565b9150610aa283610a24565b925082610ab257610ab1610a2e565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae882610abd565b9050919050565b610af881610add565b82525050565b6000602082019050610b136000830184610aef565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b7b82610b32565b810181811067ffffffffffffffff82111715610b9a57610b99610b43565b5b80604052505050565b6000610bad610b19565b9050610bb98282610b72565b919050565b600067ffffffffffffffff821115610bd957610bd8610b43565b5b602082029050602081019050919050565b600080fd5b610bf881610a24565b8114610c0357600080fd5b50565b600081519050610c1581610bef565b92915050565b6000610c2e610c2984610bbe565b610ba3565b90508083825260208201905060208402830185811115610c5157610c50610bea565b5b835b81811015610c7a5780610c668882610c06565b845260208401935050602081019050610c53565b5050509392505050565b600082601f830112610c9957610c98610b2d565b5b8151610ca9848260208601610c1b565b91505092915050565b600060208284031215610cc857610cc7610b23565b5b600082015167ffffffffffffffff811115610ce657610ce5610b28565b5b610cf284828501610c84565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3582610a24565b9150610d4083610a24565b9250828201905080821115610d5857610d57610a5d565b5b92915050565b610d6781610add565b8114610d7257600080fd5b50565b600081359050610d8481610d5e565b92915050565b600081359050610d9981610bef565b92915050565b600080fd5b600067ffffffffffffffff821115610dbf57610dbe610b43565b5b610dc882610b32565b9050602081019050919050565b82818337600083830152505050565b6000610df7610df284610da4565b610ba3565b905082815260208101848484011115610e1357610e12610d9f565b5b610e1e848285610dd5565b509392505050565b600082601f830112610e3b57610e3a610b2d565b5b8135610e4b848260208601610de4565b91505092915050565b60008060008060808587031215610e6e57610e6d610b23565b5b6000610e7c87828801610d75565b9450506020610e8d87828801610d75565b9350506040610e9e87828801610d8a565b925050606085013567ffffffffffffffff811115610ebf57610ebe610b28565b5b610ecb87828801610e26565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f0c81610ed7565b82525050565b6000602082019050610f276000830184610f03565b92915050565b600060208284031215610f4357610f42610b23565b5b6000610f5184828501610d8a565b91505092915050565b600060208284031215610f7057610f6f610b23565b5b6000610f7e84828501610d75565b91505092915050565b610f9081610a24565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610ff8601f83610fb1565b915061100382610fc2565b602082019050919050565b6000602082019050818103600083015261102781610feb565b9050919050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b6000611064601683610fb1565b915061106f8261102e565b602082019050919050565b6000602082019050818103600083015261109381611057565b9050919050565b600081905092915050565b50565b60006110b560008361109a565b91506110c0826110a5565b600082019050919050565b60006110d6826110a8565b9150819050919050565b60006060820190506110f56000830186610aef565b6111026020830185610aef565b61110f6040830184610f87565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611173602683610fb1565b915061117e82611117565b604082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b60006111df601b83610fb1565b91506111ea826111a9565b602082019050919050565b6000602082019050818103600083015261120e816111d2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061124b602083610fb1565b915061125682611215565b602082019050919050565b6000602082019050818103600083015261127a8161123e565b905091905056fea26469706673582212204c0b0930e1b3f396ce9c5f43e16766fe1b0c8c2ecfcbeff0a8e538eaa113ee4364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14D5 CODESIZE SUB DUP1 PUSH3 0x14D5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1DC JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x20E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A4 DUP3 PUSH3 0x177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1B6 DUP2 PUSH3 0x197 JUMP JUMPDEST DUP2 EQ PUSH3 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D6 DUP2 PUSH3 0x1AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x172 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x205 DUP5 DUP3 DUP6 ADD PUSH3 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B7 DUP1 PUSH3 0x21E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x327 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x230 JUMPI PUSH2 0x1AE JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AE JUMPI PUSH1 0x0 PUSH2 0x9B PUSH1 0x3 PUSH2 0x350 JUMP JUMPDEST CALLVALUE PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1AC JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x4A0 PUSH1 0x3 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x50C SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x54E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x60A PUSH1 0x0 PUSH2 0x942 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x77E PUSH1 0x3 PUSH2 0xA06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x789 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x801 DUP2 PUSH2 0x942 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x824 PUSH2 0x8C4 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8CC PUSH2 0xA1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EA PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA97 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA2 DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAB2 JUMPI PUSH2 0xAB1 PUSH2 0xA2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE8 DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB7B DUP3 PUSH2 0xB32 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP3 DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xA24 JUMP JUMPDEST DUP2 EQ PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC15 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2E PUSH2 0xC29 DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC7A JUMPI DUP1 PUSH2 0xC66 DUP9 DUP3 PUSH2 0xC06 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC53 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC99 JUMPI PUSH2 0xC98 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xCA9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC8 JUMPI PUSH2 0xCC7 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST PUSH2 0xCF2 DUP5 DUP3 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP2 POP PUSH2 0xD40 DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0xA5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH2 0xADD JUMP JUMPDEST DUP2 EQ PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD84 DUP2 PUSH2 0xD5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD99 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xDC8 DUP3 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF7 PUSH2 0xDF2 DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH2 0xE1E DUP5 DUP3 DUP6 PUSH2 0xDD5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH2 0xE6D PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE7C DUP8 DUP3 DUP9 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE8D DUP8 DUP3 DUP9 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE9E DUP8 DUP3 DUP9 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xB28 JUMP JUMPDEST JUMPDEST PUSH2 0xECB DUP8 DUP3 DUP9 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF42 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xA24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF8 PUSH1 0x1F DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1003 DUP3 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1027 DUP2 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1064 PUSH1 0x16 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x106F DUP3 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1093 DUP2 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B5 PUSH1 0x0 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x10C0 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D6 DUP3 PUSH2 0x10A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x1102 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x110F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1173 PUSH1 0x26 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x117E DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A2 DUP2 PUSH2 0x1166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF PUSH1 0x1B DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EA DUP3 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120E DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124B PUSH1 0x20 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1256 DUP3 PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x127A DUP2 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SIGNEXTEND MULMOD ADDRESS 0xE1 0xB3 RETURN SWAP7 0xCE SWAP13 0x5F NUMBER 0xE1 PUSH8 0x66FE1B0C8C2ECFCB 0xEF CREATE 0xA8 0xE5 CODESIZE 0xEA LOG1 SGT 0xEE NUMBER PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "491:1742:8:-:0;;;998:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;1058:12:8;1043;;:27;;;;;;;;;;;;;;;;;;998:79;491:1742;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;491:1742:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_655": {
									"entryPoint": null,
									"id": 655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2244,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 2588,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2370,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_353": {
									"entryPoint": 848,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_395": {
									"entryPoint": 2152,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_367": {
									"entryPoint": 2566,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": 862,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1599,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1528,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_482": {
									"entryPoint": 2052,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_507": {
									"entryPoint": 2076,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_544": {
									"entryPoint": 1640,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnedBy_478": {
									"entryPoint": 1548,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1921,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_605": {
									"entryPoint": 882,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4075,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3050,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16125:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "304:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "324:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "314:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "314:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "314:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "421:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "411:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "442:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "445:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "435:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "276:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "504:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "514:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "537:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "519:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "514:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "548:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "571:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "553:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "548:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "592:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:9:9"
															},
															"nodeType": "YulIf",
															"src": "582:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "627:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "636:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "639:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "627:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "493:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "496:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "502:1:9",
														"type": ""
													}
												],
												"src": "462:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "708:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "723:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "730:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "719:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "708:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "680:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "690:7:9",
														"type": ""
													}
												],
												"src": "653:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "830:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "840:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "869:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "851:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "840:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "812:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "822:7:9",
														"type": ""
													}
												],
												"src": "785:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "969:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "992:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "974:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "962:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "962:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "940:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "947:3:9",
														"type": ""
													}
												],
												"src": "887:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1131:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1142:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1127:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1119:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1199:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1212:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1223:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1208:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1208:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1155:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1155:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1081:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1093:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1104:4:9",
														"type": ""
													}
												],
												"src": "1011:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1279:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1289:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1305:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1299:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1289:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1272:6:9",
														"type": ""
													}
												],
												"src": "1239:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1672:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1665:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1566:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1765:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1772:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1761:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1781:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1777:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1720:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "1730:6:9",
														"type": ""
													}
												],
												"src": "1689:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1842:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1845:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1835:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1939:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1942:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1932:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1956:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1797:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2026:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2036:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2058:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2088:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2066:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2066:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2040:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2205:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2207:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2207:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2148:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2160:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2145:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2145:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2184:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2196:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2181:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2142:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:62:9"
															},
															"nodeType": "YulIf",
															"src": "2139:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2247:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2236:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2236:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2012:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2020:4:9",
														"type": ""
													}
												],
												"src": "1983:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2321:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2331:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2321:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2380:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2388:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2360:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2360:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2360:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2295:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2304:6:9",
														"type": ""
													}
												],
												"src": "2270:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2487:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2592:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2594:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2594:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2594:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2564:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2572:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2561:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:30:9"
															},
															"nodeType": "YulIf",
															"src": "2558:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2624:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2636:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2644:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2632:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2624:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2686:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2698:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2704:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2694:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2686:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2471:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2482:4:9",
														"type": ""
													}
												],
												"src": "2405:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2821:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2821:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2821:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2722:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2888:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2945:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2954:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2957:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2947:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2911:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2936:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2918:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2918:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2908:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2901:43:9"
															},
															"nodeType": "YulIf",
															"src": "2898:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2881:5:9",
														"type": ""
													}
												],
												"src": "2845:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3036:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3046:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3055:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3046:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3104:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3077:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3077:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3077:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3014:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3022:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3030:5:9",
														"type": ""
													}
												],
												"src": "2973:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3252:619:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3262:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3344:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3287:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3287:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3271:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3271:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3262:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3361:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3372:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3365:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3394:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3401:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3387:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3417:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3428:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3435:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3424:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3424:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3450:44:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3468:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3480:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3488:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "3476:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3476:17:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3464:30:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3454:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3522:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3536:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3536:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3536:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3509:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3517:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:15:9"
															},
															"nodeType": "YulIf",
															"src": "3503:122:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3710:155:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3725:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "3743:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "3729:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3767:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "3804:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "3816:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "3772:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3772:48:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3760:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3760:61:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3760:61:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3834:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3845:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3850:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3841:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3841:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3834:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3663:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3668:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3660:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3660:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3676:25:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3678:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3689:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3694:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3685:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3685:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3678:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3638:21:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3640:17:9",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "3651:6:9"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "3644:3:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3634:231:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3222:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3230:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3246:5:9",
														"type": ""
													}
												],
												"src": "3139:732:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3982:297:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4031:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4033:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4033:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4033:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4010:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4018:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4006:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4006:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4025:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3995:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3995:35:9"
															},
															"nodeType": "YulIf",
															"src": "3992:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4123:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4143:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4137:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4137:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4127:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:114:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4246:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4242:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4261:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4269:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4168:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4168:105:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4159:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3960:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3968:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3976:5:9",
														"type": ""
													}
												],
												"src": "3894:385:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4387:452:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4433:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4435:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4435:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4435:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4408:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4417:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4429:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4400:32:9"
															},
															"nodeType": "YulIf",
															"src": "4397:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4526:306:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4541:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4565:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4576:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4561:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4561:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4555:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4545:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4626:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4628:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4628:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4628:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4598:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4606:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4595:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4595:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "4592:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4723:99:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4794:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4805:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4790:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4790:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4814:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4733:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4733:89:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4723:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4357:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4368:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4380:6:9",
														"type": ""
													}
												],
												"src": "4285:554:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4873:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4890:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4883:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4883:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4883:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4987:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4980:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5014:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5004:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4845:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5075:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5085:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5108:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5090:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5085:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5119:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5142:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5124:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5119:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5153:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5164:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5167:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5193:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5195:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5195:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5185:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "5188:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5182:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:10:9"
															},
															"nodeType": "YulIf",
															"src": "5179:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5062:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5065:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5071:3:9",
														"type": ""
													}
												],
												"src": "5031:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5271:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5328:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5337:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5340:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5330:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5330:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5330:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5294:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5319:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "5301:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5301:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5291:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5291:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:43:9"
															},
															"nodeType": "YulIf",
															"src": "5281:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5264:5:9",
														"type": ""
													}
												],
												"src": "5228:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5408:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5418:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5440:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5427:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5418:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5483:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5456:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5456:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5456:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5386:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5394:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5402:5:9",
														"type": ""
													}
												],
												"src": "5356:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5563:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5585:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5572:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5563:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5628:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5601:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5601:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5601:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5531:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5539:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5547:5:9",
														"type": ""
													}
												],
												"src": "5501:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5735:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5752:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5755:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5745:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "5646:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5835:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5940:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5942:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5942:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5942:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5912:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5909:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:30:9"
															},
															"nodeType": "YulIf",
															"src": "5906:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5972:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6002:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5980:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5972:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6046:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6058:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6064:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6054:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6054:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6046:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5819:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5830:4:9",
														"type": ""
													}
												],
												"src": "5769:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6146:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6169:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6174:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6179:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6156:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6206:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6211:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6220:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6195:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6128:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6133:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6138:6:9",
														"type": ""
													}
												],
												"src": "6082:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6317:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6327:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6393:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6352:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6352:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6336:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6336:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6327:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6417:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6424:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6410:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6410:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6440:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6455:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6462:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6451:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6444:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6505:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "6507:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6507:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6507:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6486:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6491:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6482:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6482:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6500:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6479:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:25:9"
															},
															"nodeType": "YulIf",
															"src": "6476:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6634:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6639:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6644:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "6597:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6290:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6295:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6303:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6311:5:9",
														"type": ""
													}
												],
												"src": "6234:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6737:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6786:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6788:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6788:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6788:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6765:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6773:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6761:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6761:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6780:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6757:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6757:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6750:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6750:35:9"
															},
															"nodeType": "YulIf",
															"src": "6747:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6878:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6905:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6892:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6882:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6921:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6981:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6989:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6977:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6996:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7004:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6930:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6921:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6715:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6723:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6731:5:9",
														"type": ""
													}
												],
												"src": "6676:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7146:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7195:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7195:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7167:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7176:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7163:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7163:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7159:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:33:9"
															},
															"nodeType": "YulIf",
															"src": "7156:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "7286:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7301:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7365:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7361:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7340:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7330:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7413:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7428:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7442:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7432:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7458:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7493:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7504:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7489:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7489:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7513:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7468:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7468:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7458:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7541:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7556:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7570:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7560:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7586:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7621:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7632:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7617:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7617:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7641:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7596:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7596:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "7586:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7669:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7684:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7715:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7726:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7711:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7711:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7698:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7698:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7688:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7777:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7779:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7779:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7779:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7749:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7757:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7746:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7746:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "7743:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7874:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7918:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7929:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7914:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7914:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7938:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7884:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7884:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7874:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7092:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7103:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7115:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7123:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7131:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7139:6:9",
														"type": ""
													}
												],
												"src": "7020:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8013:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8023:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8038:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8045:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8034:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8023:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7995:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8005:7:9",
														"type": ""
													}
												],
												"src": "7969:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8187:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8204:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8226:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8209:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8209:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8175:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8182:3:9",
														"type": ""
													}
												],
												"src": "8124:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8341:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8351:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8363:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8374:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8351:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8429:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8442:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8453:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8438:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8438:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8387:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8387:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8387:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8313:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8325:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8336:4:9",
														"type": ""
													}
												],
												"src": "8245:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8535:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8581:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8583:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8583:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8583:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8556:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8565:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8552:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8552:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8577:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8548:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8548:32:9"
															},
															"nodeType": "YulIf",
															"src": "8545:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8674:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8689:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8703:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8693:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8718:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8753:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8764:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8749:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8749:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8773:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8728:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8728:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8718:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8505:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8516:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8528:6:9",
														"type": ""
													}
												],
												"src": "8469:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8870:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8916:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8918:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8918:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8918:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8891:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8900:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8887:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:32:9"
															},
															"nodeType": "YulIf",
															"src": "8880:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9009:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9024:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9038:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9028:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9053:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9088:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9099:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9084:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9084:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9108:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9063:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9063:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9053:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8840:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8851:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8863:6:9",
														"type": ""
													}
												],
												"src": "8804:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9204:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9221:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9244:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9226:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9214:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9214:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9192:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9199:3:9",
														"type": ""
													}
												],
												"src": "9139:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9361:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9371:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9383:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9379:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9379:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9371:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9451:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9464:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9475:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9460:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9407:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9407:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9333:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9345:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9356:4:9",
														"type": ""
													}
												],
												"src": "9263:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9587:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9604:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9609:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9597:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9597:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9625:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9644:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9649:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9640:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9640:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9625:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9559:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9564:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9575:11:9",
														"type": ""
													}
												],
												"src": "9491:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9772:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9794:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9802:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9790:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9806:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9783:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9783:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9783:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9764:6:9",
														"type": ""
													}
												],
												"src": "9666:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9999:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10009:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10075:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10080:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10016:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10181:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "10092:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10092:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10194:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10205:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10210:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10201:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10201:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10194:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9987:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9995:3:9",
														"type": ""
													}
												],
												"src": "9853:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10396:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10406:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10418:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10429:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10414:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10406:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10453:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10464:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10449:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10449:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10472:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10478:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10468:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10468:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10442:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10498:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10632:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10506:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10506:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10498:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10376:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10391:4:9",
														"type": ""
													}
												],
												"src": "10225:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10756:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10778:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10786:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10774:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10774:14:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10790:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10767:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10767:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10767:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10748:6:9",
														"type": ""
													}
												],
												"src": "10650:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10974:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10984:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11050:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11055:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10991:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10991:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10984:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11156:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																	"nodeType": "YulIdentifier",
																	"src": "11067:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11067:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11169:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11180:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11185:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11176:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11176:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11169:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10962:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10970:3:9",
														"type": ""
													}
												],
												"src": "10828:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11371:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11381:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11393:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11389:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11428:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11439:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11424:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11424:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11447:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11453:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11443:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11443:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11417:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11417:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11473:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11607:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11481:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11473:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11351:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11366:4:9",
														"type": ""
													}
												],
												"src": "11200:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11738:34:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11748:18:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11763:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11748:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11710:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11715:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11726:11:9",
														"type": ""
													}
												],
												"src": "11625:147:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11884:8:9",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11876:6:9",
														"type": ""
													}
												],
												"src": "11778:114:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12061:235:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12071:90:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12154:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12159:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12078:75:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12078:83:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12071:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12259:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "12170:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12170:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12170:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12272:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12283:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12288:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12279:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12279:11:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12272:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12049:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12057:3:9",
														"type": ""
													}
												],
												"src": "11898:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12490:191:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12501:154:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12651:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12508:141:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12508:147:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12501:3:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12665:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12672:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12665:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12477:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12486:3:9",
														"type": ""
													}
												],
												"src": "12302:379:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12841:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12851:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12863:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12874:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12859:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12851:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12931:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12944:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12955:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12940:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12940:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12887:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12887:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12887:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13012:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13025:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13036:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13021:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12968:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12968:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12968:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13094:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13107:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13118:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13103:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13103:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13050:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13050:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12797:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12809:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12817:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12825:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12836:4:9",
														"type": ""
													}
												],
												"src": "12687:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13241:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13263:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13271:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13259:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13259:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13275:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13252:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13331:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13339:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13327:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13344:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13320:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13320:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13233:6:9",
														"type": ""
													}
												],
												"src": "13135:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13512:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13522:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13588:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13593:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13529:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13529:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13522:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13694:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13605:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13605:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13605:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13707:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13718:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13723:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13714:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13714:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13707:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13500:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13508:3:9",
														"type": ""
													}
												],
												"src": "13366:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13909:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13919:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13931:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13942:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13927:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13927:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13919:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13966:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13977:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13962:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13962:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13985:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13991:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13981:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13981:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13955:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13955:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13955:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14011:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14145:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14019:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14019:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14011:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13889:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13904:4:9",
														"type": ""
													}
												],
												"src": "13738:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14269:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14291:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14299:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14287:14:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14303:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14280:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14280:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14280:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14261:6:9",
														"type": ""
													}
												],
												"src": "14163:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14492:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14502:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14568:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14573:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14509:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14502:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14674:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nodeType": "YulIdentifier",
																	"src": "14585:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14585:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14585:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14687:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14698:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14694:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14694:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14687:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14480:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14488:3:9",
														"type": ""
													}
												],
												"src": "14346:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14889:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14899:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14911:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14922:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14907:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14907:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14899:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14946:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14957:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14942:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14965:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14971:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14961:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14961:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14935:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14935:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14935:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14991:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15125:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14999:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14999:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14991:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14869:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14884:4:9",
														"type": ""
													}
												],
												"src": "14718:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15249:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15271:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15279:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15267:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15267:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15283:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15260:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15260:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15241:6:9",
														"type": ""
													}
												],
												"src": "15143:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15477:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15487:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15553:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15558:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15494:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15494:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15487:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15659:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "15570:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15570:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15570:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15672:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15683:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15688:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15679:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15672:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15465:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15473:3:9",
														"type": ""
													}
												],
												"src": "15331:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15874:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15884:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15896:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15907:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15892:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15884:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15931:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15942:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15927:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15927:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15950:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15956:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15946:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15946:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15920:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15920:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15920:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15976:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16110:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15984:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15984:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15976:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15854:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15869:4:9",
														"type": ""
													}
												],
												"src": "15703:419:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461026d578063a694fc3a14610298578063f2fde38b146102c1578063f301af42146102ea578063fd71c65014610327576101ae565b8063150b7a02146101b35780632e17de78146101f0578063715018a6146102195780638488cc4114610230576101ae565b366101ae57600061009b6003610350565b346100a69190610a8c565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101059190610afe565b600060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061014b9190610cb2565b905060005b81518110156101ac5782600560006006848154811061017257610171610cfb565b5b90600052602060002001548152602001908152602001600020600082825461019a9190610d2a565b92505081905550806001019050610150565b005b600080fd5b3480156101bf57600080fd5b506101da60048036038101906101d59190610e54565b61035e565b6040516101e79190610f12565b60405180910390f35b3480156101fc57600080fd5b5061021760048036038101906102129190610f2d565b610372565b005b34801561022557600080fd5b5061022e6105f8565b005b34801561023c57600080fd5b5061025760048036038101906102529190610f2d565b61060c565b6040516102649190610afe565b60405180910390f35b34801561027957600080fd5b5061028261063f565b60405161028f9190610afe565b60405180910390f35b3480156102a457600080fd5b506102bf60048036038101906102ba9190610f2d565b610668565b005b3480156102cd57600080fd5b506102e860048036038101906102e39190610f5a565b610781565b005b3480156102f657600080fd5b50610311600480360381019061030c9190610f2d565b610804565b60405161031e9190610f96565b60405180910390f35b34801561033357600080fd5b5061034e60048036038101906103499190610f5a565b61081c565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b6002600154036103b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ae9061100e565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610460576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104579061107a565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556104a06003610868565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600560008481526020019081526020016000205460405161050c906110cb565b60006040518083038185875af1925050503d8060008114610549576040519150601f19603f3d011682016040523d82523d6000602084013e61054e565b606091505b505090508061055c57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033856040518463ffffffff1660e01b81526004016105bb939291906110e0565b600060405180830381600087803b1580156105d557600080fd5b505af11580156105e9573d6000803e3d6000fd5b50505050506001808190555050565b6106006108c4565b61060a6000610942565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b81526004016106c7939291906110e0565b600060405180830381600087803b1580156106e157600080fd5b505af11580156106f5573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600681908060018154018082558091505060019003906000526020600020016000909190919091505561077e6003610a06565b50565b6107896108c4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611189565b60405180910390fd5b61080181610942565b50565b60056020528060005260406000206000915090505481565b6108246108c4565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600001549050600081116108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ab906111f5565b60405180910390fd5b6001810382600001819055505050565b6108cc610a1c565b73ffffffffffffffffffffffffffffffffffffffff166108ea61063f565b73ffffffffffffffffffffffffffffffffffffffff1614610940576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093790611261565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a9782610a24565b9150610aa283610a24565b925082610ab257610ab1610a2e565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ae882610abd565b9050919050565b610af881610add565b82525050565b6000602082019050610b136000830184610aef565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b7b82610b32565b810181811067ffffffffffffffff82111715610b9a57610b99610b43565b5b80604052505050565b6000610bad610b19565b9050610bb98282610b72565b919050565b600067ffffffffffffffff821115610bd957610bd8610b43565b5b602082029050602081019050919050565b600080fd5b610bf881610a24565b8114610c0357600080fd5b50565b600081519050610c1581610bef565b92915050565b6000610c2e610c2984610bbe565b610ba3565b90508083825260208201905060208402830185811115610c5157610c50610bea565b5b835b81811015610c7a5780610c668882610c06565b845260208401935050602081019050610c53565b5050509392505050565b600082601f830112610c9957610c98610b2d565b5b8151610ca9848260208601610c1b565b91505092915050565b600060208284031215610cc857610cc7610b23565b5b600082015167ffffffffffffffff811115610ce657610ce5610b28565b5b610cf284828501610c84565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d3582610a24565b9150610d4083610a24565b9250828201905080821115610d5857610d57610a5d565b5b92915050565b610d6781610add565b8114610d7257600080fd5b50565b600081359050610d8481610d5e565b92915050565b600081359050610d9981610bef565b92915050565b600080fd5b600067ffffffffffffffff821115610dbf57610dbe610b43565b5b610dc882610b32565b9050602081019050919050565b82818337600083830152505050565b6000610df7610df284610da4565b610ba3565b905082815260208101848484011115610e1357610e12610d9f565b5b610e1e848285610dd5565b509392505050565b600082601f830112610e3b57610e3a610b2d565b5b8135610e4b848260208601610de4565b91505092915050565b60008060008060808587031215610e6e57610e6d610b23565b5b6000610e7c87828801610d75565b9450506020610e8d87828801610d75565b9350506040610e9e87828801610d8a565b925050606085013567ffffffffffffffff811115610ebf57610ebe610b28565b5b610ecb87828801610e26565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610f0c81610ed7565b82525050565b6000602082019050610f276000830184610f03565b92915050565b600060208284031215610f4357610f42610b23565b5b6000610f5184828501610d8a565b91505092915050565b600060208284031215610f7057610f6f610b23565b5b6000610f7e84828501610d75565b91505092915050565b610f9081610a24565b82525050565b6000602082019050610fab6000830184610f87565b92915050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000610ff8601f83610fb1565b915061100382610fc2565b602082019050919050565b6000602082019050818103600083015261102781610feb565b9050919050565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b6000611064601683610fb1565b915061106f8261102e565b602082019050919050565b6000602082019050818103600083015261109381611057565b9050919050565b600081905092915050565b50565b60006110b560008361109a565b91506110c0826110a5565b600082019050919050565b60006110d6826110a8565b9150819050919050565b60006060820190506110f56000830186610aef565b6111026020830185610aef565b61110f6040830184610f87565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611173602683610fb1565b915061117e82611117565b604082019050919050565b600060208201905081810360008301526111a281611166565b9050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b60006111df601b83610fb1565b91506111ea826111a9565b602082019050919050565b6000602082019050818103600083015261120e816111d2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061124b602083610fb1565b915061125682611215565b602082019050919050565b6000602082019050818103600083015261127a8161123e565b905091905056fea26469706673582212204c0b0930e1b3f396ce9c5f43e16766fe1b0c8c2ecfcbeff0a8e538eaa113ee4364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x327 JUMPI PUSH2 0x1AE JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x230 JUMPI PUSH2 0x1AE JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AE JUMPI PUSH1 0x0 PUSH2 0x9B PUSH1 0x3 PUSH2 0x350 JUMP JUMPDEST CALLVALUE PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xCB2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1AC JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0xCFB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xD2A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x150 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xE54 JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22E PUSH2 0x5F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AE SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x460 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x457 SWAP1 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x4A0 PUSH1 0x3 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x50C SWAP1 PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x54E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x600 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x60A PUSH1 0x0 PUSH2 0x942 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x77E PUSH1 0x3 PUSH2 0xA06 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x789 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x801 DUP2 PUSH2 0x942 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x824 PUSH2 0x8C4 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x8CC PUSH2 0xA1C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EA PUSH2 0x63F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x940 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x937 SWAP1 PUSH2 0x1261 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA97 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA2 DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xAB2 JUMPI PUSH2 0xAB1 PUSH2 0xA2E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE8 DUP3 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF8 DUP2 PUSH2 0xADD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB7B DUP3 PUSH2 0xB32 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP PUSH2 0xBB9 DUP3 DUP3 PUSH2 0xB72 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBD9 JUMPI PUSH2 0xBD8 PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xA24 JUMP JUMPDEST DUP2 EQ PUSH2 0xC03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC15 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2E PUSH2 0xC29 DUP5 PUSH2 0xBBE JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xC51 JUMPI PUSH2 0xC50 PUSH2 0xBEA JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC7A JUMPI DUP1 PUSH2 0xC66 DUP9 DUP3 PUSH2 0xC06 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC53 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC99 JUMPI PUSH2 0xC98 PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xCA9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xC1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC8 JUMPI PUSH2 0xCC7 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE6 JUMPI PUSH2 0xCE5 PUSH2 0xB28 JUMP JUMPDEST JUMPDEST PUSH2 0xCF2 DUP5 DUP3 DUP6 ADD PUSH2 0xC84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP3 PUSH2 0xA24 JUMP JUMPDEST SWAP2 POP PUSH2 0xD40 DUP4 PUSH2 0xA24 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0xA5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD67 DUP2 PUSH2 0xADD JUMP JUMPDEST DUP2 EQ PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD84 DUP2 PUSH2 0xD5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD99 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0xB43 JUMP JUMPDEST JUMPDEST PUSH2 0xDC8 DUP3 PUSH2 0xB32 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF7 PUSH2 0xDF2 DUP5 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xD9F JUMP JUMPDEST JUMPDEST PUSH2 0xE1E DUP5 DUP3 DUP6 PUSH2 0xDD5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE3B JUMPI PUSH2 0xE3A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xE4B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xDE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE6E JUMPI PUSH2 0xE6D PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE7C DUP8 DUP3 DUP9 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE8D DUP8 DUP3 DUP9 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE9E DUP8 DUP3 DUP9 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xB28 JUMP JUMPDEST JUMPDEST PUSH2 0xECB DUP8 DUP3 DUP9 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF0C DUP2 PUSH2 0xED7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF27 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF42 PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP5 DUP3 DUP6 ADD PUSH2 0xD8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF70 JUMPI PUSH2 0xF6F PUSH2 0xB23 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF7E DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF90 DUP2 PUSH2 0xA24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF8 PUSH1 0x1F DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1003 DUP3 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1027 DUP2 PUSH2 0xFEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1064 PUSH1 0x16 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x106F DUP3 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1093 DUP2 PUSH2 0x1057 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10B5 PUSH1 0x0 DUP4 PUSH2 0x109A JUMP JUMPDEST SWAP2 POP PUSH2 0x10C0 DUP3 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D6 DUP3 PUSH2 0x10A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x1102 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAEF JUMP JUMPDEST PUSH2 0x110F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xF87 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1173 PUSH1 0x26 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x117E DUP3 PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11A2 DUP2 PUSH2 0x1166 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF PUSH1 0x1B DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EA DUP3 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x120E DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124B PUSH1 0x20 DUP4 PUSH2 0xFB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1256 DUP3 PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x127A DUP2 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SIGNEXTEND MULMOD ADDRESS 0xE1 0xB3 RETURN SWAP7 0xCE SWAP13 0x5F NUMBER 0xE1 PUSH8 0x66FE1B0C8C2ECFCB 0xEF CREATE 0xA8 0xE5 CODESIZE 0xEA LOG1 SGT 0xEE NUMBER PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "491:1742:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1919:20;1954:27;:17;:25;:27::i;:::-;1942:9;:39;;;;:::i;:::-;1919:62;;1991:29;2027:12;;;;;;;;;;;2023:31;;;2063:4;2023:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1991:78;;2092:9;2088:137;2111:12;:19;2107:1;:23;2088:137;;;2173:12;2146:7;:23;2154:11;2166:1;2154:14;;;;;;;;:::i;:::-;;;;;;;;;;2146:23;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;2210:3;;;;;2088:137;;;;491:1742;;;;588:200:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1453:423:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;867:48:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1197:250:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;921:43:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1083:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:112:6;892:7;918;:14;;;911:21;;827:112;;;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;1453:423:8:-;1744:1:1;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1552:10:8::1;1527:35;;:12;:21;1540:7;1527:21;;;;;;;;;;;;;;;;;;;;;:35;;;1519:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1606:12;:21;1619:7;1606:21;;;;;;;;;;;;1599:28;;;;;;;;;;;1637:29;:17;:27;:29::i;:::-;1677:12;1703;:21;1716:7;1703:21;;;;;;;;;;;;;;;;;;;;;1695:35;;1738:7;:16;1746:7;1738:16;;;;;;;;;;;;1695:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1676:83;;;1777:7;1769:16;;;::::0;::::1;;1803:12;;;;;;;;;;;1795:38;;;1842:4;1849:10;1861:7;1795:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1509:367;1701:1:1::0;2628:7;:22;;;;1453:423:8;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;867:48:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1197:250:8:-;1256:12;;;;;;;;;;;1248:38;;;1287:10;1307:4;1314:7;1248:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1356:10;1332:12;:21;1345:7;1332:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1376:11;1393:7;1376:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:29;:17;:27;:29::i;:::-;1197:250;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;921:43:8:-;;;;;;;;;;;;;;;;;:::o;1083:108::-;1094:13:0;:11;:13::i;:::-;1172:12:8::1;1157;;:27;;;;;;;;;;;;;;;;;;1083:108:::0;:::o;1074:229:6:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7:77:9:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:180;324:77;321:1;314:88;421:4;418:1;411:15;445:4;442:1;435:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;653:126::-;690:7;730:42;723:5;719:54;708:65;;653:126;;;:::o;785:96::-;822:7;851:24;869:5;851:24;:::i;:::-;840:35;;785:96;;;:::o;887:118::-;974:24;992:5;974:24;:::i;:::-;969:3;962:37;887:118;;:::o;1011:222::-;1104:4;1142:2;1131:9;1127:18;1119:26;;1155:71;1223:1;1212:9;1208:17;1199:6;1155:71;:::i;:::-;1011:222;;;;:::o;1239:75::-;1272:6;1305:2;1299:9;1289:19;;1239:75;:::o;1320:117::-;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1566:117;1675:1;1672;1665:12;1689:102;1730:6;1781:2;1777:7;1772:2;1765:5;1761:14;1757:28;1747:38;;1689:102;;;:::o;1797:180::-;1845:77;1842:1;1835:88;1942:4;1939:1;1932:15;1966:4;1963:1;1956:15;1983:281;2066:27;2088:4;2066:27;:::i;:::-;2058:6;2054:40;2196:6;2184:10;2181:22;2160:18;2148:10;2145:34;2142:62;2139:88;;;2207:18;;:::i;:::-;2139:88;2247:10;2243:2;2236:22;2026:238;1983:281;;:::o;2270:129::-;2304:6;2331:20;;:::i;:::-;2321:30;;2360:33;2388:4;2380:6;2360:33;:::i;:::-;2270:129;;;:::o;2405:311::-;2482:4;2572:18;2564:6;2561:30;2558:56;;;2594:18;;:::i;:::-;2558:56;2644:4;2636:6;2632:17;2624:25;;2704:4;2698;2694:15;2686:23;;2405:311;;;:::o;2722:117::-;2831:1;2828;2821:12;2845:122;2918:24;2936:5;2918:24;:::i;:::-;2911:5;2908:35;2898:63;;2957:1;2954;2947:12;2898:63;2845:122;:::o;2973:143::-;3030:5;3061:6;3055:13;3046:22;;3077:33;3104:5;3077:33;:::i;:::-;2973:143;;;;:::o;3139:732::-;3246:5;3271:81;3287:64;3344:6;3287:64;:::i;:::-;3271:81;:::i;:::-;3262:90;;3372:5;3401:6;3394:5;3387:21;3435:4;3428:5;3424:16;3417:23;;3488:4;3480:6;3476:17;3468:6;3464:30;3517:3;3509:6;3506:15;3503:122;;;3536:79;;:::i;:::-;3503:122;3651:6;3634:231;3668:6;3663:3;3660:15;3634:231;;;3743:3;3772:48;3816:3;3804:10;3772:48;:::i;:::-;3767:3;3760:61;3850:4;3845:3;3841:14;3834:21;;3710:155;3694:4;3689:3;3685:14;3678:21;;3634:231;;;3638:21;3252:619;;3139:732;;;;;:::o;3894:385::-;3976:5;4025:3;4018:4;4010:6;4006:17;4002:27;3992:122;;4033:79;;:::i;:::-;3992:122;4143:6;4137:13;4168:105;4269:3;4261:6;4254:4;4246:6;4242:17;4168:105;:::i;:::-;4159:114;;3982:297;3894:385;;;;:::o;4285:554::-;4380:6;4429:2;4417:9;4408:7;4404:23;4400:32;4397:119;;;4435:79;;:::i;:::-;4397:119;4576:1;4565:9;4561:17;4555:24;4606:18;4598:6;4595:30;4592:117;;;4628:79;;:::i;:::-;4592:117;4733:89;4814:7;4805:6;4794:9;4790:22;4733:89;:::i;:::-;4723:99;;4526:306;4285:554;;;;:::o;4845:180::-;4893:77;4890:1;4883:88;4990:4;4987:1;4980:15;5014:4;5011:1;5004:15;5031:191;5071:3;5090:20;5108:1;5090:20;:::i;:::-;5085:25;;5124:20;5142:1;5124:20;:::i;:::-;5119:25;;5167:1;5164;5160:9;5153:16;;5188:3;5185:1;5182:10;5179:36;;;5195:18;;:::i;:::-;5179:36;5031:191;;;;:::o;5228:122::-;5301:24;5319:5;5301:24;:::i;:::-;5294:5;5291:35;5281:63;;5340:1;5337;5330:12;5281:63;5228:122;:::o;5356:139::-;5402:5;5440:6;5427:20;5418:29;;5456:33;5483:5;5456:33;:::i;:::-;5356:139;;;;:::o;5501:::-;5547:5;5585:6;5572:20;5563:29;;5601:33;5628:5;5601:33;:::i;:::-;5501:139;;;;:::o;5646:117::-;5755:1;5752;5745:12;5769:307;5830:4;5920:18;5912:6;5909:30;5906:56;;;5942:18;;:::i;:::-;5906:56;5980:29;6002:6;5980:29;:::i;:::-;5972:37;;6064:4;6058;6054:15;6046:23;;5769:307;;;:::o;6082:146::-;6179:6;6174:3;6169;6156:30;6220:1;6211:6;6206:3;6202:16;6195:27;6082:146;;;:::o;6234:423::-;6311:5;6336:65;6352:48;6393:6;6352:48;:::i;:::-;6336:65;:::i;:::-;6327:74;;6424:6;6417:5;6410:21;6462:4;6455:5;6451:16;6500:3;6491:6;6486:3;6482:16;6479:25;6476:112;;;6507:79;;:::i;:::-;6476:112;6597:54;6644:6;6639:3;6634;6597:54;:::i;:::-;6317:340;6234:423;;;;;:::o;6676:338::-;6731:5;6780:3;6773:4;6765:6;6761:17;6757:27;6747:122;;6788:79;;:::i;:::-;6747:122;6905:6;6892:20;6930:78;7004:3;6996:6;6989:4;6981:6;6977:17;6930:78;:::i;:::-;6921:87;;6737:277;6676:338;;;;:::o;7020:943::-;7115:6;7123;7131;7139;7188:3;7176:9;7167:7;7163:23;7159:33;7156:120;;;7195:79;;:::i;:::-;7156:120;7315:1;7340:53;7385:7;7376:6;7365:9;7361:22;7340:53;:::i;:::-;7330:63;;7286:117;7442:2;7468:53;7513:7;7504:6;7493:9;7489:22;7468:53;:::i;:::-;7458:63;;7413:118;7570:2;7596:53;7641:7;7632:6;7621:9;7617:22;7596:53;:::i;:::-;7586:63;;7541:118;7726:2;7715:9;7711:18;7698:32;7757:18;7749:6;7746:30;7743:117;;;7779:79;;:::i;:::-;7743:117;7884:62;7938:7;7929:6;7918:9;7914:22;7884:62;:::i;:::-;7874:72;;7669:287;7020:943;;;;;;;:::o;7969:149::-;8005:7;8045:66;8038:5;8034:78;8023:89;;7969:149;;;:::o;8124:115::-;8209:23;8226:5;8209:23;:::i;:::-;8204:3;8197:36;8124:115;;:::o;8245:218::-;8336:4;8374:2;8363:9;8359:18;8351:26;;8387:69;8453:1;8442:9;8438:17;8429:6;8387:69;:::i;:::-;8245:218;;;;:::o;8469:329::-;8528:6;8577:2;8565:9;8556:7;8552:23;8548:32;8545:119;;;8583:79;;:::i;:::-;8545:119;8703:1;8728:53;8773:7;8764:6;8753:9;8749:22;8728:53;:::i;:::-;8718:63;;8674:117;8469:329;;;;:::o;8804:::-;8863:6;8912:2;8900:9;8891:7;8887:23;8883:32;8880:119;;;8918:79;;:::i;:::-;8880:119;9038:1;9063:53;9108:7;9099:6;9088:9;9084:22;9063:53;:::i;:::-;9053:63;;9009:117;8804:329;;;;:::o;9139:118::-;9226:24;9244:5;9226:24;:::i;:::-;9221:3;9214:37;9139:118;;:::o;9263:222::-;9356:4;9394:2;9383:9;9379:18;9371:26;;9407:71;9475:1;9464:9;9460:17;9451:6;9407:71;:::i;:::-;9263:222;;;;:::o;9491:169::-;9575:11;9609:6;9604:3;9597:19;9649:4;9644:3;9640:14;9625:29;;9491:169;;;;:::o;9666:181::-;9806:33;9802:1;9794:6;9790:14;9783:57;9666:181;:::o;9853:366::-;9995:3;10016:67;10080:2;10075:3;10016:67;:::i;:::-;10009:74;;10092:93;10181:3;10092:93;:::i;:::-;10210:2;10205:3;10201:12;10194:19;;9853:366;;;:::o;10225:419::-;10391:4;10429:2;10418:9;10414:18;10406:26;;10478:9;10472:4;10468:20;10464:1;10453:9;10449:17;10442:47;10506:131;10632:4;10506:131;:::i;:::-;10498:139;;10225:419;;;:::o;10650:172::-;10790:24;10786:1;10778:6;10774:14;10767:48;10650:172;:::o;10828:366::-;10970:3;10991:67;11055:2;11050:3;10991:67;:::i;:::-;10984:74;;11067:93;11156:3;11067:93;:::i;:::-;11185:2;11180:3;11176:12;11169:19;;10828:366;;;:::o;11200:419::-;11366:4;11404:2;11393:9;11389:18;11381:26;;11453:9;11447:4;11443:20;11439:1;11428:9;11424:17;11417:47;11481:131;11607:4;11481:131;:::i;:::-;11473:139;;11200:419;;;:::o;11625:147::-;11726:11;11763:3;11748:18;;11625:147;;;;:::o;11778:114::-;;:::o;11898:398::-;12057:3;12078:83;12159:1;12154:3;12078:83;:::i;:::-;12071:90;;12170:93;12259:3;12170:93;:::i;:::-;12288:1;12283:3;12279:11;12272:18;;11898:398;;;:::o;12302:379::-;12486:3;12508:147;12651:3;12508:147;:::i;:::-;12501:154;;12672:3;12665:10;;12302:379;;;:::o;12687:442::-;12836:4;12874:2;12863:9;12859:18;12851:26;;12887:71;12955:1;12944:9;12940:17;12931:6;12887:71;:::i;:::-;12968:72;13036:2;13025:9;13021:18;13012:6;12968:72;:::i;:::-;13050;13118:2;13107:9;13103:18;13094:6;13050:72;:::i;:::-;12687:442;;;;;;:::o;13135:225::-;13275:34;13271:1;13263:6;13259:14;13252:58;13344:8;13339:2;13331:6;13327:15;13320:33;13135:225;:::o;13366:366::-;13508:3;13529:67;13593:2;13588:3;13529:67;:::i;:::-;13522:74;;13605:93;13694:3;13605:93;:::i;:::-;13723:2;13718:3;13714:12;13707:19;;13366:366;;;:::o;13738:419::-;13904:4;13942:2;13931:9;13927:18;13919:26;;13991:9;13985:4;13981:20;13977:1;13966:9;13962:17;13955:47;14019:131;14145:4;14019:131;:::i;:::-;14011:139;;13738:419;;;:::o;14163:177::-;14303:29;14299:1;14291:6;14287:14;14280:53;14163:177;:::o;14346:366::-;14488:3;14509:67;14573:2;14568:3;14509:67;:::i;:::-;14502:74;;14585:93;14674:3;14585:93;:::i;:::-;14703:2;14698:3;14694:12;14687:19;;14346:366;;;:::o;14718:419::-;14884:4;14922:2;14911:9;14907:18;14899:26;;14971:9;14965:4;14961:20;14957:1;14946:9;14942:17;14935:47;14999:131;15125:4;14999:131;:::i;:::-;14991:139;;14718:419;;;:::o;15143:182::-;15283:34;15279:1;15271:6;15267:14;15260:58;15143:182;:::o;15331:366::-;15473:3;15494:67;15558:2;15553:3;15494:67;:::i;:::-;15487:74;;15570:93;15659:3;15570:93;:::i;:::-;15688:2;15683:3;15679:12;15672:19;;15331:366;;;:::o;15703:419::-;15869:4;15907:2;15896:9;15892:18;15884:26;;15956:9;15950:4;15946:20;15942:1;15931:9;15927:17;15920:47;15984:131;16110:4;15984:131;:::i;:::-;15976:139;;15703:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "958200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30443",
								"rewards(uint256)": "infinite",
								"setNftContact(address)": "27074",
								"stake(uint256)": "infinite",
								"tokenOwnedBy(uint256)": "2906",
								"transferOwnership(address)": "30788",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 998,
									"end": 1077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1058,
									"end": 1070,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1055,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1043,
									"end": 1055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1070,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 998,
									"end": 1077,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 491,
									"end": 2233,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c0b0930e1b3f396ce9c5f43e16766fe1b0c8c2ecfcbeff0a8e538eaa113ee4364736f6c63430008110033",
									".code": [
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "F301AF42"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1954,
											"end": 1971,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1954,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1954,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1942,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1942,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1981,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1919,
											"end": 1981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2027,
											"end": 2039,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2054,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 2063,
											"end": 2067,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2023,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2023,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2069,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2069,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2130,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2130,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2173,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2153,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2165,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2154,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2154,
											"end": 2168,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2146,
											"end": 2185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2185,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2225,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 491,
											"end": 2233,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1453,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1453,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 867,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 867,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1197,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1197,
											"end": 1447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 921,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 921,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 921,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1083,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1083,
											"end": 1191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1562,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1547,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1562,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1562,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1519,
											"end": 1589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1519,
											"end": 1589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1626,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1599,
											"end": 1627,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1666,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1637,
											"end": 1654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1637,
											"end": 1666,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1666,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1637,
											"end": 1666,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1723,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1703,
											"end": 1724,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1730,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1753,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1754,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1695,
											"end": 1759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1676,
											"end": 1759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1785,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1769,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1803,
											"end": 1815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1833,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1842,
											"end": 1846,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1849,
											"end": 1859,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1861,
											"end": 1868,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1795,
											"end": 1869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1869,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1509,
											"end": 1876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1876,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 867,
											"end": 915,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 867,
											"end": 915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 867,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1286,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1286,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1287,
											"end": 1297,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1248,
											"end": 1322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1356,
											"end": 1366,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1353,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1387,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1393,
											"end": 1400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1401,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1411,
											"end": 1428,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1411,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1411,
											"end": 1440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1411,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 921,
											"end": 964,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 921,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1172,
											"end": 1184,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1157,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1177,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 276,
											"end": 456,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 276,
											"end": 456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 324,
											"end": 401,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 402,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 445,
											"end": 449,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 450,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 537,
											"end": 538,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 519,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 519,
											"end": 539,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 514,
											"end": 539,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 514,
											"end": 539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 553,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 553,
											"end": 573,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 548,
											"end": 573,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 592,
											"end": 593,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 582,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 597,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 597,
											"end": 615,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 597,
											"end": 615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 582,
											"end": 617,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 582,
											"end": 617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 639,
											"end": 640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 636,
											"end": 637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 632,
											"end": 641,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 627,
											"end": 641,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 462,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 779,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 653,
											"end": 779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 690,
											"end": 697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 772,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 728,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 719,
											"end": 773,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 708,
											"end": 773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 708,
											"end": 773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 653,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 653,
											"end": 779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 653,
											"end": 779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 785,
											"end": 881,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 785,
											"end": 881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 822,
											"end": 829,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 869,
											"end": 874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 851,
											"end": 875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 851,
											"end": 875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 851,
											"end": 875,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 851,
											"end": 875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 785,
											"end": 881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 785,
											"end": 881,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 785,
											"end": 881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 785,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 1005,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 887,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 974,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 974,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 974,
											"end": 998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 974,
											"end": 998,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 974,
											"end": 998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 969,
											"end": 972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 962,
											"end": 999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 887,
											"end": 1005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 1005,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 1005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1119,
											"end": 1145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1223,
											"end": 1224,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1225,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1199,
											"end": 1205,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1155,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1226,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1155,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1314,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1239,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1307,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1308,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1314,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1239,
											"end": 1314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1566,
											"end": 1683,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1566,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1665,
											"end": 1677,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1689,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1730,
											"end": 1736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1783,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1777,
											"end": 1784,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1770,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1747,
											"end": 1785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1791,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1689,
											"end": 1791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1797,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1922,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1842,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1923,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1942,
											"end": 1946,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1966,
											"end": 1970,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1971,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2264,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1983,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2088,
											"end": 2092,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2066,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2066,
											"end": 2093,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 2066,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2054,
											"end": 2094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2184,
											"end": 2194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2145,
											"end": 2179,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2204,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2227,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2139,
											"end": 2227,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2207,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2227,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2139,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2026,
											"end": 2264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2264,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2399,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2270,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2331,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2331,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2388,
											"end": 2392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2360,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2399,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2399,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2399,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2270,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2716,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2405,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2561,
											"end": 2591,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2614,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2558,
											"end": 2614,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2594,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2594,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2594,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2594,
											"end": 2612,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2594,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2558,
											"end": 2614,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2558,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2636,
											"end": 2642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2649,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2649,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2708,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2709,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2686,
											"end": 2709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2716,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2722,
											"end": 2839,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2722,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2833,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2967,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2845,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2918,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2918,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2911,
											"end": 2916,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2898,
											"end": 2961,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2898,
											"end": 2961,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2898,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3068,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3068,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 3077,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3287,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3344,
											"end": 3350,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3287,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3287,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3271,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3352,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3271,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3262,
											"end": 3352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3262,
											"end": 3352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3377,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3387,
											"end": 3408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3439,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3428,
											"end": 3433,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3424,
											"end": 3440,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 3474,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3517,
											"end": 3520,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3521,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3625,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3503,
											"end": 3625,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3536,
											"end": 3615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3536,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3625,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3503,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3666,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3675,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3743,
											"end": 3746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3804,
											"end": 3814,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 3772,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3770,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3848,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3841,
											"end": 3855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 3855,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 3855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3710,
											"end": 3865,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3694,
											"end": 3698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3699,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3634,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3252,
											"end": 3871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3139,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3976,
											"end": 3981,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4022,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3992,
											"end": 4114,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 4033,
											"end": 4112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4033,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3992,
											"end": 4114,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3992,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4137,
											"end": 4150,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4269,
											"end": 4272,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4254,
											"end": 4258,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4246,
											"end": 4252,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 4168,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4168,
											"end": 4273,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4168,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4273,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 4279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4431,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4417,
											"end": 4426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4408,
											"end": 4415,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4404,
											"end": 4427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4400,
											"end": 4432,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4516,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4397,
											"end": 4516,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4435,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 4435,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4514,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4435,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4397,
											"end": 4516,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4397,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4576,
											"end": 4577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4579,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4606,
											"end": 4624,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4625,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4709,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4592,
											"end": 4709,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4628,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 4628,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4628,
											"end": 4707,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4628,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4709,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4592,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4814,
											"end": 4821,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4803,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4812,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4733,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4822,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4733,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4822,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4723,
											"end": 4822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4526,
											"end": 4832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 5025,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 4845,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4893,
											"end": 4970,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4890,
											"end": 4891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4987,
											"end": 4988,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4980,
											"end": 4995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5074,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5090,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 5090,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5085,
											"end": 5110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5124,
											"end": 5144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 5124,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5169,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5188,
											"end": 5191,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5182,
											"end": 5192,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 5195,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 5179,
											"end": 5215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5031,
											"end": 5222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5350,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5228,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5301,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 5301,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5294,
											"end": 5299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5291,
											"end": 5326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 5281,
											"end": 5344,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5341,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5338,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5281,
											"end": 5344,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 5281,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5228,
											"end": 5350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5427,
											"end": 5447,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5418,
											"end": 5447,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5483,
											"end": 5488,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 5456,
											"end": 5489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5456,
											"end": 5489,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 5456,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5552,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5592,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5563,
											"end": 5592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5601,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5601,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 5601,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5601,
											"end": 5634,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5601,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5763,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 5646,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5757,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 6076,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 5769,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5830,
											"end": 5834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5938,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5939,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5962,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5906,
											"end": 5962,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5942,
											"end": 5960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5962,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 5906,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 6002,
											"end": 6008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 5980,
											"end": 6009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5980,
											"end": 6009,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 5980,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5972,
											"end": 6009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6046,
											"end": 6069,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6046,
											"end": 6069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 6076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 6076,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 6076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5769,
											"end": 6076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6228,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6082,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6174,
											"end": 6177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6186,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 6220,
											"end": 6221,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6206,
											"end": 6209,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6202,
											"end": 6218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6195,
											"end": 6222,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6311,
											"end": 6316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6393,
											"end": 6399,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6352,
											"end": 6400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6336,
											"end": 6401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6401,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 6336,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6401,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6424,
											"end": 6430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6410,
											"end": 6431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 6466,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6455,
											"end": 6460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6503,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6491,
											"end": 6497,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6489,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6588,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 6476,
											"end": 6588,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6507,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6507,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6588,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 6476,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6644,
											"end": 6650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6642,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6597,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6651,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6597,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6234,
											"end": 6657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6773,
											"end": 6777,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6778,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6757,
											"end": 6784,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6747,
											"end": 6869,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6788,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6788,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 6788,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6788,
											"end": 6867,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6788,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6869,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6747,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6892,
											"end": 6912,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 7004,
											"end": 7007,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6981,
											"end": 6987,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6977,
											"end": 6994,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 6930,
											"end": 7008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 7008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 7008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 7014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6676,
											"end": 7014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7191,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 7176,
											"end": 7185,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7167,
											"end": 7174,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7163,
											"end": 7186,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7156,
											"end": 7276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 7195,
											"end": 7274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 7195,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7156,
											"end": 7276,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 7156,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7340,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7385,
											"end": 7392,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7376,
											"end": 7382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7340,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7340,
											"end": 7393,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 7340,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7393,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7330,
											"end": 7393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7513,
											"end": 7520,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7493,
											"end": 7502,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7468,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7468,
											"end": 7521,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 7468,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7458,
											"end": 7521,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7458,
											"end": 7521,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7570,
											"end": 7572,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7596,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 7641,
											"end": 7648,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7632,
											"end": 7638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7621,
											"end": 7630,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7617,
											"end": 7639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7596,
											"end": 7649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7649,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 7596,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7649,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7541,
											"end": 7659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7726,
											"end": 7728,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 7729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7698,
											"end": 7730,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7775,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7746,
											"end": 7776,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7860,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 7743,
											"end": 7860,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 7779,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 7779,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7779,
											"end": 7858,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 7779,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7743,
											"end": 7860,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 7743,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 7938,
											"end": 7945,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7927,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 7936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7884,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7884,
											"end": 7946,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 7884,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7946,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7874,
											"end": 7946,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7669,
											"end": 7956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7020,
											"end": 7963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 8118,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 7969,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8005,
											"end": 8012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8045,
											"end": 8111,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8038,
											"end": 8043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8034,
											"end": 8112,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 8118,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 8118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 8118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7969,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8239,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8124,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8226,
											"end": 8231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 8209,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8209,
											"end": 8232,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 8209,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8204,
											"end": 8207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8374,
											"end": 8376,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8359,
											"end": 8377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8377,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8453,
											"end": 8454,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8451,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8438,
											"end": 8455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8429,
											"end": 8435,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 8387,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8456,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 8387,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8528,
											"end": 8534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8565,
											"end": 8574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8556,
											"end": 8563,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8575,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8548,
											"end": 8580,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8664,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8545,
											"end": 8664,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8583,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8583,
											"end": 8662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8583,
											"end": 8662,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8583,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8545,
											"end": 8664,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 8545,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8703,
											"end": 8704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8773,
											"end": 8780,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8762,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8749,
											"end": 8771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 8728,
											"end": 8781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8728,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8863,
											"end": 8869,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8891,
											"end": 8898,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8887,
											"end": 8910,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8883,
											"end": 8915,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8918,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 8918,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 8880,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 9108,
											"end": 9115,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9105,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9084,
											"end": 9106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 9063,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9063,
											"end": 9116,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 9063,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9009,
											"end": 9126,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 9133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9257,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9139,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 9244,
											"end": 9249,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9226,
											"end": 9250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9226,
											"end": 9250,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 9226,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9214,
											"end": 9251,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9257,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9356,
											"end": 9360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9396,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9379,
											"end": 9397,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9397,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9371,
											"end": 9397,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9460,
											"end": 9477,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9451,
											"end": 9457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 9407,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9407,
											"end": 9478,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 9407,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9586,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9609,
											"end": 9615,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9604,
											"end": 9607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9597,
											"end": 9616,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9649,
											"end": 9653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9644,
											"end": 9647,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9640,
											"end": 9654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9625,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9625,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9847,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 9666,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9806,
											"end": 9839,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9802,
											"end": 9803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9800,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9790,
											"end": 9804,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9783,
											"end": 9840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 9847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 10219,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 9853,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 9998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 10080,
											"end": 10082,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10075,
											"end": 10078,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10016,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 10016,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10016,
											"end": 10083,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 10016,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10083,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10009,
											"end": 10083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 10181,
											"end": 10184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 10092,
											"end": 10185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10185,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 10092,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10210,
											"end": 10212,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10205,
											"end": 10208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10201,
											"end": 10213,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10194,
											"end": 10213,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10194,
											"end": 10213,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 10219,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 10219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 10219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9853,
											"end": 10219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10644,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 10225,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10391,
											"end": 10395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10429,
											"end": 10431,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10414,
											"end": 10432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10432,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10406,
											"end": 10432,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10478,
											"end": 10487,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10472,
											"end": 10476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10488,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10462,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10449,
											"end": 10466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10442,
											"end": 10489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 10632,
											"end": 10636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 10506,
											"end": 10637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10506,
											"end": 10637,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 10506,
											"end": 10637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10225,
											"end": 10644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10822,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 10650,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10790,
											"end": 10814,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F7420746865206F776E65722E00000000000000000000"
										},
										{
											"begin": 10786,
											"end": 10787,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10778,
											"end": 10784,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10774,
											"end": 10788,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10767,
											"end": 10815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10822,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10650,
											"end": 10822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 11194,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 10828,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 10973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 11055,
											"end": 11057,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 11050,
											"end": 11053,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 10991,
											"end": 11058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11058,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 10991,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10984,
											"end": 11058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10984,
											"end": 11058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11067,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11067,
											"end": 11160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 11067,
											"end": 11160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11067,
											"end": 11160,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 11067,
											"end": 11160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11185,
											"end": 11187,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11180,
											"end": 11183,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11176,
											"end": 11188,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11188,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 11194,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 11194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 11194,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10828,
											"end": 11194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11200,
											"end": 11619,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 11200,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11366,
											"end": 11370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11393,
											"end": 11402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11381,
											"end": 11407,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11453,
											"end": 11462,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11447,
											"end": 11451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11443,
											"end": 11463,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11440,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11424,
											"end": 11441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11417,
											"end": 11464,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11481,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 11607,
											"end": 11611,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11481,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 11481,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11481,
											"end": 11612,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 11481,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11473,
											"end": 11612,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11473,
											"end": 11612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11200,
											"end": 11619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11200,
											"end": 11619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11200,
											"end": 11619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11200,
											"end": 11619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11726,
											"end": 11737,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11625,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11892,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 11778,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 11892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12296,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 11898,
											"end": 12296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12057,
											"end": 12060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 12159,
											"end": 12160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12154,
											"end": 12157,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 12078,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12161,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 12078,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12071,
											"end": 12161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12071,
											"end": 12161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12259,
											"end": 12262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 12170,
											"end": 12263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12263,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 12170,
											"end": 12263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12288,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12283,
											"end": 12286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12279,
											"end": 12290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12296,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11898,
											"end": 12296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12681,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 12302,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 12651,
											"end": 12654,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 12508,
											"end": 12655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12508,
											"end": 12655,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 12508,
											"end": 12655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12501,
											"end": 12655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12501,
											"end": 12655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12672,
											"end": 12675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12665,
											"end": 12675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12681,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12302,
											"end": 12681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12836,
											"end": 12840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12874,
											"end": 12876,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 12863,
											"end": 12872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12859,
											"end": 12877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12851,
											"end": 12877,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12851,
											"end": 12877,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12887,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 12955,
											"end": 12956,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12944,
											"end": 12953,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12940,
											"end": 12957,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12931,
											"end": 12937,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 12887,
											"end": 12958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 12887,
											"end": 12958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12887,
											"end": 12958,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 12887,
											"end": 12958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 13036,
											"end": 13038,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13025,
											"end": 13034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13021,
											"end": 13039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 12968,
											"end": 13040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 12968,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13118,
											"end": 13120,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13107,
											"end": 13116,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13103,
											"end": 13121,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13094,
											"end": 13100,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 13050,
											"end": 13122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13122,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 13050,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12687,
											"end": 13129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13135,
											"end": 13360,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 13135,
											"end": 13360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13275,
											"end": 13309,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13271,
											"end": 13272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13263,
											"end": 13269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13259,
											"end": 13273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13252,
											"end": 13310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13344,
											"end": 13352,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13339,
											"end": 13341,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13331,
											"end": 13337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13327,
											"end": 13342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13320,
											"end": 13353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13135,
											"end": 13360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13135,
											"end": 13360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13732,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13366,
											"end": 13732,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13508,
											"end": 13511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13529,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 13593,
											"end": 13595,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 13588,
											"end": 13591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13529,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 13529,
											"end": 13596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13529,
											"end": 13596,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 13529,
											"end": 13596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13522,
											"end": 13596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13522,
											"end": 13596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 13694,
											"end": 13697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 13605,
											"end": 13698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13605,
											"end": 13698,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 13605,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13723,
											"end": 13725,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13718,
											"end": 13721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13714,
											"end": 13726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13707,
											"end": 13726,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13707,
											"end": 13726,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13732,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13732,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13732,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13366,
											"end": 13732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 14157,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 13738,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13904,
											"end": 13908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13942,
											"end": 13944,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13931,
											"end": 13940,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13927,
											"end": 13945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13945,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13919,
											"end": 13945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13991,
											"end": 14000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13985,
											"end": 13989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13981,
											"end": 14001,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13977,
											"end": 13978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13966,
											"end": 13975,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13962,
											"end": 13979,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13955,
											"end": 14002,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14019,
											"end": 14150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 14145,
											"end": 14149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14019,
											"end": 14150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 14019,
											"end": 14150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14019,
											"end": 14150,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 14019,
											"end": 14150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14011,
											"end": 14150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14011,
											"end": 14150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 14157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 14157,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 14157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 14157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14163,
											"end": 14340,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 14163,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14303,
											"end": 14332,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 14299,
											"end": 14300,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14287,
											"end": 14301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14280,
											"end": 14333,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14163,
											"end": 14340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14163,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14488,
											"end": 14491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 14573,
											"end": 14575,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 14568,
											"end": 14571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 14509,
											"end": 14576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 14509,
											"end": 14576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14576,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 14674,
											"end": 14677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 14585,
											"end": 14678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 14585,
											"end": 14678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14703,
											"end": 14705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14698,
											"end": 14701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14694,
											"end": 14706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14687,
											"end": 14706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14687,
											"end": 14706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14712,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14346,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14924,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14911,
											"end": 14920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14907,
											"end": 14925,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14899,
											"end": 14925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14899,
											"end": 14925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14971,
											"end": 14980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14965,
											"end": 14969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 14981,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14957,
											"end": 14958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14946,
											"end": 14955,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14942,
											"end": 14959,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14935,
											"end": 14982,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 15125,
											"end": 15129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 14999,
											"end": 15130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 14999,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14991,
											"end": 15130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 15137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14718,
											"end": 15137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15143,
											"end": 15325,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 15143,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15283,
											"end": 15317,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15279,
											"end": 15280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15271,
											"end": 15277,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15267,
											"end": 15281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15260,
											"end": 15318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15143,
											"end": 15325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15143,
											"end": 15325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15473,
											"end": 15476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15558,
											"end": 15560,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15553,
											"end": 15556,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 15494,
											"end": 15561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 15494,
											"end": 15561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15487,
											"end": 15561,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15487,
											"end": 15561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 15659,
											"end": 15662,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 15570,
											"end": 15663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 15570,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 15690,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15686,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15679,
											"end": 15691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15672,
											"end": 15691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15672,
											"end": 15691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15331,
											"end": 15697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 15873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15907,
											"end": 15909,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15896,
											"end": 15905,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15892,
											"end": 15910,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15884,
											"end": 15910,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15950,
											"end": 15954,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15946,
											"end": 15966,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15942,
											"end": 15943,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15940,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15927,
											"end": 15944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15920,
											"end": 15967,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 16110,
											"end": 16114,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 15984,
											"end": 16115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 15984,
											"end": 16115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15976,
											"end": 16115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15703,
											"end": 16122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(uint256)": "f301af42",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnedBy(uint256)": "8488cc41",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xa6bd273663275dbd3af37cd4a1eba8fc4fef46bc8faddade505a89f71103221a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94a5630e82c090ffbba111eae12219bfcdd8360944b4b93064b3eaab1b04abd3\",\"dweb:/ipfs/QmaEYcxf9L4V98ammpvpw26MBNknkdoNTBixMaEvDfkXLp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 445,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 478,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnedBy",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 482,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 485,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nameLocations": [
											"424:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "756:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "773:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"NFT": [
							437
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							656
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 113,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 153,
							"src": "117:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 314,
							"src": "186:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 269,
							"src": "262:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 410,
							"src": "327:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "NFT",
							"nameLocation": "397:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "438b6300",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "416:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "438:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "430:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:16:8"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "469:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "469:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "469:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "468:18:8"
									},
									"scope": 437,
									"src": "407:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 657,
							"src": "387:102:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Ownable",
										"nameLocations": [
											"516:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "516:7:8"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "516:7:8"
								},
								{
									"baseName": {
										"id": 440,
										"name": "ERC721Holder",
										"nameLocations": [
											"525:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "525:12:8"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "525:12:8"
								},
								{
									"baseName": {
										"id": 442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"539:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "539:15:8"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "539:15:8"
								}
							],
							"canonicalName": "SacredTemple",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "500:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "569:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 656,
									"src": "561:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "561:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 449,
									"libraryName": {
										"id": 446,
										"name": "Counters",
										"nameLocations": [
											"594:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "594:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "588:36:8",
									"typeName": {
										"id": 448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 447,
											"name": "Counters.Counter",
											"nameLocations": [
												"607:8:8",
												"616:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "607:16:8"
										},
										"referencedDeclaration": 341,
										"src": "607:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "654:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 656,
									"src": "629:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 451,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 450,
											"name": "Counters.Counter",
											"nameLocations": [
												"629:8:8",
												"638:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "629:16:8"
										},
										"referencedDeclaration": 341,
										"src": "629:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39",
									"id": 460,
									"name": "NFTStaked",
									"nameLocation": "684:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "702:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "694:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "717:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "709:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "734:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "726:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:47:8"
									},
									"src": "678:63:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b",
									"id": 468,
									"name": "NFTUnstaked",
									"nameLocation": "752:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "772:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "764:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "787:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "779:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "804:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "796:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:47:8"
									},
									"src": "746:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 474,
									"name": "Claimed",
									"nameLocation": "822:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "838:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "830:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "853:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "845:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:31:8"
									},
									"src": "816:45:8"
								},
								{
									"constant": false,
									"functionSelector": "8488cc41",
									"id": 478,
									"mutability": "mutable",
									"name": "tokenOwnedBy",
									"nameLocation": "903:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 656,
									"src": "867:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 477,
										"keyType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "876:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "867:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f301af42",
									"id": 482,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "957:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 656,
									"src": "921:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 481,
										"keyType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "930:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "921:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "941:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "tokenStaked",
									"nameLocation": "980:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 656,
									"src": "970:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "970:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"nodeType": "ArrayTypeName",
										"src": "970:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1033:44:8",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1043:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1058:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1043:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1043:27:8"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1019:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1011:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:22:8"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:0:8"
									},
									"scope": 656,
									"src": "998:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1147:44:8",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1157:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1172:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1157:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1157:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nameLocations": [
													"1137:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1137:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1137:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "1092:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1114:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1106:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:22:8"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:8"
									},
									"scope": 656,
									"src": "1083:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1238:209:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1287:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1291:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1287:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1307:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1299:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1299:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1299:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1314:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1256:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1248:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1248:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1270:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1248:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1248:74:8"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1332:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1345:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1332:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1356:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1360:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1356:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1332:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1332:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1393:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1376:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1388:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1376:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1376:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1376:25:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 538,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1411:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1429:9:8",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1411:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1411:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1411:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1206:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1220:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1212:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:17:8"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:8"
									},
									"scope": 656,
									"src": "1197:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1509:367:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1527:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1540:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1527:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1552:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1556:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1552:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1527:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1564:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1519:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1519:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1519:70:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1599:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1606:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1619:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1599:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 566,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1637:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1655:9:8",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1637:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1637:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1637:29:8"
											},
											{
												"assignments": [
													572,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1682:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "1677:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 571,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1677:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1756:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 575,
																			"name": "tokenOwnedBy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "1703:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 577,
																		"indexExpression": {
																			"id": 576,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1716:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1703:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1695:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1695:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1695:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1726:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1695:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 580,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1738:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1746:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1738:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1695:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1676:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1777:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1769:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1769:16:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 597,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1842:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1834:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 595,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1834:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1834:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1849:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1853:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1849:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1861:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 592,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1803:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 591,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1795:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1795:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1817:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1795:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "1795:74:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nameLocations": [
													"1487:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1487:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1487:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1462:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1478:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1470:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:17:8"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1509:0:8"
									},
									"scope": 656,
									"src": "1453:423:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "1909:322:8",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "sharePerEach",
														"nameLocation": "1927:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "1919:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1919:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 616,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 610,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1942:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1946:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1942:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 612,
																"name": "_stakedNFTCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1954:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$341_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 613,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1972:7:8",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "1954:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1954:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1942:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:62:8"
											},
											{
												"assignments": [
													621
												],
												"declarations": [
													{
														"constant": false,
														"id": 621,
														"mutability": "mutable",
														"name": "tokensStaked",
														"nameLocation": "2008:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "1991:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 619,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1991:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 620,
															"nodeType": "ArrayTypeName",
															"src": "1991:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 628,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2063:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$656",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2055:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 626,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2055:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2055:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 623,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2027:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 622,
																"name": "NFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "2023:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_NFT_$437_$",
																	"typeString": "type(contract NFT)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2023:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFT_$437",
																"typeString": "contract NFT"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2041:13:8",
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "2023:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2023:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1991:78:8"
											},
											{
												"body": {
													"id": 652,
													"nodeType": "Block",
													"src": "2132:93:8",
													"statements": [
														{
															"expression": {
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 640,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2146:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 644,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 641,
																			"name": "tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "2154:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 643,
																		"indexExpression": {
																			"id": 642,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "2166:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2154:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2146:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 645,
																	"name": "sharePerEach",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "2173:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2146:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "2146:39:8"
														},
														{
															"id": 651,
															"nodeType": "UncheckedBlock",
															"src": "2199:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2210:3:8",
																		"subExpression": {
																			"id": 648,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "2212:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 650,
																	"nodeType": "ExpressionStatement",
																	"src": "2210:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 636,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "2107:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 637,
															"name": "tokensStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "2111:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2124:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2111:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2107:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 653,
												"initializationExpression": {
													"assignments": [
														633
													],
													"declarations": [
														{
															"constant": false,
															"id": 633,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2100:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 653,
															"src": "2092:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 632,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 635,
													"initialValue": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2104:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2092:13:8"
												},
												"nodeType": "ForStatement",
												"src": "2088:137:8"
											}
										]
									},
									"id": 655,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:2:8"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1909:0:8"
									},
									"scope": 656,
									"src": "1882:349:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 657,
							"src": "491:1742:8",
							"usedErrors": []
						}
					],
					"src": "32:2201:8"
				},
				"id": 8
			}
		}
	}
}