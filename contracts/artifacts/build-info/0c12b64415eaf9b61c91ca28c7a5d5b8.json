{
	"id": "0c12b64415eaf9b61c91ca28c7a5d5b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ninterface NFT {\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\n}\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    address _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnedBy;\n    mapping (uint256 => uint256) public rewards;\n    uint256[] tokenStaked;\n\n    constructor (address nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(address nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnedBy[tokenId] = msg.sender;\n        tokenStaked.push(tokenId);\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnedBy[tokenId];\n        _stakedNFTCounter.decrement();\n        IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    receive() external payable {\n        uint256 sharePerEach = msg.value / _stakedNFTCounter.current();\n        uint256[] memory tokensStaked = NFT(_nftContract).walletOfOwner(address(this));\n        \n        for(uint256 i = 0; i < tokensStaked.length;){\n            rewards[tokenStaked[i]] += sharePerEach;\n            unchecked {++i;}\n        }\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH23 0xA0186D484877672EBD47FF5E80FD27FEA8BAE3E3FCE7E7 0x4E 0xC2 DUP9 ADDRESS JUMPDEST 0xE0 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": 96,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:9"
															},
															"nodeType": "YulIf",
															"src": "249:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:9",
														"type": ""
													}
												],
												"src": "7:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:9",
														"type": ""
													}
												],
												"src": "423:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:9"
															},
															"nodeType": "YulIf",
															"src": "652:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:9",
														"type": ""
													}
												],
												"src": "581:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:9",
														"type": ""
													}
												],
												"src": "925:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:9"
															},
															"nodeType": "YulIf",
															"src": "1206:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:9",
														"type": ""
													}
												],
												"src": "1070:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:9",
														"type": ""
													}
												],
												"src": "2019:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:9",
														"type": ""
													}
												],
												"src": "2140:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:9",
														"type": ""
													}
												],
												"src": "2364:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:9",
														"type": ""
													}
												],
												"src": "2499:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:9"
															},
															"nodeType": "YulIf",
															"src": "2717:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:9",
														"type": ""
													}
												],
												"src": "2580:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:9",
														"type": ""
													}
												],
												"src": "2893:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:9",
														"type": ""
													}
												],
												"src": "2995:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:9",
														"type": ""
													}
												],
												"src": "3150:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:9",
														"type": ""
													}
												],
												"src": "3282:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:9",
														"type": ""
													}
												],
												"src": "3365:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:9"
															},
															"nodeType": "YulIf",
															"src": "3681:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:9",
														"type": ""
													}
												],
												"src": "3525:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:9",
														"type": ""
													}
												],
												"src": "4490:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:9"
															},
															"nodeType": "YulIf",
															"src": "4651:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:9",
														"type": ""
													}
												],
												"src": "4598:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:9"
															},
															"nodeType": "YulIf",
															"src": "4779:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:9",
														"type": ""
													}
												],
												"src": "4726:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH23 0xA0186D484877672EBD47FF5E80FD27FEA8BAE3E3FCE7E7 0x4E 0xC2 DUP9 ADDRESS JUMPDEST 0xE0 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLDATASIZE PUSH1 0x8D 0xB0 0xEA JUMPDEST 0xC4 0xDD PUSH4 0x3C21F81B RETURNDATACOPY DUP13 0x2F 0xBE BASEFEE 0xBB EXP DUP9 LOG4 MSTORE 0x5F PUSH18 0xA36B1FE7B76464736F6C6343000807003300 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLDATASIZE PUSH1 0x8D 0xB0 0xEA JUMPDEST 0xC4 0xDD PUSH4 0x3C21F81B RETURNDATACOPY DUP13 0x2F 0xBE BASEFEE 0xBB EXP DUP9 LOG4 MSTORE 0x5F PUSH18 0xA36B1FE7B76464736F6C6343000807003300 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"NFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"NFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0x0468ec6fb81f7d8ac5f0c9ea316511674bbc710c5a373cb519510e4cc6f595e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d42d59d18143902b1a4089ba6cd4ba4b47d1703eaa07d1ac53a24b45519253\",\"dweb:/ipfs/QmbJHFi6y8K1C6YrVVb1JwX7qjUAQpwc1SdqozuDfR5bae\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":490:2113  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":997:1076  constructor (address nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1813  _status */\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":1057:1069  nftContract_ */\n  dup1\n    /* \"contracts/NFTStaking.sol\":1042:1054  _nftContract */\n  0x02\n  0x00\n    /* \"contracts/NFTStaking.sol\":1042:1069  _nftContract = nftContract_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":997:1076  constructor (address nftContract_) {... */\n  pop\n    /* \"contracts/NFTStaking.sol\":490:2113  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":243:362   */\ntag_23:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_26\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_29:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_31\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_32:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_25:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_21:\n    /* \"#utility.yul\":1147:1171   */\n  tag_38\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_29\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_39:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTStaking.sol\":490:2113  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":490:2113  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf301af42\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8488cc41\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTStaking.sol\":1799:1819  uint256 sharePerEach */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1834:1861  _stakedNFTCounter.current() */\n      tag_15\n        /* \"contracts/NFTStaking.sol\":1834:1851  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1834:1859  _stakedNFTCounter.current */\n      tag_16\n        /* \"contracts/NFTStaking.sol\":1834:1861  _stakedNFTCounter.current() */\n      jump\t// in\n    tag_15:\n        /* \"contracts/NFTStaking.sol\":1822:1831  msg.value */\n      callvalue\n        /* \"contracts/NFTStaking.sol\":1822:1861  msg.value / _stakedNFTCounter.current() */\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \"contracts/NFTStaking.sol\":1799:1861  uint256 sharePerEach = msg.value / _stakedNFTCounter.current() */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1871:1900  uint256[] memory tokensStaked */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1907:1919  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1903:1934  NFT(_nftContract).walletOfOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x438b6300\n        /* \"contracts/NFTStaking.sol\":1943:1947  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1903:1949  NFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/NFTStaking.sol\":1871:1949  uint256[] memory tokensStaked = NFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1972:1981  uint256 i */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1968:2105  for(uint256 i = 0; i < tokensStaked.length;){... */\n    tag_26:\n        /* \"contracts/NFTStaking.sol\":1991:2003  tokensStaked */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1991:2010  tokensStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":1987:1988  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1987:2010  i < tokensStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":1968:2105  for(uint256 i = 0; i < tokensStaked.length;){... */\n      iszero\n      tag_27\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2053:2065  sharePerEach */\n      dup3\n        /* \"contracts/NFTStaking.sol\":2026:2033  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2026:2049  rewards[tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2034:2045  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2046:2047  i */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2034:2048  tokenStaked[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_29\n      jumpi\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n    tag_29:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":2026:2049  rewards[tokenStaked[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":2026:2065  rewards[tokenStaked[i]] += sharePerEach */\n      dup3\n      dup3\n      sload\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":2090:2093  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1968:2105  for(uint256 i = 0; i < tokensStaked.length;){... */\n      jump(tag_26)\n    tag_27:\n      pop\n        /* \"contracts/NFTStaking.sol\":1789:2111  {... */\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":490:2113  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1452:1756  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/NFTStaking.sol\":866:914  mapping (uint256 => address) public tokenOwnedBy */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1196:1446  function stake(uint256 tokenId) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"contracts/NFTStaking.sol\":920:963  mapping (uint256 => uint256) public rewards */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1082:1190  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_39:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1452:1756  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_46:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1551:1561  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1526:1561  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1526:1538  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1526:1547  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1539:1546  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1526:1547  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1526:1561  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":1518:1588  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/NFTStaking.sol\":1605:1617  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1605:1626  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1618:1625  tokenId */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1605:1626  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1598:1626  delete tokenOwnedBy[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1636:1665  _stakedNFTCounter.decrement() */\n      tag_88\n        /* \"contracts/NFTStaking.sol\":1636:1653  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1636:1663  _stakedNFTCounter.decrement */\n      tag_89\n        /* \"contracts/NFTStaking.sol\":1636:1665  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/NFTStaking.sol\":1683:1695  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1675:1713  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1722:1726  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1729:1739  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1741:1748  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1675:1749  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1452:1756  function unstake(uint256 tokenId) nonReentrant external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_99\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":866:914  mapping (uint256 => address) public tokenOwnedBy */\n    tag_53:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1196:1446  function stake(uint256 tokenId) external {... */\n    tag_62:\n        /* \"contracts/NFTStaking.sol\":1255:1267  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1247:1285  IERC721(_nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1286:1296  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1306:1310  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1313:1320  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1247:1321  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_103:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1355:1365  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1331:1343  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1331:1352  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1344:1351  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1331:1352  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1331:1365  tokenOwnedBy[tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1375:1386  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":1392:1399  tokenId */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1375:1400  tokenStaked.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/NFTStaking.sol\":1410:1439  _stakedNFTCounter.increment() */\n      tag_108\n        /* \"contracts/NFTStaking.sol\":1410:1427  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1410:1437  _stakedNFTCounter.increment */\n      tag_109\n        /* \"contracts/NFTStaking.sol\":1410:1439  _stakedNFTCounter.increment() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/NFTStaking.sol\":1196:1446  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_111\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_116\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_100\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":920:963  mapping (uint256 => uint256) public rewards */\n    tag_71:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1082:1190  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/NFTStaking.sol\":1171:1183  nftContract_ */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1156:1168  _nftContract */\n      0x02\n      0x00\n        /* \"contracts/NFTStaking.sol\":1156:1183  _nftContract = nftContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1082:1190  function setNftContact(address nftContract_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_89:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_126\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      tag_127\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1427  owner */\n      tag_57\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":24:768   */\n    tag_135:\n        /* \"#utility.yul\":131:136   */\n      0x00\n        /* \"#utility.yul\":156:237   */\n      tag_137\n        /* \"#utility.yul\":172:236   */\n      tag_138\n        /* \"#utility.yul\":229:235   */\n      dup5\n        /* \"#utility.yul\":172:236   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":156:237   */\n      tag_140\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":147:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:262   */\n      dup1\n        /* \"#utility.yul\":286:292   */\n      dup4\n        /* \"#utility.yul\":279:284   */\n      dup3\n        /* \"#utility.yul\":272:293   */\n      mstore\n        /* \"#utility.yul\":320:324   */\n      0x20\n        /* \"#utility.yul\":313:318   */\n      dup3\n        /* \"#utility.yul\":309:325   */\n      add\n        /* \"#utility.yul\":302:325   */\n      swap1\n      pop\n        /* \"#utility.yul\":346:352   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":380:386   */\n      dup7\n        /* \"#utility.yul\":376:393   */\n      mul\n        /* \"#utility.yul\":371:374   */\n      dup3\n        /* \"#utility.yul\":367:394   */\n      add\n        /* \"#utility.yul\":364:400   */\n      gt\n        /* \"#utility.yul\":361:504   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_142\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":361:504   */\n    tag_141:\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":513:762   */\n    tag_144:\n        /* \"#utility.yul\":538:544   */\n      dup6\n        /* \"#utility.yul\":535:536   */\n      dup2\n        /* \"#utility.yul\":532:545   */\n      lt\n        /* \"#utility.yul\":513:762   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":606:609   */\n      dup2\n        /* \"#utility.yul\":635:683   */\n      tag_147\n        /* \"#utility.yul\":679:682   */\n      dup9\n        /* \"#utility.yul\":667:677   */\n      dup3\n        /* \"#utility.yul\":635:683   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":630:633   */\n      dup5\n        /* \"#utility.yul\":623:684   */\n      mstore\n        /* \"#utility.yul\":713:717   */\n      0x20\n        /* \"#utility.yul\":708:711   */\n      dup5\n        /* \"#utility.yul\":704:718   */\n      add\n        /* \"#utility.yul\":697:718   */\n      swap4\n      pop\n        /* \"#utility.yul\":747:751   */\n      0x20\n        /* \"#utility.yul\":742:745   */\n      dup4\n        /* \"#utility.yul\":738:752   */\n      add\n        /* \"#utility.yul\":731:752   */\n      swap3\n      pop\n        /* \"#utility.yul\":573:762   */\n      pop\n        /* \"#utility.yul\":560:561   */\n      0x01\n        /* \"#utility.yul\":557:558   */\n      dup2\n        /* \"#utility.yul\":553:562   */\n      add\n        /* \"#utility.yul\":548:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":513:762   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":517:531   */\n      pop\n        /* \"#utility.yul\":137:768   */\n      pop\n      pop\n        /* \"#utility.yul\":24:768   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":774:1184   */\n    tag_149:\n        /* \"#utility.yul\":851:856   */\n      0x00\n        /* \"#utility.yul\":876:941   */\n      tag_151\n        /* \"#utility.yul\":892:940   */\n      tag_152\n        /* \"#utility.yul\":933:939   */\n      dup5\n        /* \"#utility.yul\":892:940   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":876:941   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":867:941   */\n      swap1\n      pop\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":957:962   */\n      dup2\n        /* \"#utility.yul\":950:971   */\n      mstore\n        /* \"#utility.yul\":1002:1006   */\n      0x20\n        /* \"#utility.yul\":995:1000   */\n      dup2\n        /* \"#utility.yul\":991:1007   */\n      add\n        /* \"#utility.yul\":1040:1043   */\n      dup5\n        /* \"#utility.yul\":1031:1037   */\n      dup5\n        /* \"#utility.yul\":1026:1029   */\n      dup5\n        /* \"#utility.yul\":1022:1038   */\n      add\n        /* \"#utility.yul\":1019:1044   */\n      gt\n        /* \"#utility.yul\":1016:1128   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1047:1126   */\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1016:1128   */\n    tag_154:\n        /* \"#utility.yul\":1137:1178   */\n      tag_157\n        /* \"#utility.yul\":1171:1177   */\n      dup5\n        /* \"#utility.yul\":1166:1169   */\n      dup3\n        /* \"#utility.yul\":1161:1164   */\n      dup6\n        /* \"#utility.yul\":1137:1178   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":857:1184   */\n      pop\n        /* \"#utility.yul\":774:1184   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1190:1329   */\n    tag_159:\n        /* \"#utility.yul\":1236:1241   */\n      0x00\n        /* \"#utility.yul\":1274:1280   */\n      dup2\n        /* \"#utility.yul\":1261:1281   */\n      calldataload\n        /* \"#utility.yul\":1252:1281   */\n      swap1\n      pop\n        /* \"#utility.yul\":1290:1323   */\n      tag_161\n        /* \"#utility.yul\":1317:1322   */\n      dup2\n        /* \"#utility.yul\":1290:1323   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1190:1329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1737   */\n    tag_163:\n        /* \"#utility.yul\":1434:1439   */\n      0x00\n        /* \"#utility.yul\":1483:1486   */\n      dup3\n        /* \"#utility.yul\":1476:1480   */\n      0x1f\n        /* \"#utility.yul\":1468:1474   */\n      dup4\n        /* \"#utility.yul\":1464:1481   */\n      add\n        /* \"#utility.yul\":1460:1487   */\n      slt\n        /* \"#utility.yul\":1450:1572   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1491:1570   */\n      tag_166\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1450:1572   */\n    tag_165:\n        /* \"#utility.yul\":1601:1607   */\n      dup2\n        /* \"#utility.yul\":1595:1608   */\n      mload\n        /* \"#utility.yul\":1626:1731   */\n      tag_168\n        /* \"#utility.yul\":1727:1730   */\n      dup5\n        /* \"#utility.yul\":1719:1725   */\n      dup3\n        /* \"#utility.yul\":1712:1716   */\n      0x20\n        /* \"#utility.yul\":1704:1710   */\n      dup7\n        /* \"#utility.yul\":1700:1717   */\n      add\n        /* \"#utility.yul\":1626:1731   */\n      tag_135\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1617:1731   */\n      swap2\n      pop\n        /* \"#utility.yul\":1440:1737   */\n      pop\n        /* \"#utility.yul\":1352:1737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:2094   */\n    tag_169:\n        /* \"#utility.yul\":1811:1816   */\n      0x00\n        /* \"#utility.yul\":1860:1863   */\n      dup3\n        /* \"#utility.yul\":1853:1857   */\n      0x1f\n        /* \"#utility.yul\":1845:1851   */\n      dup4\n        /* \"#utility.yul\":1841:1858   */\n      add\n        /* \"#utility.yul\":1837:1864   */\n      slt\n        /* \"#utility.yul\":1827:1949   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_172\n      tag_167\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1827:1949   */\n    tag_171:\n        /* \"#utility.yul\":1985:1991   */\n      dup2\n        /* \"#utility.yul\":1972:1992   */\n      calldataload\n        /* \"#utility.yul\":2010:2088   */\n      tag_173\n        /* \"#utility.yul\":2084:2087   */\n      dup5\n        /* \"#utility.yul\":2076:2082   */\n      dup3\n        /* \"#utility.yul\":2069:2073   */\n      0x20\n        /* \"#utility.yul\":2061:2067   */\n      dup7\n        /* \"#utility.yul\":2057:2074   */\n      add\n        /* \"#utility.yul\":2010:2088   */\n      tag_149\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2001:2088   */\n      swap2\n      pop\n        /* \"#utility.yul\":1817:2094   */\n      pop\n        /* \"#utility.yul\":1756:2094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2239   */\n    tag_174:\n        /* \"#utility.yul\":2146:2151   */\n      0x00\n        /* \"#utility.yul\":2184:2190   */\n      dup2\n        /* \"#utility.yul\":2171:2191   */\n      calldataload\n        /* \"#utility.yul\":2162:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2200:2233   */\n      tag_176\n        /* \"#utility.yul\":2227:2232   */\n      dup2\n        /* \"#utility.yul\":2200:2233   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2100:2239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2245:2388   */\n    tag_148:\n        /* \"#utility.yul\":2302:2307   */\n      0x00\n        /* \"#utility.yul\":2333:2339   */\n      dup2\n        /* \"#utility.yul\":2327:2340   */\n      mload\n        /* \"#utility.yul\":2318:2340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2349:2382   */\n      tag_179\n        /* \"#utility.yul\":2376:2381   */\n      dup2\n        /* \"#utility.yul\":2349:2382   */\n      tag_177\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2245:2388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2723   */\n    tag_66:\n        /* \"#utility.yul\":2453:2459   */\n      0x00\n        /* \"#utility.yul\":2502:2504   */\n      0x20\n        /* \"#utility.yul\":2490:2499   */\n      dup3\n        /* \"#utility.yul\":2481:2488   */\n      dup5\n        /* \"#utility.yul\":2477:2500   */\n      sub\n        /* \"#utility.yul\":2473:2505   */\n      slt\n        /* \"#utility.yul\":2470:2589   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2508:2587   */\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2470:2589   */\n    tag_181:\n        /* \"#utility.yul\":2628:2629   */\n      0x00\n        /* \"#utility.yul\":2653:2706   */\n      tag_184\n        /* \"#utility.yul\":2698:2705   */\n      dup5\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2678:2687   */\n      dup6\n        /* \"#utility.yul\":2674:2696   */\n      add\n        /* \"#utility.yul\":2653:2706   */\n      tag_159\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2643:2706   */\n      swap2\n      pop\n        /* \"#utility.yul\":2599:2716   */\n      pop\n        /* \"#utility.yul\":2394:2723   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:3672   */\n    tag_38:\n        /* \"#utility.yul\":2824:2830   */\n      0x00\n        /* \"#utility.yul\":2832:2838   */\n      dup1\n        /* \"#utility.yul\":2840:2846   */\n      0x00\n        /* \"#utility.yul\":2848:2854   */\n      dup1\n        /* \"#utility.yul\":2897:2900   */\n      0x80\n        /* \"#utility.yul\":2885:2894   */\n      dup6\n        /* \"#utility.yul\":2876:2883   */\n      dup8\n        /* \"#utility.yul\":2872:2895   */\n      sub\n        /* \"#utility.yul\":2868:2901   */\n      slt\n        /* \"#utility.yul\":2865:2985   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":2904:2983   */\n      tag_187\n      tag_183\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2865:2985   */\n    tag_186:\n        /* \"#utility.yul\":3024:3025   */\n      0x00\n        /* \"#utility.yul\":3049:3102   */\n      tag_188\n        /* \"#utility.yul\":3094:3101   */\n      dup8\n        /* \"#utility.yul\":3085:3091   */\n      dup3\n        /* \"#utility.yul\":3074:3083   */\n      dup9\n        /* \"#utility.yul\":3070:3092   */\n      add\n        /* \"#utility.yul\":3049:3102   */\n      tag_159\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3039:3102   */\n      swap5\n      pop\n        /* \"#utility.yul\":2995:3112   */\n      pop\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"#utility.yul\":3177:3230   */\n      tag_189\n        /* \"#utility.yul\":3222:3229   */\n      dup8\n        /* \"#utility.yul\":3213:3219   */\n      dup3\n        /* \"#utility.yul\":3202:3211   */\n      dup9\n        /* \"#utility.yul\":3198:3220   */\n      add\n        /* \"#utility.yul\":3177:3230   */\n      tag_159\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3167:3230   */\n      swap4\n      pop\n        /* \"#utility.yul\":3122:3240   */\n      pop\n        /* \"#utility.yul\":3279:3281   */\n      0x40\n        /* \"#utility.yul\":3305:3358   */\n      tag_190\n        /* \"#utility.yul\":3350:3357   */\n      dup8\n        /* \"#utility.yul\":3341:3347   */\n      dup3\n        /* \"#utility.yul\":3330:3339   */\n      dup9\n        /* \"#utility.yul\":3326:3348   */\n      add\n        /* \"#utility.yul\":3305:3358   */\n      tag_174\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3295:3358   */\n      swap3\n      pop\n        /* \"#utility.yul\":3250:3368   */\n      pop\n        /* \"#utility.yul\":3435:3437   */\n      0x60\n        /* \"#utility.yul\":3424:3433   */\n      dup6\n        /* \"#utility.yul\":3420:3438   */\n      add\n        /* \"#utility.yul\":3407:3439   */\n      calldataload\n        /* \"#utility.yul\":3466:3484   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3458:3464   */\n      dup2\n        /* \"#utility.yul\":3455:3485   */\n      gt\n        /* \"#utility.yul\":3452:3569   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":3488:3567   */\n      tag_192\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3452:3569   */\n    tag_191:\n        /* \"#utility.yul\":3593:3655   */\n      tag_194\n        /* \"#utility.yul\":3647:3654   */\n      dup8\n        /* \"#utility.yul\":3638:3644   */\n      dup3\n        /* \"#utility.yul\":3627:3636   */\n      dup9\n        /* \"#utility.yul\":3623:3645   */\n      add\n        /* \"#utility.yul\":3593:3655   */\n      tag_169\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3583:3655   */\n      swap2\n      pop\n        /* \"#utility.yul\":3378:3665   */\n      pop\n        /* \"#utility.yul\":2729:3672   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:4232   */\n    tag_25:\n        /* \"#utility.yul\":3773:3779   */\n      0x00\n        /* \"#utility.yul\":3822:3824   */\n      0x20\n        /* \"#utility.yul\":3810:3819   */\n      dup3\n        /* \"#utility.yul\":3801:3808   */\n      dup5\n        /* \"#utility.yul\":3797:3820   */\n      sub\n        /* \"#utility.yul\":3793:3825   */\n      slt\n        /* \"#utility.yul\":3790:3909   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":3828:3907   */\n      tag_197\n      tag_183\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3790:3909   */\n    tag_196:\n        /* \"#utility.yul\":3969:3970   */\n      0x00\n        /* \"#utility.yul\":3958:3967   */\n      dup3\n        /* \"#utility.yul\":3954:3971   */\n      add\n        /* \"#utility.yul\":3948:3972   */\n      mload\n        /* \"#utility.yul\":3999:4017   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3991:3997   */\n      dup2\n        /* \"#utility.yul\":3988:4018   */\n      gt\n        /* \"#utility.yul\":3985:4102   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":4021:4100   */\n      tag_199\n      tag_193\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3985:4102   */\n    tag_198:\n        /* \"#utility.yul\":4126:4215   */\n      tag_200\n        /* \"#utility.yul\":4207:4214   */\n      dup5\n        /* \"#utility.yul\":4198:4204   */\n      dup3\n        /* \"#utility.yul\":4187:4196   */\n      dup6\n        /* \"#utility.yul\":4183:4205   */\n      add\n        /* \"#utility.yul\":4126:4215   */\n      tag_163\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":4116:4215   */\n      swap2\n      pop\n        /* \"#utility.yul\":3919:4225   */\n      pop\n        /* \"#utility.yul\":3678:4232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4238:4567   */\n    tag_45:\n        /* \"#utility.yul\":4297:4303   */\n      0x00\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"#utility.yul\":4334:4343   */\n      dup3\n        /* \"#utility.yul\":4325:4332   */\n      dup5\n        /* \"#utility.yul\":4321:4344   */\n      sub\n        /* \"#utility.yul\":4317:4349   */\n      slt\n        /* \"#utility.yul\":4314:4433   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":4352:4431   */\n      tag_203\n      tag_183\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4314:4433   */\n    tag_202:\n        /* \"#utility.yul\":4472:4473   */\n      0x00\n        /* \"#utility.yul\":4497:4550   */\n      tag_204\n        /* \"#utility.yul\":4542:4549   */\n      dup5\n        /* \"#utility.yul\":4533:4539   */\n      dup3\n        /* \"#utility.yul\":4522:4531   */\n      dup6\n        /* \"#utility.yul\":4518:4540   */\n      add\n        /* \"#utility.yul\":4497:4550   */\n      tag_174\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4487:4550   */\n      swap2\n      pop\n        /* \"#utility.yul\":4443:4560   */\n      pop\n        /* \"#utility.yul\":4238:4567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4573:4691   */\n    tag_205:\n        /* \"#utility.yul\":4660:4684   */\n      tag_207\n        /* \"#utility.yul\":4678:4683   */\n      dup2\n        /* \"#utility.yul\":4660:4684   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4655:4658   */\n      dup3\n        /* \"#utility.yul\":4648:4685   */\n      mstore\n        /* \"#utility.yul\":4573:4691   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:4812   */\n    tag_209:\n        /* \"#utility.yul\":4782:4805   */\n      tag_211\n        /* \"#utility.yul\":4799:4804   */\n      dup2\n        /* \"#utility.yul\":4782:4805   */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4777:4780   */\n      dup3\n        /* \"#utility.yul\":4770:4806   */\n      mstore\n        /* \"#utility.yul\":4697:4812   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4818:5184   */\n    tag_213:\n        /* \"#utility.yul\":4960:4963   */\n      0x00\n        /* \"#utility.yul\":4981:5048   */\n      tag_215\n        /* \"#utility.yul\":5045:5047   */\n      0x1b\n        /* \"#utility.yul\":5040:5043   */\n      dup4\n        /* \"#utility.yul\":4981:5048   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4974:5048   */\n      swap2\n      pop\n        /* \"#utility.yul\":5057:5150   */\n      tag_217\n        /* \"#utility.yul\":5146:5149   */\n      dup3\n        /* \"#utility.yul\":5057:5150   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5175:5177   */\n      0x20\n        /* \"#utility.yul\":5170:5173   */\n      dup3\n        /* \"#utility.yul\":5166:5178   */\n      add\n        /* \"#utility.yul\":5159:5178   */\n      swap1\n      pop\n        /* \"#utility.yul\":4818:5184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5556   */\n    tag_219:\n        /* \"#utility.yul\":5332:5335   */\n      0x00\n        /* \"#utility.yul\":5353:5420   */\n      tag_221\n        /* \"#utility.yul\":5417:5419   */\n      0x26\n        /* \"#utility.yul\":5412:5415   */\n      dup4\n        /* \"#utility.yul\":5353:5420   */\n      tag_216\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5346:5420   */\n      swap2\n      pop\n        /* \"#utility.yul\":5429:5522   */\n      tag_222\n        /* \"#utility.yul\":5518:5521   */\n      dup3\n        /* \"#utility.yul\":5429:5522   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5547:5549   */\n      0x40\n        /* \"#utility.yul\":5542:5545   */\n      dup3\n        /* \"#utility.yul\":5538:5550   */\n      add\n        /* \"#utility.yul\":5531:5550   */\n      swap1\n      pop\n        /* \"#utility.yul\":5190:5556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5562:5928   */\n    tag_224:\n        /* \"#utility.yul\":5704:5707   */\n      0x00\n        /* \"#utility.yul\":5725:5792   */\n      tag_226\n        /* \"#utility.yul\":5789:5791   */\n      0x20\n        /* \"#utility.yul\":5784:5787   */\n      dup4\n        /* \"#utility.yul\":5725:5792   */\n      tag_216\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5718:5792   */\n      swap2\n      pop\n        /* \"#utility.yul\":5801:5894   */\n      tag_227\n        /* \"#utility.yul\":5890:5893   */\n      dup3\n        /* \"#utility.yul\":5801:5894   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5919:5921   */\n      0x20\n        /* \"#utility.yul\":5914:5917   */\n      dup3\n        /* \"#utility.yul\":5910:5922   */\n      add\n        /* \"#utility.yul\":5903:5922   */\n      swap1\n      pop\n        /* \"#utility.yul\":5562:5928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5934:6300   */\n    tag_229:\n        /* \"#utility.yul\":6076:6079   */\n      0x00\n        /* \"#utility.yul\":6097:6164   */\n      tag_231\n        /* \"#utility.yul\":6161:6163   */\n      0x16\n        /* \"#utility.yul\":6156:6159   */\n      dup4\n        /* \"#utility.yul\":6097:6164   */\n      tag_216\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6090:6164   */\n      swap2\n      pop\n        /* \"#utility.yul\":6173:6266   */\n      tag_232\n        /* \"#utility.yul\":6262:6265   */\n      dup3\n        /* \"#utility.yul\":6173:6266   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6291:6293   */\n      0x20\n        /* \"#utility.yul\":6286:6289   */\n      dup3\n        /* \"#utility.yul\":6282:6294   */\n      add\n        /* \"#utility.yul\":6275:6294   */\n      swap1\n      pop\n        /* \"#utility.yul\":5934:6300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6306:6672   */\n    tag_234:\n        /* \"#utility.yul\":6448:6451   */\n      0x00\n        /* \"#utility.yul\":6469:6536   */\n      tag_236\n        /* \"#utility.yul\":6533:6535   */\n      0x1f\n        /* \"#utility.yul\":6528:6531   */\n      dup4\n        /* \"#utility.yul\":6469:6536   */\n      tag_216\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6462:6536   */\n      swap2\n      pop\n        /* \"#utility.yul\":6545:6638   */\n      tag_237\n        /* \"#utility.yul\":6634:6637   */\n      dup3\n        /* \"#utility.yul\":6545:6638   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6663:6665   */\n      0x20\n        /* \"#utility.yul\":6658:6661   */\n      dup3\n        /* \"#utility.yul\":6654:6666   */\n      add\n        /* \"#utility.yul\":6647:6666   */\n      swap1\n      pop\n        /* \"#utility.yul\":6306:6672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6678:6796   */\n    tag_239:\n        /* \"#utility.yul\":6765:6789   */\n      tag_241\n        /* \"#utility.yul\":6783:6788   */\n      dup2\n        /* \"#utility.yul\":6765:6789   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6760:6763   */\n      dup3\n        /* \"#utility.yul\":6753:6790   */\n      mstore\n        /* \"#utility.yul\":6678:6796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6802:7024   */\n    tag_20:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7017   */\n      tag_244\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7003:7012   */\n      dup4\n        /* \"#utility.yul\":6999:7016   */\n      add\n        /* \"#utility.yul\":6990:6996   */\n      dup5\n        /* \"#utility.yul\":6946:7017   */\n      tag_205\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6802:7024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7030:7472   */\n    tag_91:\n        /* \"#utility.yul\":7179:7183   */\n      0x00\n        /* \"#utility.yul\":7217:7219   */\n      0x60\n        /* \"#utility.yul\":7206:7215   */\n      dup3\n        /* \"#utility.yul\":7202:7220   */\n      add\n        /* \"#utility.yul\":7194:7220   */\n      swap1\n      pop\n        /* \"#utility.yul\":7230:7301   */\n      tag_246\n        /* \"#utility.yul\":7298:7299   */\n      0x00\n        /* \"#utility.yul\":7287:7296   */\n      dup4\n        /* \"#utility.yul\":7283:7300   */\n      add\n        /* \"#utility.yul\":7274:7280   */\n      dup7\n        /* \"#utility.yul\":7230:7301   */\n      tag_205\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7311:7383   */\n      tag_247\n        /* \"#utility.yul\":7379:7381   */\n      0x20\n        /* \"#utility.yul\":7368:7377   */\n      dup4\n        /* \"#utility.yul\":7364:7382   */\n      add\n        /* \"#utility.yul\":7355:7361   */\n      dup6\n        /* \"#utility.yul\":7311:7383   */\n      tag_205\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7393:7465   */\n      tag_248\n        /* \"#utility.yul\":7461:7463   */\n      0x40\n        /* \"#utility.yul\":7450:7459   */\n      dup4\n        /* \"#utility.yul\":7446:7464   */\n      add\n        /* \"#utility.yul\":7437:7443   */\n      dup5\n        /* \"#utility.yul\":7393:7465   */\n      tag_239\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7030:7472   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7478:7696   */\n    tag_41:\n        /* \"#utility.yul\":7569:7573   */\n      0x00\n        /* \"#utility.yul\":7607:7609   */\n      0x20\n        /* \"#utility.yul\":7596:7605   */\n      dup3\n        /* \"#utility.yul\":7592:7610   */\n      add\n        /* \"#utility.yul\":7584:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7620:7689   */\n      tag_250\n        /* \"#utility.yul\":7686:7687   */\n      0x00\n        /* \"#utility.yul\":7675:7684   */\n      dup4\n        /* \"#utility.yul\":7671:7688   */\n      add\n        /* \"#utility.yul\":7662:7668   */\n      dup5\n        /* \"#utility.yul\":7620:7689   */\n      tag_209\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7478:7696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7702:8121   */\n    tag_123:\n        /* \"#utility.yul\":7868:7872   */\n      0x00\n        /* \"#utility.yul\":7906:7908   */\n      0x20\n        /* \"#utility.yul\":7895:7904   */\n      dup3\n        /* \"#utility.yul\":7891:7909   */\n      add\n        /* \"#utility.yul\":7883:7909   */\n      swap1\n      pop\n        /* \"#utility.yul\":7955:7964   */\n      dup2\n        /* \"#utility.yul\":7949:7953   */\n      dup2\n        /* \"#utility.yul\":7945:7965   */\n      sub\n        /* \"#utility.yul\":7941:7942   */\n      0x00\n        /* \"#utility.yul\":7930:7939   */\n      dup4\n        /* \"#utility.yul\":7926:7943   */\n      add\n        /* \"#utility.yul\":7919:7966   */\n      mstore\n        /* \"#utility.yul\":7983:8114   */\n      tag_252\n        /* \"#utility.yul\":8109:8113   */\n      dup2\n        /* \"#utility.yul\":7983:8114   */\n      tag_213\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7975:8114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7702:8121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8127:8546   */\n    tag_115:\n        /* \"#utility.yul\":8293:8297   */\n      0x00\n        /* \"#utility.yul\":8331:8333   */\n      0x20\n        /* \"#utility.yul\":8320:8329   */\n      dup3\n        /* \"#utility.yul\":8316:8334   */\n      add\n        /* \"#utility.yul\":8308:8334   */\n      swap1\n      pop\n        /* \"#utility.yul\":8380:8389   */\n      dup2\n        /* \"#utility.yul\":8374:8378   */\n      dup2\n        /* \"#utility.yul\":8370:8390   */\n      sub\n        /* \"#utility.yul\":8366:8367   */\n      0x00\n        /* \"#utility.yul\":8355:8364   */\n      dup4\n        /* \"#utility.yul\":8351:8368   */\n      add\n        /* \"#utility.yul\":8344:8391   */\n      mstore\n        /* \"#utility.yul\":8408:8539   */\n      tag_254\n        /* \"#utility.yul\":8534:8538   */\n      dup2\n        /* \"#utility.yul\":8408:8539   */\n      tag_219\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8400:8539   */\n      swap1\n      pop\n        /* \"#utility.yul\":8127:8546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8552:8971   */\n    tag_130:\n        /* \"#utility.yul\":8718:8722   */\n      0x00\n        /* \"#utility.yul\":8756:8758   */\n      0x20\n        /* \"#utility.yul\":8745:8754   */\n      dup3\n        /* \"#utility.yul\":8741:8759   */\n      add\n        /* \"#utility.yul\":8733:8759   */\n      swap1\n      pop\n        /* \"#utility.yul\":8805:8814   */\n      dup2\n        /* \"#utility.yul\":8799:8803   */\n      dup2\n        /* \"#utility.yul\":8795:8815   */\n      sub\n        /* \"#utility.yul\":8791:8792   */\n      0x00\n        /* \"#utility.yul\":8780:8789   */\n      dup4\n        /* \"#utility.yul\":8776:8793   */\n      add\n        /* \"#utility.yul\":8769:8816   */\n      mstore\n        /* \"#utility.yul\":8833:8964   */\n      tag_256\n        /* \"#utility.yul\":8959:8963   */\n      dup2\n        /* \"#utility.yul\":8833:8964   */\n      tag_224\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8825:8964   */\n      swap1\n      pop\n        /* \"#utility.yul\":8552:8971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8977:9396   */\n    tag_87:\n        /* \"#utility.yul\":9143:9147   */\n      0x00\n        /* \"#utility.yul\":9181:9183   */\n      0x20\n        /* \"#utility.yul\":9170:9179   */\n      dup3\n        /* \"#utility.yul\":9166:9184   */\n      add\n        /* \"#utility.yul\":9158:9184   */\n      swap1\n      pop\n        /* \"#utility.yul\":9230:9239   */\n      dup2\n        /* \"#utility.yul\":9224:9228   */\n      dup2\n        /* \"#utility.yul\":9220:9240   */\n      sub\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9205:9214   */\n      dup4\n        /* \"#utility.yul\":9201:9218   */\n      add\n        /* \"#utility.yul\":9194:9241   */\n      mstore\n        /* \"#utility.yul\":9258:9389   */\n      tag_258\n        /* \"#utility.yul\":9384:9388   */\n      dup2\n        /* \"#utility.yul\":9258:9389   */\n      tag_229\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":9250:9389   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:9396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9402:9821   */\n    tag_83:\n        /* \"#utility.yul\":9568:9572   */\n      0x00\n        /* \"#utility.yul\":9606:9608   */\n      0x20\n        /* \"#utility.yul\":9595:9604   */\n      dup3\n        /* \"#utility.yul\":9591:9609   */\n      add\n        /* \"#utility.yul\":9583:9609   */\n      swap1\n      pop\n        /* \"#utility.yul\":9655:9664   */\n      dup2\n        /* \"#utility.yul\":9649:9653   */\n      dup2\n        /* \"#utility.yul\":9645:9665   */\n      sub\n        /* \"#utility.yul\":9641:9642   */\n      0x00\n        /* \"#utility.yul\":9630:9639   */\n      dup4\n        /* \"#utility.yul\":9626:9643   */\n      add\n        /* \"#utility.yul\":9619:9666   */\n      mstore\n        /* \"#utility.yul\":9683:9814   */\n      tag_260\n        /* \"#utility.yul\":9809:9813   */\n      dup2\n        /* \"#utility.yul\":9683:9814   */\n      tag_234\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9675:9814   */\n      swap1\n      pop\n        /* \"#utility.yul\":9402:9821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9827:10049   */\n    tag_73:\n        /* \"#utility.yul\":9920:9924   */\n      0x00\n        /* \"#utility.yul\":9958:9960   */\n      0x20\n        /* \"#utility.yul\":9947:9956   */\n      dup3\n        /* \"#utility.yul\":9943:9961   */\n      add\n        /* \"#utility.yul\":9935:9961   */\n      swap1\n      pop\n        /* \"#utility.yul\":9971:10042   */\n      tag_262\n        /* \"#utility.yul\":10039:10040   */\n      0x00\n        /* \"#utility.yul\":10028:10037   */\n      dup4\n        /* \"#utility.yul\":10024:10041   */\n      add\n        /* \"#utility.yul\":10015:10021   */\n      dup5\n        /* \"#utility.yul\":9971:10042   */\n      tag_239\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9827:10049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10055:10184   */\n    tag_140:\n        /* \"#utility.yul\":10089:10095   */\n      0x00\n        /* \"#utility.yul\":10116:10136   */\n      tag_264\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10106:10136   */\n      swap1\n      pop\n        /* \"#utility.yul\":10145:10178   */\n      tag_266\n        /* \"#utility.yul\":10173:10177   */\n      dup3\n        /* \"#utility.yul\":10165:10171   */\n      dup3\n        /* \"#utility.yul\":10145:10178   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10055:10184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10190:10265   */\n    tag_265:\n        /* \"#utility.yul\":10223:10229   */\n      0x00\n        /* \"#utility.yul\":10256:10258   */\n      0x40\n        /* \"#utility.yul\":10250:10259   */\n      mload\n        /* \"#utility.yul\":10240:10259   */\n      swap1\n      pop\n        /* \"#utility.yul\":10190:10265   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10271:10582   */\n    tag_139:\n        /* \"#utility.yul\":10348:10352   */\n      0x00\n        /* \"#utility.yul\":10438:10456   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10430:10436   */\n      dup3\n        /* \"#utility.yul\":10427:10457   */\n      gt\n        /* \"#utility.yul\":10424:10480   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":10460:10478   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10424:10480   */\n    tag_270:\n        /* \"#utility.yul\":10510:10514   */\n      0x20\n        /* \"#utility.yul\":10502:10508   */\n      dup3\n        /* \"#utility.yul\":10498:10515   */\n      mul\n        /* \"#utility.yul\":10490:10515   */\n      swap1\n      pop\n        /* \"#utility.yul\":10570:10574   */\n      0x20\n        /* \"#utility.yul\":10564:10568   */\n      dup2\n        /* \"#utility.yul\":10560:10575   */\n      add\n        /* \"#utility.yul\":10552:10575   */\n      swap1\n      pop\n        /* \"#utility.yul\":10271:10582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10588:10895   */\n    tag_153:\n        /* \"#utility.yul\":10649:10653   */\n      0x00\n        /* \"#utility.yul\":10739:10757   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10731:10737   */\n      dup3\n        /* \"#utility.yul\":10728:10758   */\n      gt\n        /* \"#utility.yul\":10725:10781   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10761:10779   */\n      tag_275\n      tag_272\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10725:10781   */\n    tag_274:\n        /* \"#utility.yul\":10799:10828   */\n      tag_276\n        /* \"#utility.yul\":10821:10827   */\n      dup3\n        /* \"#utility.yul\":10799:10828   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10791:10828   */\n      swap1\n      pop\n        /* \"#utility.yul\":10883:10887   */\n      0x20\n        /* \"#utility.yul\":10877:10881   */\n      dup2\n        /* \"#utility.yul\":10873:10888   */\n      add\n        /* \"#utility.yul\":10865:10888   */\n      swap1\n      pop\n        /* \"#utility.yul\":10588:10895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10901:11070   */\n    tag_216:\n        /* \"#utility.yul\":10985:10996   */\n      0x00\n        /* \"#utility.yul\":11019:11025   */\n      dup3\n        /* \"#utility.yul\":11014:11017   */\n      dup3\n        /* \"#utility.yul\":11007:11026   */\n      mstore\n        /* \"#utility.yul\":11059:11063   */\n      0x20\n        /* \"#utility.yul\":11054:11057   */\n      dup3\n        /* \"#utility.yul\":11050:11064   */\n      add\n        /* \"#utility.yul\":11035:11064   */\n      swap1\n      pop\n        /* \"#utility.yul\":10901:11070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11076:11381   */\n    tag_34:\n        /* \"#utility.yul\":11116:11119   */\n      0x00\n        /* \"#utility.yul\":11135:11155   */\n      tag_280\n        /* \"#utility.yul\":11153:11154   */\n      dup3\n        /* \"#utility.yul\":11135:11155   */\n      tag_242\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11130:11155   */\n      swap2\n      pop\n        /* \"#utility.yul\":11169:11189   */\n      tag_281\n        /* \"#utility.yul\":11187:11188   */\n      dup4\n        /* \"#utility.yul\":11169:11189   */\n      tag_242\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11164:11189   */\n      swap3\n      pop\n        /* \"#utility.yul\":11323:11324   */\n      dup3\n        /* \"#utility.yul\":11255:11321   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11251:11325   */\n      sub\n        /* \"#utility.yul\":11248:11249   */\n      dup3\n        /* \"#utility.yul\":11245:11326   */\n      gt\n        /* \"#utility.yul\":11242:11349   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":11329:11347   */\n      tag_283\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":11242:11349   */\n    tag_282:\n        /* \"#utility.yul\":11373:11374   */\n      dup3\n        /* \"#utility.yul\":11370:11371   */\n      dup3\n        /* \"#utility.yul\":11366:11375   */\n      add\n        /* \"#utility.yul\":11359:11375   */\n      swap1\n      pop\n        /* \"#utility.yul\":11076:11381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:11572   */\n    tag_18:\n        /* \"#utility.yul\":11427:11428   */\n      0x00\n        /* \"#utility.yul\":11444:11464   */\n      tag_286\n        /* \"#utility.yul\":11462:11463   */\n      dup3\n        /* \"#utility.yul\":11444:11464   */\n      tag_242\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11439:11464   */\n      swap2\n      pop\n        /* \"#utility.yul\":11478:11498   */\n      tag_287\n        /* \"#utility.yul\":11496:11497   */\n      dup4\n        /* \"#utility.yul\":11478:11498   */\n      tag_242\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11473:11498   */\n      swap3\n      pop\n        /* \"#utility.yul\":11517:11518   */\n      dup3\n        /* \"#utility.yul\":11507:11542   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11522:11540   */\n      tag_289\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11507:11542   */\n    tag_288:\n        /* \"#utility.yul\":11564:11565   */\n      dup3\n        /* \"#utility.yul\":11561:11562   */\n      dup3\n        /* \"#utility.yul\":11557:11566   */\n      div\n        /* \"#utility.yul\":11552:11566   */\n      swap1\n      pop\n        /* \"#utility.yul\":11387:11572   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11578:11674   */\n    tag_208:\n        /* \"#utility.yul\":11615:11622   */\n      0x00\n        /* \"#utility.yul\":11644:11668   */\n      tag_292\n        /* \"#utility.yul\":11662:11667   */\n      dup3\n        /* \"#utility.yul\":11644:11668   */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11633:11668   */\n      swap1\n      pop\n        /* \"#utility.yul\":11578:11674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11680:11829   */\n    tag_212:\n        /* \"#utility.yul\":11716:11723   */\n      0x00\n        /* \"#utility.yul\":11756:11822   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11749:11754   */\n      dup3\n        /* \"#utility.yul\":11745:11823   */\n      and\n        /* \"#utility.yul\":11734:11823   */\n      swap1\n      pop\n        /* \"#utility.yul\":11680:11829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11835:11961   */\n    tag_293:\n        /* \"#utility.yul\":11872:11879   */\n      0x00\n        /* \"#utility.yul\":11912:11954   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11905:11910   */\n      dup3\n        /* \"#utility.yul\":11901:11955   */\n      and\n        /* \"#utility.yul\":11890:11955   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11967:12044   */\n    tag_242:\n        /* \"#utility.yul\":12004:12011   */\n      0x00\n        /* \"#utility.yul\":12033:12038   */\n      dup2\n        /* \"#utility.yul\":12022:12038   */\n      swap1\n      pop\n        /* \"#utility.yul\":11967:12044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12050:12204   */\n    tag_158:\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12129:12132   */\n      dup2\n        /* \"#utility.yul\":12124:12127   */\n      dup4\n        /* \"#utility.yul\":12111:12141   */\n      calldatacopy\n        /* \"#utility.yul\":12196:12197   */\n      0x00\n        /* \"#utility.yul\":12187:12193   */\n      dup4\n        /* \"#utility.yul\":12182:12185   */\n      dup4\n        /* \"#utility.yul\":12178:12194   */\n      add\n        /* \"#utility.yul\":12171:12198   */\n      mstore\n        /* \"#utility.yul\":12050:12204   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12210:12491   */\n    tag_267:\n        /* \"#utility.yul\":12293:12320   */\n      tag_299\n        /* \"#utility.yul\":12315:12319   */\n      dup3\n        /* \"#utility.yul\":12293:12320   */\n      tag_277\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12285:12291   */\n      dup2\n        /* \"#utility.yul\":12281:12321   */\n      add\n        /* \"#utility.yul\":12423:12429   */\n      dup2\n        /* \"#utility.yul\":12411:12421   */\n      dup2\n        /* \"#utility.yul\":12408:12430   */\n      lt\n        /* \"#utility.yul\":12387:12405   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12375:12385   */\n      dup3\n        /* \"#utility.yul\":12372:12406   */\n      gt\n        /* \"#utility.yul\":12369:12431   */\n      or\n        /* \"#utility.yul\":12366:12454   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":12434:12452   */\n      tag_301\n      tag_272\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":12366:12454   */\n    tag_300:\n        /* \"#utility.yul\":12474:12484   */\n      dup1\n        /* \"#utility.yul\":12470:12472   */\n      0x40\n        /* \"#utility.yul\":12463:12485   */\n      mstore\n        /* \"#utility.yul\":12253:12491   */\n      pop\n        /* \"#utility.yul\":12210:12491   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12497:12677   */\n    tag_284:\n        /* \"#utility.yul\":12545:12622   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12542:12543   */\n      0x00\n        /* \"#utility.yul\":12535:12623   */\n      mstore\n        /* \"#utility.yul\":12642:12646   */\n      0x11\n        /* \"#utility.yul\":12639:12640   */\n      0x04\n        /* \"#utility.yul\":12632:12647   */\n      mstore\n        /* \"#utility.yul\":12666:12670   */\n      0x24\n        /* \"#utility.yul\":12663:12664   */\n      0x00\n        /* \"#utility.yul\":12656:12671   */\n      revert\n        /* \"#utility.yul\":12683:12863   */\n    tag_290:\n        /* \"#utility.yul\":12731:12808   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12728:12729   */\n      0x00\n        /* \"#utility.yul\":12721:12809   */\n      mstore\n        /* \"#utility.yul\":12828:12832   */\n      0x12\n        /* \"#utility.yul\":12825:12826   */\n      0x04\n        /* \"#utility.yul\":12818:12833   */\n      mstore\n        /* \"#utility.yul\":12852:12856   */\n      0x24\n        /* \"#utility.yul\":12849:12850   */\n      0x00\n        /* \"#utility.yul\":12842:12857   */\n      revert\n        /* \"#utility.yul\":12869:13049   */\n    tag_31:\n        /* \"#utility.yul\":12917:12994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12914:12915   */\n      0x00\n        /* \"#utility.yul\":12907:12995   */\n      mstore\n        /* \"#utility.yul\":13014:13018   */\n      0x32\n        /* \"#utility.yul\":13011:13012   */\n      0x04\n        /* \"#utility.yul\":13004:13019   */\n      mstore\n        /* \"#utility.yul\":13038:13042   */\n      0x24\n        /* \"#utility.yul\":13035:13036   */\n      0x00\n        /* \"#utility.yul\":13028:13043   */\n      revert\n        /* \"#utility.yul\":13055:13235   */\n    tag_272:\n        /* \"#utility.yul\":13103:13180   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13100:13101   */\n      0x00\n        /* \"#utility.yul\":13093:13181   */\n      mstore\n        /* \"#utility.yul\":13200:13204   */\n      0x41\n        /* \"#utility.yul\":13197:13198   */\n      0x04\n        /* \"#utility.yul\":13190:13205   */\n      mstore\n        /* \"#utility.yul\":13224:13228   */\n      0x24\n        /* \"#utility.yul\":13221:13222   */\n      0x00\n        /* \"#utility.yul\":13214:13229   */\n      revert\n        /* \"#utility.yul\":13241:13358   */\n    tag_167:\n        /* \"#utility.yul\":13350:13351   */\n      0x00\n        /* \"#utility.yul\":13347:13348   */\n      dup1\n        /* \"#utility.yul\":13340:13352   */\n      revert\n        /* \"#utility.yul\":13364:13481   */\n    tag_143:\n        /* \"#utility.yul\":13473:13474   */\n      0x00\n        /* \"#utility.yul\":13470:13471   */\n      dup1\n        /* \"#utility.yul\":13463:13475   */\n      revert\n        /* \"#utility.yul\":13487:13604   */\n    tag_156:\n        /* \"#utility.yul\":13596:13597   */\n      0x00\n        /* \"#utility.yul\":13593:13594   */\n      dup1\n        /* \"#utility.yul\":13586:13598   */\n      revert\n        /* \"#utility.yul\":13610:13727   */\n    tag_193:\n        /* \"#utility.yul\":13719:13720   */\n      0x00\n        /* \"#utility.yul\":13716:13717   */\n      dup1\n        /* \"#utility.yul\":13709:13721   */\n      revert\n        /* \"#utility.yul\":13733:13850   */\n    tag_183:\n        /* \"#utility.yul\":13842:13843   */\n      0x00\n        /* \"#utility.yul\":13839:13840   */\n      dup1\n        /* \"#utility.yul\":13832:13844   */\n      revert\n        /* \"#utility.yul\":13856:13958   */\n    tag_277:\n        /* \"#utility.yul\":13897:13903   */\n      0x00\n        /* \"#utility.yul\":13948:13950   */\n      0x1f\n        /* \"#utility.yul\":13944:13951   */\n      not\n        /* \"#utility.yul\":13939:13941   */\n      0x1f\n        /* \"#utility.yul\":13932:13937   */\n      dup4\n        /* \"#utility.yul\":13928:13942   */\n      add\n        /* \"#utility.yul\":13924:13952   */\n      and\n        /* \"#utility.yul\":13914:13952   */\n      swap1\n      pop\n        /* \"#utility.yul\":13856:13958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13964:14141   */\n    tag_218:\n        /* \"#utility.yul\":14104:14133   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":14100:14101   */\n      0x00\n        /* \"#utility.yul\":14092:14098   */\n      dup3\n        /* \"#utility.yul\":14088:14102   */\n      add\n        /* \"#utility.yul\":14081:14134   */\n      mstore\n        /* \"#utility.yul\":13964:14141   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14147:14372   */\n    tag_223:\n        /* \"#utility.yul\":14287:14321   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14283:14284   */\n      0x00\n        /* \"#utility.yul\":14275:14281   */\n      dup3\n        /* \"#utility.yul\":14271:14285   */\n      add\n        /* \"#utility.yul\":14264:14322   */\n      mstore\n        /* \"#utility.yul\":14356:14364   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14351:14353   */\n      0x20\n        /* \"#utility.yul\":14343:14349   */\n      dup3\n        /* \"#utility.yul\":14339:14354   */\n      add\n        /* \"#utility.yul\":14332:14365   */\n      mstore\n        /* \"#utility.yul\":14147:14372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14378:14560   */\n    tag_228:\n        /* \"#utility.yul\":14518:14552   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14514:14515   */\n      0x00\n        /* \"#utility.yul\":14506:14512   */\n      dup3\n        /* \"#utility.yul\":14502:14516   */\n      add\n        /* \"#utility.yul\":14495:14553   */\n      mstore\n        /* \"#utility.yul\":14378:14560   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14566:14738   */\n    tag_233:\n        /* \"#utility.yul\":14706:14730   */\n      0x596f7520617265206e6f7420746865206f776e65722e00000000000000000000\n        /* \"#utility.yul\":14702:14703   */\n      0x00\n        /* \"#utility.yul\":14694:14700   */\n      dup3\n        /* \"#utility.yul\":14690:14704   */\n      add\n        /* \"#utility.yul\":14683:14731   */\n      mstore\n        /* \"#utility.yul\":14566:14738   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14744:14925   */\n    tag_238:\n        /* \"#utility.yul\":14884:14917   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14880:14881   */\n      0x00\n        /* \"#utility.yul\":14872:14878   */\n      dup3\n        /* \"#utility.yul\":14868:14882   */\n      add\n        /* \"#utility.yul\":14861:14918   */\n      mstore\n        /* \"#utility.yul\":14744:14925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14931:15053   */\n    tag_162:\n        /* \"#utility.yul\":15004:15028   */\n      tag_318\n        /* \"#utility.yul\":15022:15027   */\n      dup2\n        /* \"#utility.yul\":15004:15028   */\n      tag_208\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":14997:15002   */\n      dup2\n        /* \"#utility.yul\":14994:15029   */\n      eq\n        /* \"#utility.yul\":14984:15047   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":15043:15044   */\n      0x00\n        /* \"#utility.yul\":15040:15041   */\n      dup1\n        /* \"#utility.yul\":15033:15045   */\n      revert\n        /* \"#utility.yul\":14984:15047   */\n    tag_319:\n        /* \"#utility.yul\":14931:15053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15059:15181   */\n    tag_177:\n        /* \"#utility.yul\":15132:15156   */\n      tag_321\n        /* \"#utility.yul\":15150:15155   */\n      dup2\n        /* \"#utility.yul\":15132:15156   */\n      tag_242\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15125:15130   */\n      dup2\n        /* \"#utility.yul\":15122:15157   */\n      eq\n        /* \"#utility.yul\":15112:15175   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":15171:15172   */\n      0x00\n        /* \"#utility.yul\":15168:15169   */\n      dup1\n        /* \"#utility.yul\":15161:15173   */\n      revert\n        /* \"#utility.yul\":15112:15175   */\n    tag_322:\n        /* \"#utility.yul\":15059:15181   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220358c1e1ad9bffa6ca993009eba38c17419c73a3934e9f133d0c757cb864d202e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 166,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 174,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:9",
														"type": ""
													}
												],
												"src": "7:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:9"
															},
															"nodeType": "YulIf",
															"src": "243:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:9",
														"type": ""
													}
												],
												"src": "156:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:9",
														"type": ""
													}
												],
												"src": "513:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:9",
														"type": ""
													}
												],
												"src": "594:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:9",
														"type": ""
													}
												],
												"src": "696:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:9"
															},
															"nodeType": "YulIf",
															"src": "1127:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:9",
														"type": ""
													}
												],
												"src": "1074:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200140f3803806200140f833981810160405281019062000037919062000189565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018381620001f4565b92915050565b600060208284031215620001a257620001a1620001ef565b5b6000620001b28482850162000172565b91505092915050565b6000620001c882620001cf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001ff81620001bb565b81146200020b57600080fd5b50565b6111f1806200021e6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461027f578063a694fc3a146102aa578063f2fde38b146102d3578063f301af42146102fc578063fd71c65014610339576101c0565b8063150b7a02146101c55780632e17de7814610202578063715018a61461022b5780638488cc4114610242576101c0565b366101c057600061009b6003610362565b346100a69190610edb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101059190610cca565b60006040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061015a9190610b78565b905060005b81518110156101bb5782600560006006848154811061018157610180611012565b5b9060005260206000200154815260200190815260200160002060008282546101a99190610e85565b9250508190555080600101905061015f565b505050005b600080fd5b3480156101d157600080fd5b506101ec60048036038101906101e79190610af5565b610370565b6040516101f99190610d1c565b60405180910390f35b34801561020e57600080fd5b5061022960048036038101906102249190610bc1565b610384565b005b34801561023757600080fd5b5061024061054e565b005b34801561024e57600080fd5b5061026960048036038101906102649190610bc1565b610562565b6040516102769190610cca565b60405180910390f35b34801561028b57600080fd5b50610294610595565b6040516102a19190610cca565b60405180910390f35b3480156102b657600080fd5b506102d160048036038101906102cc9190610bc1565b6105be565b005b3480156102df57600080fd5b506102fa60048036038101906102f59190610ac8565b6106d7565b005b34801561030857600080fd5b50610323600480360381019061031e9190610bc1565b61075b565b6040516103309190610dd7565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b9190610ac8565b610773565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b600260015414156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610db7565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d97565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556104b360036107bf565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033846040518463ffffffff1660e01b815260040161051293929190610ce5565b600060405180830381600087803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b505050506001808190555050565b61055661081b565b6105606000610899565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161061d93929190610ce5565b600060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060068190806001815401808255809150506001900390600052602060002001600090919091909150556106d4600361095d565b50565b6106df61081b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074690610d57565b60405180910390fd5b61075881610899565b50565b60056020528060005260406000206000915090505481565b61077b61081b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000816000015490506000811161080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610d37565b60405180910390fd5b6001810382600001819055505050565b610823610973565b73ffffffffffffffffffffffffffffffffffffffff16610841610595565b73ffffffffffffffffffffffffffffffffffffffff1614610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e90610d77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600061098e61098984610e17565b610df2565b905080838252602082019050828560208602820111156109b1576109b0611075565b5b60005b858110156109e157816109c78882610ab3565b8452602084019350602083019250506001810190506109b4565b5050509392505050565b60006109fe6109f984610e43565b610df2565b905082815260208101848484011115610a1a57610a1961107a565b5b610a25848285610f74565b509392505050565b600081359050610a3c8161118d565b92915050565b600082601f830112610a5757610a56611070565b5b8151610a6784826020860161097b565b91505092915050565b600082601f830112610a8557610a84611070565b5b8135610a958482602086016109eb565b91505092915050565b600081359050610aad816111a4565b92915050565b600081519050610ac2816111a4565b92915050565b600060208284031215610ade57610add611084565b5b6000610aec84828501610a2d565b91505092915050565b60008060008060808587031215610b0f57610b0e611084565b5b6000610b1d87828801610a2d565b9450506020610b2e87828801610a2d565b9350506040610b3f87828801610a9e565b925050606085013567ffffffffffffffff811115610b6057610b5f61107f565b5b610b6c87828801610a70565b91505092959194509250565b600060208284031215610b8e57610b8d611084565b5b600082015167ffffffffffffffff811115610bac57610bab61107f565b5b610bb884828501610a42565b91505092915050565b600060208284031215610bd757610bd6611084565b5b6000610be584828501610a9e565b91505092915050565b610bf781610f0c565b82525050565b610c0681610f1e565b82525050565b6000610c19601b83610e74565b9150610c248261109a565b602082019050919050565b6000610c3c602683610e74565b9150610c47826110c3565b604082019050919050565b6000610c5f602083610e74565b9150610c6a82611112565b602082019050919050565b6000610c82601683610e74565b9150610c8d8261113b565b602082019050919050565b6000610ca5601f83610e74565b9150610cb082611164565b602082019050919050565b610cc481610f6a565b82525050565b6000602082019050610cdf6000830184610bee565b92915050565b6000606082019050610cfa6000830186610bee565b610d076020830185610bee565b610d146040830184610cbb565b949350505050565b6000602082019050610d316000830184610bfd565b92915050565b60006020820190508181036000830152610d5081610c0c565b9050919050565b60006020820190508181036000830152610d7081610c2f565b9050919050565b60006020820190508181036000830152610d9081610c52565b9050919050565b60006020820190508181036000830152610db081610c75565b9050919050565b60006020820190508181036000830152610dd081610c98565b9050919050565b6000602082019050610dec6000830184610cbb565b92915050565b6000610dfc610e0d565b9050610e088282610f83565b919050565b6000604051905090565b600067ffffffffffffffff821115610e3257610e31611041565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e5e57610e5d611041565b5b610e6782611089565b9050602081019050919050565b600082825260208201905092915050565b6000610e9082610f6a565b9150610e9b83610f6a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed057610ecf610fb4565b5b828201905092915050565b6000610ee682610f6a565b9150610ef183610f6a565b925082610f0157610f00610fe3565b5b828204905092915050565b6000610f1782610f4a565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610f8c82611089565b810181811067ffffffffffffffff82111715610fab57610faa611041565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61119681610f0c565b81146111a157600080fd5b50565b6111ad81610f6a565b81146111b857600080fd5b5056fea2646970667358221220358c1e1ad9bffa6ca993009eba38c17419c73a3934e9f133d0c757cb864d202e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x140F CODESIZE SUB DUP1 PUSH3 0x140F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x189 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x20E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x183 DUP2 PUSH3 0x1F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1A2 JUMPI PUSH3 0x1A1 PUSH3 0x1EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1B2 DUP5 DUP3 DUP6 ADD PUSH3 0x172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C8 DUP3 PUSH3 0x1CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP2 PUSH3 0x1BB JUMP JUMPDEST DUP2 EQ PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11F1 DUP1 PUSH3 0x21E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x339 JUMPI PUSH2 0x1C0 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x242 JUMPI PUSH2 0x1C0 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C0 JUMPI PUSH1 0x0 PUSH2 0x9B PUSH1 0x3 PUSH2 0x362 JUMP JUMPDEST CALLVALUE PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xEDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1BB JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x1012 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x15F JUMP JUMPDEST POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x54E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x4B3 PUSH1 0x3 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x556 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x560 PUSH1 0x0 PUSH2 0x899 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x6D4 PUSH1 0x3 PUSH2 0x95D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x81B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x77B PUSH2 0x81B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x823 PUSH2 0x973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0x595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88E SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98E PUSH2 0x989 DUP5 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI DUP2 PUSH2 0x9C7 DUP9 DUP3 PUSH2 0xAB3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9B4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE PUSH2 0x9F9 DUP5 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0xA25 DUP5 DUP3 DUP6 PUSH2 0xF74 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0x118D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xA67 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA95 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAC2 DUP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH2 0xADD PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1D DUP8 DUP3 DUP9 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xB2E DUP8 DUP3 DUP9 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB3F DUP8 DUP3 DUP9 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0xB6C DUP8 DUP3 DUP9 ADD PUSH2 0xA70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH2 0xB8D PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAC JUMPI PUSH2 0xBAB PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0xBB8 DUP5 DUP3 DUP6 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP5 DUP3 DUP6 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xF0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xF1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC19 PUSH1 0x1B DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC24 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH1 0x26 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5F PUSH1 0x20 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6A DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC82 PUSH1 0x16 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8D DUP3 PUSH2 0x113B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA5 PUSH1 0x1F DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB0 DUP3 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC4 DUP2 PUSH2 0xF6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCFA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD50 DUP2 PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD70 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD90 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB0 DUP2 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFC PUSH2 0xE0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE08 DUP3 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x1041 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x1041 JUMP JUMPDEST JUMPDEST PUSH2 0xE67 DUP3 PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP4 PUSH2 0xF6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP2 POP PUSH2 0xEF1 DUP4 PUSH2 0xF6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF01 JUMPI PUSH2 0xF00 PUSH2 0xFE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF17 DUP3 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF8C DUP3 PUSH2 0x1089 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAA PUSH2 0x1041 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1196 DUP2 PUSH2 0xF0C JUMP JUMPDEST DUP2 EQ PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11AD DUP2 PUSH2 0xF6A JUMP JUMPDEST DUP2 EQ PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP13 0x1E BYTE 0xD9 0xBF STATICCALL PUSH13 0xA993009EBA38C17419C73A3934 0xE9 CALL CALLER 0xD0 0xC7 JUMPI 0xCB DUP7 0x4D KECCAK256 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:1623:8:-:0;;;997:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;1057:12:8;1042;;:27;;;;;;;;;;;;;;;;;;997:79;490:1623;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:143:9:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;490:1623:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_635": {
									"entryPoint": null,
									"id": 635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2075,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 2419,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2201,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_353": {
									"entryPoint": 866,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_395": {
									"entryPoint": 1983,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_367": {
									"entryPoint": 2397,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": 880,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1429,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1358,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_482": {
									"entryPoint": 1883,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_507": {
									"entryPoint": 1907,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_544": {
									"entryPoint": 1470,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnedBy_478": {
									"entryPoint": 1378,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1751,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_585": {
									"entryPoint": 900,
									"id": 585,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15184:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "137:631:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "147:90:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "172:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:64:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "156:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:81:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "147:5:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:16:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "257:5:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "250:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "286:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "272:21:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "313:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:16:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "302:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "335:17:9",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "346:6:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "339:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "401:103:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "371:3:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "388:4:9",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "376:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "376:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "367:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "367:27:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "364:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "364:36:9"
															},
															"nodeType": "YulIf",
															"src": "361:143:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "573:189:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "588:21:9",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "606:3:9"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "592:10:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "630:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "667:10:9"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "635:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "635:48:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "623:61:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "623:61:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "697:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "704:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "704:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "697:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "731:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "742:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "738:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "731:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "535:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "532:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "546:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "548:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "557:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "560:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "553:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "553:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "548:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "517:14:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "519:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "528:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "523:1:9",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "513:249:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "107:6:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "123:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "131:5:9",
														"type": ""
													}
												],
												"src": "24:744:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "857:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "867:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "933:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "892:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "892:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "876:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "867:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "957:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "964:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "980:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "995:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1002:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "984:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1045:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "1047:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1047:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1047:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1026:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1022:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1022:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1040:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1019:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:25:9"
															},
															"nodeType": "YulIf",
															"src": "1016:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1161:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1166:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1171:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1137:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "830:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "835:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "843:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "851:5:9",
														"type": ""
													}
												],
												"src": "774:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1242:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1252:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1274:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1261:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1252:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1317:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1290:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1290:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1220:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1228:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1236:5:9",
														"type": ""
													}
												],
												"src": "1190:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:297:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1489:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1491:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1491:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1491:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1468:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1476:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1464:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1464:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1483:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1460:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1453:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:35:9"
															},
															"nodeType": "YulIf",
															"src": "1450:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1581:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1601:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1595:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1595:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1585:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1617:114:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1704:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1712:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1700:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1700:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1719:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1727:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1626:73:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:105:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1617:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1418:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1426:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1434:5:9",
														"type": ""
													}
												],
												"src": "1352:385:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1817:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1845:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1853:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1841:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1841:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1860:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:35:9"
															},
															"nodeType": "YulIf",
															"src": "1827:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1958:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1985:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1972:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1962:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2001:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2061:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2069:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2057:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2057:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2076:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2084:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2010:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2001:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1795:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1803:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1811:5:9",
														"type": ""
													}
												],
												"src": "1756:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2152:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2162:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2184:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2171:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2162:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2227:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2200:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2200:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2146:5:9",
														"type": ""
													}
												],
												"src": "2100:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2308:80:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2318:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2333:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2327:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2318:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2376:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2349:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2349:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2349:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2286:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2294:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:9",
														"type": ""
													}
												],
												"src": "2245:143:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2506:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2508:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2508:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2508:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2481:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2490:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2502:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:32:9"
															},
															"nodeType": "YulIf",
															"src": "2470:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2599:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2614:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2628:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2618:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2643:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2678:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2689:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2674:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2698:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2653:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2643:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2430:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2441:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2453:6:9",
														"type": ""
													}
												],
												"src": "2394:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2855:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2902:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2904:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2876:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2885:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2872:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2872:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2868:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2868:33:9"
															},
															"nodeType": "YulIf",
															"src": "2865:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2995:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3010:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3024:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3014:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3039:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3074:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3085:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3070:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3094:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3049:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3049:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3039:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3122:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3167:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3202:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3213:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3198:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3198:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3222:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3177:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3177:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3167:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3250:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3265:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3279:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3269:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3295:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3330:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3341:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3326:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3350:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3378:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3393:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3424:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3435:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3420:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3420:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3407:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3397:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3486:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3488:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3488:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3488:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3458:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3466:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3455:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3455:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3452:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3583:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3627:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3638:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3623:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3623:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3647:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3593:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3593:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3583:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2840:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2848:6:9",
														"type": ""
													}
												],
												"src": "2729:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3780:452:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3826:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3828:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3828:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3828:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3801:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3810:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3797:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3797:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3822:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:32:9"
															},
															"nodeType": "YulIf",
															"src": "3790:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3919:306:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3934:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3958:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3969:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3954:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3954:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3948:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3948:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3938:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4019:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4021:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4021:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4021:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3991:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3999:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3988:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3985:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4116:99:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4187:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4198:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4183:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4183:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4207:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4126:56:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:89:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4116:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3750:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3761:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3773:6:9",
														"type": ""
													}
												],
												"src": "3678:554:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4304:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4350:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4352:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4352:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4352:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4325:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4334:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4321:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4317:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:32:9"
															},
															"nodeType": "YulIf",
															"src": "4314:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4443:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4458:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4472:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4462:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4487:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4522:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4533:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4518:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4518:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4542:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4497:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4487:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4274:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4285:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4297:6:9",
														"type": ""
													}
												],
												"src": "4238:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4638:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4655:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4678:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4660:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4660:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4648:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4626:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4633:3:9",
														"type": ""
													}
												],
												"src": "4573:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4760:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4799:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "4782:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4782:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4770:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4748:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4755:3:9",
														"type": ""
													}
												],
												"src": "4697:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4964:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4974:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5040:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5045:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4981:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4981:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5146:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nodeType": "YulIdentifier",
																	"src": "5057:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5057:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5159:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5170:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5175:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5159:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4952:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4960:3:9",
														"type": ""
													}
												],
												"src": "4818:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5336:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5346:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5412:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5353:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5353:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5346:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5518:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "5429:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5429:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5542:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5547:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5538:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5538:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5531:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5324:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5332:3:9",
														"type": ""
													}
												],
												"src": "5190:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5708:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5718:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5725:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5725:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5718:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5890:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5801:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5801:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5801:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5903:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5914:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5919:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5903:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5696:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5704:3:9",
														"type": ""
													}
												],
												"src": "5562:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6080:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6090:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6156:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6161:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6097:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6262:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																	"nodeType": "YulIdentifier",
																	"src": "6173:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6173:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6173:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6275:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6286:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6282:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6282:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6275:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6068:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6076:3:9",
														"type": ""
													}
												],
												"src": "5934:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6452:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6462:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6528:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6533:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6469:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6462:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6634:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "6545:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6545:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6647:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6658:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6663:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6654:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6654:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6647:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6440:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6448:3:9",
														"type": ""
													}
												],
												"src": "6306:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6743:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6760:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6783:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6765:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6753:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6753:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6731:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6738:3:9",
														"type": ""
													}
												],
												"src": "6678:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6900:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6910:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6918:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7003:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7014:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6999:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6946:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6946:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6872:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6884:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6895:4:9",
														"type": ""
													}
												],
												"src": "6802:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7184:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7194:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7206:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7202:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7194:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7230:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7355:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7368:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7379:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7364:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7311:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7437:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7450:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7461:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7446:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7393:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7393:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7393:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7140:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7152:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7160:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7168:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7179:4:9",
														"type": ""
													}
												],
												"src": "7030:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7574:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7584:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7596:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7607:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7584:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7662:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7675:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7686:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7671:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7671:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7620:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7620:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7546:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7558:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7569:4:9",
														"type": ""
													}
												],
												"src": "7478:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7873:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7883:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7895:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7906:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7883:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7949:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7955:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7945:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7945:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7975:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8109:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7983:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7983:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7975:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7853:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7868:4:9",
														"type": ""
													}
												],
												"src": "7702:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8298:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8308:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8320:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8331:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8316:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8308:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8355:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8366:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8351:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8351:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8374:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8380:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8370:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8370:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8400:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8534:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8408:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8400:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8278:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8293:4:9",
														"type": ""
													}
												],
												"src": "8127:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8723:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8733:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8745:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8756:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8741:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8733:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8780:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8791:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8776:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8776:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8799:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8795:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8795:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8769:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8825:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8959:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8833:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8833:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8703:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8718:4:9",
														"type": ""
													}
												],
												"src": "8552:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9205:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9216:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9201:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9201:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9224:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9220:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9220:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9250:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9384:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9258:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9258:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9250:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9143:4:9",
														"type": ""
													}
												],
												"src": "8977:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9573:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9583:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9595:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9606:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9591:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9583:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9641:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9626:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9649:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9645:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9645:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9619:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9675:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9809:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9683:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9683:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9675:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9553:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9568:4:9",
														"type": ""
													}
												],
												"src": "9402:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9925:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9935:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9943:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9943:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9935:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10015:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10028:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10039:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10024:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9971:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9971:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9897:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9909:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9920:4:9",
														"type": ""
													}
												],
												"src": "9827:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10096:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10106:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "10116:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10106:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10165:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10173:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "10145:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10145:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10080:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10089:6:9",
														"type": ""
													}
												],
												"src": "10055:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10230:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10240:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10256:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10250:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10250:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10240:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10223:6:9",
														"type": ""
													}
												],
												"src": "10190:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10353:229:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10458:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10460:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10460:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10460:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10430:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10438:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10427:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10427:30:9"
															},
															"nodeType": "YulIf",
															"src": "10424:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10490:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10502:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10510:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10498:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10498:17:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10490:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10552:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10564:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10570:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10552:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10337:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10348:4:9",
														"type": ""
													}
												],
												"src": "10271:311:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10654:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10759:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10761:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10761:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10761:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10731:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10728:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:30:9"
															},
															"nodeType": "YulIf",
															"src": "10725:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10791:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10821:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "10799:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10791:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10865:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "10877:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10883:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10873:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10873:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10865:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10638:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10649:4:9",
														"type": ""
													}
												],
												"src": "10588:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10997:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11014:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11019:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11007:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11007:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11007:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11035:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11054:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11059:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11050:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11035:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10969:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10974:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10985:11:9",
														"type": ""
													}
												],
												"src": "10901:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11120:261:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11130:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11153:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11135:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11135:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11130:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11164:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11187:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11169:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11169:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11164:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11327:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11329:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11329:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11329:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11248:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11255:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11323:1:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11251:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11251:74:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11245:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11245:81:9"
															},
															"nodeType": "YulIf",
															"src": "11242:107:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11359:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11370:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11373:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11366:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11359:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11107:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11110:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11116:3:9",
														"type": ""
													}
												],
												"src": "11076:305:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11429:143:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11439:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11462:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11439:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11473:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11496:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11478:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11473:1:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11520:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11522:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11522:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11522:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11517:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11510:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11510:9:9"
															},
															"nodeType": "YulIf",
															"src": "11507:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11552:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11561:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11564:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11552:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11418:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11421:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11427:1:9",
														"type": ""
													}
												],
												"src": "11387:185:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11623:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11633:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11662:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11644:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11644:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11633:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11605:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11615:7:9",
														"type": ""
													}
												],
												"src": "11578:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11724:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11734:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11749:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11756:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11745:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11745:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11734:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11706:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11716:7:9",
														"type": ""
													}
												],
												"src": "11680:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11880:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11890:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11905:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11912:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11901:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11890:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11862:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11872:7:9",
														"type": ""
													}
												],
												"src": "11835:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12012:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12022:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12033:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12022:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11994:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12004:7:9",
														"type": ""
													}
												],
												"src": "11967:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12101:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12129:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12134:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "12111:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12111:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12182:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12187:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12178:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12196:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12171:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12083:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12088:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12093:6:9",
														"type": ""
													}
												],
												"src": "12050:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12253:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12263:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "12285:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "12315:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "12293:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12293:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12281:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12281:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "12267:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12432:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "12434:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12434:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12434:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12375:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12387:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12372:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12372:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "12411:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12423:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12408:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12408:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "12369:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12369:62:9"
															},
															"nodeType": "YulIf",
															"src": "12366:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12470:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "12474:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12463:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12463:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12239:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "12247:4:9",
														"type": ""
													}
												],
												"src": "12210:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12525:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12542:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12545:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12535:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12535:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12535:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12639:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12642:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12632:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12632:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12632:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12663:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12666:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12656:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12656:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12497:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12731:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12721:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12721:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12721:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12825:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12828:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12818:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12818:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12818:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12852:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12842:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12842:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12842:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12683:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12897:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12914:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12917:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12907:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12907:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12907:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13011:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13014:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13004:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13004:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13035:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13038:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13028:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13028:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13028:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12869:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13083:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13100:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13103:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13093:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13093:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13197:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13200:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13190:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13190:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13190:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13221:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13224:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13214:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13214:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13214:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13055:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13330:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13347:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13350:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13340:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13340:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13340:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "13241:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13453:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13470:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13473:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13463:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13463:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "13364:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13576:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13593:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13596:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13586:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "13487:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13699:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13716:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13719:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13709:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13709:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13709:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13610:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13822:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13839:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13842:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13832:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13832:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13733:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13904:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13914:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13932:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13939:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13928:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13928:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13948:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13944:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13944:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13924:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13914:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13887:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13897:6:9",
														"type": ""
													}
												],
												"src": "13856:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14070:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14092:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14100:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14088:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14088:14:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14104:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14081:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14081:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14081:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14062:6:9",
														"type": ""
													}
												],
												"src": "13964:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14253:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14275:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14283:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14271:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14271:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14287:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14264:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14264:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14264:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14343:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14351:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14339:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14339:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14356:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14332:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14332:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14332:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14245:6:9",
														"type": ""
													}
												],
												"src": "14147:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14484:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14506:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14514:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14502:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14502:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14518:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14495:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14495:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14495:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14476:6:9",
														"type": ""
													}
												],
												"src": "14378:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14672:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14694:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14702:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14690:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14690:14:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14706:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14683:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14683:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14683:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14664:6:9",
														"type": ""
													}
												],
												"src": "14566:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14850:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14872:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14880:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14884:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14842:6:9",
														"type": ""
													}
												],
												"src": "14744:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14974:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15031:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15040:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15043:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15033:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15033:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15033:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14997:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15022:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15004:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15004:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14994:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14994:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14987:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14987:43:9"
															},
															"nodeType": "YulIf",
															"src": "14984:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14967:5:9",
														"type": ""
													}
												],
												"src": "14931:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15102:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15159:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15168:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15171:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15161:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15161:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15161:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15125:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15150:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15132:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15132:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15122:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15122:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15115:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15115:43:9"
															},
															"nodeType": "YulIf",
															"src": "15112:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15095:5:9",
														"type": ""
													}
												],
												"src": "15059:122:9"
											}
										]
									},
									"contents": "{\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner.\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b1461027f578063a694fc3a146102aa578063f2fde38b146102d3578063f301af42146102fc578063fd71c65014610339576101c0565b8063150b7a02146101c55780632e17de7814610202578063715018a61461022b5780638488cc4114610242576101c0565b366101c057600061009b6003610362565b346100a69190610edb565b90506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663438b6300306040518263ffffffff1660e01b81526004016101059190610cca565b60006040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061015a9190610b78565b905060005b81518110156101bb5782600560006006848154811061018157610180611012565b5b9060005260206000200154815260200190815260200160002060008282546101a99190610e85565b9250508190555080600101905061015f565b505050005b600080fd5b3480156101d157600080fd5b506101ec60048036038101906101e79190610af5565b610370565b6040516101f99190610d1c565b60405180910390f35b34801561020e57600080fd5b5061022960048036038101906102249190610bc1565b610384565b005b34801561023757600080fd5b5061024061054e565b005b34801561024e57600080fd5b5061026960048036038101906102649190610bc1565b610562565b6040516102769190610cca565b60405180910390f35b34801561028b57600080fd5b50610294610595565b6040516102a19190610cca565b60405180910390f35b3480156102b657600080fd5b506102d160048036038101906102cc9190610bc1565b6105be565b005b3480156102df57600080fd5b506102fa60048036038101906102f59190610ac8565b6106d7565b005b34801561030857600080fd5b50610323600480360381019061031e9190610bc1565b61075b565b6040516103309190610dd7565b60405180910390f35b34801561034557600080fd5b50610360600480360381019061035b9190610ac8565b610773565b005b600081600001549050919050565b600063150b7a0260e01b9050949350505050565b600260015414156103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610db7565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046a90610d97565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556104b360036107bf565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033846040518463ffffffff1660e01b815260040161051293929190610ce5565b600060405180830381600087803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b505050506001808190555050565b61055661081b565b6105606000610899565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b815260040161061d93929190610ce5565b600060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060068190806001815401808255809150506001900390600052602060002001600090919091909150556106d4600361095d565b50565b6106df61081b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074690610d57565b60405180910390fd5b61075881610899565b50565b60056020528060005260406000206000915090505481565b61077b61081b565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000816000015490506000811161080b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080290610d37565b60405180910390fd5b6001810382600001819055505050565b610823610973565b73ffffffffffffffffffffffffffffffffffffffff16610841610595565b73ffffffffffffffffffffffffffffffffffffffff1614610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e90610d77565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600061098e61098984610e17565b610df2565b905080838252602082019050828560208602820111156109b1576109b0611075565b5b60005b858110156109e157816109c78882610ab3565b8452602084019350602083019250506001810190506109b4565b5050509392505050565b60006109fe6109f984610e43565b610df2565b905082815260208101848484011115610a1a57610a1961107a565b5b610a25848285610f74565b509392505050565b600081359050610a3c8161118d565b92915050565b600082601f830112610a5757610a56611070565b5b8151610a6784826020860161097b565b91505092915050565b600082601f830112610a8557610a84611070565b5b8135610a958482602086016109eb565b91505092915050565b600081359050610aad816111a4565b92915050565b600081519050610ac2816111a4565b92915050565b600060208284031215610ade57610add611084565b5b6000610aec84828501610a2d565b91505092915050565b60008060008060808587031215610b0f57610b0e611084565b5b6000610b1d87828801610a2d565b9450506020610b2e87828801610a2d565b9350506040610b3f87828801610a9e565b925050606085013567ffffffffffffffff811115610b6057610b5f61107f565b5b610b6c87828801610a70565b91505092959194509250565b600060208284031215610b8e57610b8d611084565b5b600082015167ffffffffffffffff811115610bac57610bab61107f565b5b610bb884828501610a42565b91505092915050565b600060208284031215610bd757610bd6611084565b5b6000610be584828501610a9e565b91505092915050565b610bf781610f0c565b82525050565b610c0681610f1e565b82525050565b6000610c19601b83610e74565b9150610c248261109a565b602082019050919050565b6000610c3c602683610e74565b9150610c47826110c3565b604082019050919050565b6000610c5f602083610e74565b9150610c6a82611112565b602082019050919050565b6000610c82601683610e74565b9150610c8d8261113b565b602082019050919050565b6000610ca5601f83610e74565b9150610cb082611164565b602082019050919050565b610cc481610f6a565b82525050565b6000602082019050610cdf6000830184610bee565b92915050565b6000606082019050610cfa6000830186610bee565b610d076020830185610bee565b610d146040830184610cbb565b949350505050565b6000602082019050610d316000830184610bfd565b92915050565b60006020820190508181036000830152610d5081610c0c565b9050919050565b60006020820190508181036000830152610d7081610c2f565b9050919050565b60006020820190508181036000830152610d9081610c52565b9050919050565b60006020820190508181036000830152610db081610c75565b9050919050565b60006020820190508181036000830152610dd081610c98565b9050919050565b6000602082019050610dec6000830184610cbb565b92915050565b6000610dfc610e0d565b9050610e088282610f83565b919050565b6000604051905090565b600067ffffffffffffffff821115610e3257610e31611041565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e5e57610e5d611041565b5b610e6782611089565b9050602081019050919050565b600082825260208201905092915050565b6000610e9082610f6a565b9150610e9b83610f6a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed057610ecf610fb4565b5b828201905092915050565b6000610ee682610f6a565b9150610ef183610f6a565b925082610f0157610f00610fe3565b5b828204905092915050565b6000610f1782610f4a565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610f8c82611089565b810181811067ffffffffffffffff82111715610fab57610faa611041565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61119681610f0c565b81146111a157600080fd5b50565b6111ad81610f6a565b81146111b857600080fd5b5056fea2646970667358221220358c1e1ad9bffa6ca993009eba38c17419c73a3934e9f133d0c757cb864d202e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x339 JUMPI PUSH2 0x1C0 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x242 JUMPI PUSH2 0x1C0 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C0 JUMPI PUSH1 0x0 PUSH2 0x9B PUSH1 0x3 PUSH2 0x362 JUMP JUMPDEST CALLVALUE PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xEDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x438B6300 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x131 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xB78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1BB JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x1012 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x15F JUMP JUMPDEST POP POP POP STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0xAF5 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x54E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x264 SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x595 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0xBC1 JUMP JUMPDEST PUSH2 0x75B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x360 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35B SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C1 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46A SWAP1 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x4B3 PUSH1 0x3 PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x556 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x560 PUSH1 0x0 PUSH2 0x899 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0x6D4 PUSH1 0x3 PUSH2 0x95D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6DF PUSH2 0x81B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x746 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP2 PUSH2 0x899 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x77B PUSH2 0x81B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x823 PUSH2 0x973 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x841 PUSH2 0x595 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88E SWAP1 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x98E PUSH2 0x989 DUP5 PUSH2 0xE17 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9E1 JUMPI DUP2 PUSH2 0x9C7 DUP9 DUP3 PUSH2 0xAB3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x9B4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FE PUSH2 0x9F9 DUP5 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA19 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0xA25 DUP5 DUP3 DUP6 PUSH2 0xF74 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA3C DUP2 PUSH2 0x118D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0xA67 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x97B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x1070 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA95 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x9EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAAD DUP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAC2 DUP2 PUSH2 0x11A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xADE JUMPI PUSH2 0xADD PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAEC DUP5 DUP3 DUP6 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB0F JUMPI PUSH2 0xB0E PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1D DUP8 DUP3 DUP9 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xB2E DUP8 DUP3 DUP9 ADD PUSH2 0xA2D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xB3F DUP8 DUP3 DUP9 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0xB6C DUP8 DUP3 DUP9 ADD PUSH2 0xA70 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8E JUMPI PUSH2 0xB8D PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAC JUMPI PUSH2 0xBAB PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0xBB8 DUP5 DUP3 DUP6 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x1084 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP5 DUP3 DUP6 ADD PUSH2 0xA9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBF7 DUP2 PUSH2 0xF0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC06 DUP2 PUSH2 0xF1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC19 PUSH1 0x1B DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC24 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3C PUSH1 0x26 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC47 DUP3 PUSH2 0x10C3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC5F PUSH1 0x20 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC6A DUP3 PUSH2 0x1112 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC82 PUSH1 0x16 DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8D DUP3 PUSH2 0x113B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA5 PUSH1 0x1F DUP4 PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB0 DUP3 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC4 DUP2 PUSH2 0xF6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCDF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCFA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xD14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD50 DUP2 PUSH2 0xC0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD70 DUP2 PUSH2 0xC2F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD90 DUP2 PUSH2 0xC52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDB0 DUP2 PUSH2 0xC75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFC PUSH2 0xE0D JUMP JUMPDEST SWAP1 POP PUSH2 0xE08 DUP3 DUP3 PUSH2 0xF83 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE32 JUMPI PUSH2 0xE31 PUSH2 0x1041 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE5E JUMPI PUSH2 0xE5D PUSH2 0x1041 JUMP JUMPDEST JUMPDEST PUSH2 0xE67 DUP3 PUSH2 0x1089 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE90 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP2 POP PUSH2 0xE9B DUP4 PUSH2 0xF6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xED0 JUMPI PUSH2 0xECF PUSH2 0xFB4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE6 DUP3 PUSH2 0xF6A JUMP JUMPDEST SWAP2 POP PUSH2 0xEF1 DUP4 PUSH2 0xF6A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF01 JUMPI PUSH2 0xF00 PUSH2 0xFE3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF17 DUP3 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xF8C DUP3 PUSH2 0x1089 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAA PUSH2 0x1041 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1196 DUP2 PUSH2 0xF0C JUMP JUMPDEST DUP2 EQ PUSH2 0x11A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11AD DUP2 PUSH2 0xF6A JUMP JUMPDEST DUP2 EQ PUSH2 0x11B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD DUP13 0x1E BYTE 0xD9 0xBF STATICCALL PUSH13 0xA993009EBA38C17419C73A3934 0xE9 CALL CALLER 0xD0 0xC7 JUMPI 0xCB DUP7 0x4D KECCAK256 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "490:1623:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1799:20;1834:27;:17;:25;:27::i;:::-;1822:9;:39;;;;:::i;:::-;1799:62;;1871:29;1907:12;;;;;;;;;;;1903:31;;;1943:4;1903:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1871:78;;1972:9;1968:137;1991:12;:19;1987:1;:23;1968:137;;;2053:12;2026:7;:23;2034:11;2046:1;2034:14;;;;;;;;:::i;:::-;;;;;;;;;;2026:23;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;2090:3;;;;;1968:137;;;;1789:322;;490:1623;;;;;588:200:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:304:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;866:48:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1196:250:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;920:43:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1082:108;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;827:112:6;892:7;918;:14;;;911:21;;827:112;;;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;1452:304:8:-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1551:10:8::1;1526:35;;:12;:21;1539:7;1526:21;;;;;;;;;;;;;;;;;;;;;:35;;;1518:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1605:12;:21;1618:7;1605:21;;;;;;;;;;;;1598:28;;;;;;;;;;;1636:29;:17;:27;:29::i;:::-;1683:12;;;;;;;;;;;1675:38;;;1722:4;1729:10;1741:7;1675:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1701:1:1::0;2628:7;:22;;;;1452:304:8;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;866:48:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1196:250:8:-;1255:12;;;;;;;;;;;1247:38;;;1286:10;1306:4;1313:7;1247:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:10;1331:12;:21;1344:7;1331:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1375:11;1392:7;1375:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:29;:17;:27;:29::i;:::-;1196:250;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;920:43:8:-;;;;;;;;;;;;;;;;;:::o;1082:108::-;1094:13:0;:11;:13::i;:::-;1171:12:8::1;1156;;:27;;;;;;;;;;;;;;;;;;1082:108:::0;:::o;1074:229:6:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;24:744:9:-;131:5;156:81;172:64;229:6;172:64;:::i;:::-;156:81;:::i;:::-;147:90;;257:5;286:6;279:5;272:21;320:4;313:5;309:16;302:23;;346:6;396:3;388:4;380:6;376:17;371:3;367:27;364:36;361:143;;;415:79;;:::i;:::-;361:143;528:1;513:249;538:6;535:1;532:13;513:249;;;606:3;635:48;679:3;667:10;635:48;:::i;:::-;630:3;623:61;713:4;708:3;704:14;697:21;;747:4;742:3;738:14;731:21;;573:189;560:1;557;553:9;548:14;;513:249;;;517:14;137:631;;24:744;;;;;:::o;774:410::-;851:5;876:65;892:48;933:6;892:48;:::i;:::-;876:65;:::i;:::-;867:74;;964:6;957:5;950:21;1002:4;995:5;991:16;1040:3;1031:6;1026:3;1022:16;1019:25;1016:112;;;1047:79;;:::i;:::-;1016:112;1137:41;1171:6;1166:3;1161;1137:41;:::i;:::-;857:327;774:410;;;;;:::o;1190:139::-;1236:5;1274:6;1261:20;1252:29;;1290:33;1317:5;1290:33;:::i;:::-;1190:139;;;;:::o;1352:385::-;1434:5;1483:3;1476:4;1468:6;1464:17;1460:27;1450:122;;1491:79;;:::i;:::-;1450:122;1601:6;1595:13;1626:105;1727:3;1719:6;1712:4;1704:6;1700:17;1626:105;:::i;:::-;1617:114;;1440:297;1352:385;;;;:::o;1756:338::-;1811:5;1860:3;1853:4;1845:6;1841:17;1837:27;1827:122;;1868:79;;:::i;:::-;1827:122;1985:6;1972:20;2010:78;2084:3;2076:6;2069:4;2061:6;2057:17;2010:78;:::i;:::-;2001:87;;1817:277;1756:338;;;;:::o;2100:139::-;2146:5;2184:6;2171:20;2162:29;;2200:33;2227:5;2200:33;:::i;:::-;2100:139;;;;:::o;2245:143::-;2302:5;2333:6;2327:13;2318:22;;2349:33;2376:5;2349:33;:::i;:::-;2245:143;;;;:::o;2394:329::-;2453:6;2502:2;2490:9;2481:7;2477:23;2473:32;2470:119;;;2508:79;;:::i;:::-;2470:119;2628:1;2653:53;2698:7;2689:6;2678:9;2674:22;2653:53;:::i;:::-;2643:63;;2599:117;2394:329;;;;:::o;2729:943::-;2824:6;2832;2840;2848;2897:3;2885:9;2876:7;2872:23;2868:33;2865:120;;;2904:79;;:::i;:::-;2865:120;3024:1;3049:53;3094:7;3085:6;3074:9;3070:22;3049:53;:::i;:::-;3039:63;;2995:117;3151:2;3177:53;3222:7;3213:6;3202:9;3198:22;3177:53;:::i;:::-;3167:63;;3122:118;3279:2;3305:53;3350:7;3341:6;3330:9;3326:22;3305:53;:::i;:::-;3295:63;;3250:118;3435:2;3424:9;3420:18;3407:32;3466:18;3458:6;3455:30;3452:117;;;3488:79;;:::i;:::-;3452:117;3593:62;3647:7;3638:6;3627:9;3623:22;3593:62;:::i;:::-;3583:72;;3378:287;2729:943;;;;;;;:::o;3678:554::-;3773:6;3822:2;3810:9;3801:7;3797:23;3793:32;3790:119;;;3828:79;;:::i;:::-;3790:119;3969:1;3958:9;3954:17;3948:24;3999:18;3991:6;3988:30;3985:117;;;4021:79;;:::i;:::-;3985:117;4126:89;4207:7;4198:6;4187:9;4183:22;4126:89;:::i;:::-;4116:99;;3919:306;3678:554;;;;:::o;4238:329::-;4297:6;4346:2;4334:9;4325:7;4321:23;4317:32;4314:119;;;4352:79;;:::i;:::-;4314:119;4472:1;4497:53;4542:7;4533:6;4522:9;4518:22;4497:53;:::i;:::-;4487:63;;4443:117;4238:329;;;;:::o;4573:118::-;4660:24;4678:5;4660:24;:::i;:::-;4655:3;4648:37;4573:118;;:::o;4697:115::-;4782:23;4799:5;4782:23;:::i;:::-;4777:3;4770:36;4697:115;;:::o;4818:366::-;4960:3;4981:67;5045:2;5040:3;4981:67;:::i;:::-;4974:74;;5057:93;5146:3;5057:93;:::i;:::-;5175:2;5170:3;5166:12;5159:19;;4818:366;;;:::o;5190:::-;5332:3;5353:67;5417:2;5412:3;5353:67;:::i;:::-;5346:74;;5429:93;5518:3;5429:93;:::i;:::-;5547:2;5542:3;5538:12;5531:19;;5190:366;;;:::o;5562:::-;5704:3;5725:67;5789:2;5784:3;5725:67;:::i;:::-;5718:74;;5801:93;5890:3;5801:93;:::i;:::-;5919:2;5914:3;5910:12;5903:19;;5562:366;;;:::o;5934:::-;6076:3;6097:67;6161:2;6156:3;6097:67;:::i;:::-;6090:74;;6173:93;6262:3;6173:93;:::i;:::-;6291:2;6286:3;6282:12;6275:19;;5934:366;;;:::o;6306:::-;6448:3;6469:67;6533:2;6528:3;6469:67;:::i;:::-;6462:74;;6545:93;6634:3;6545:93;:::i;:::-;6663:2;6658:3;6654:12;6647:19;;6306:366;;;:::o;6678:118::-;6765:24;6783:5;6765:24;:::i;:::-;6760:3;6753:37;6678:118;;:::o;6802:222::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:71;7014:1;7003:9;6999:17;6990:6;6946:71;:::i;:::-;6802:222;;;;:::o;7030:442::-;7179:4;7217:2;7206:9;7202:18;7194:26;;7230:71;7298:1;7287:9;7283:17;7274:6;7230:71;:::i;:::-;7311:72;7379:2;7368:9;7364:18;7355:6;7311:72;:::i;:::-;7393;7461:2;7450:9;7446:18;7437:6;7393:72;:::i;:::-;7030:442;;;;;;:::o;7478:218::-;7569:4;7607:2;7596:9;7592:18;7584:26;;7620:69;7686:1;7675:9;7671:17;7662:6;7620:69;:::i;:::-;7478:218;;;;:::o;7702:419::-;7868:4;7906:2;7895:9;7891:18;7883:26;;7955:9;7949:4;7945:20;7941:1;7930:9;7926:17;7919:47;7983:131;8109:4;7983:131;:::i;:::-;7975:139;;7702:419;;;:::o;8127:::-;8293:4;8331:2;8320:9;8316:18;8308:26;;8380:9;8374:4;8370:20;8366:1;8355:9;8351:17;8344:47;8408:131;8534:4;8408:131;:::i;:::-;8400:139;;8127:419;;;:::o;8552:::-;8718:4;8756:2;8745:9;8741:18;8733:26;;8805:9;8799:4;8795:20;8791:1;8780:9;8776:17;8769:47;8833:131;8959:4;8833:131;:::i;:::-;8825:139;;8552:419;;;:::o;8977:::-;9143:4;9181:2;9170:9;9166:18;9158:26;;9230:9;9224:4;9220:20;9216:1;9205:9;9201:17;9194:47;9258:131;9384:4;9258:131;:::i;:::-;9250:139;;8977:419;;;:::o;9402:::-;9568:4;9606:2;9595:9;9591:18;9583:26;;9655:9;9649:4;9645:20;9641:1;9630:9;9626:17;9619:47;9683:131;9809:4;9683:131;:::i;:::-;9675:139;;9402:419;;;:::o;9827:222::-;9920:4;9958:2;9947:9;9943:18;9935:26;;9971:71;10039:1;10028:9;10024:17;10015:6;9971:71;:::i;:::-;9827:222;;;;:::o;10055:129::-;10089:6;10116:20;;:::i;:::-;10106:30;;10145:33;10173:4;10165:6;10145:33;:::i;:::-;10055:129;;;:::o;10190:75::-;10223:6;10256:2;10250:9;10240:19;;10190:75;:::o;10271:311::-;10348:4;10438:18;10430:6;10427:30;10424:56;;;10460:18;;:::i;:::-;10424:56;10510:4;10502:6;10498:17;10490:25;;10570:4;10564;10560:15;10552:23;;10271:311;;;:::o;10588:307::-;10649:4;10739:18;10731:6;10728:30;10725:56;;;10761:18;;:::i;:::-;10725:56;10799:29;10821:6;10799:29;:::i;:::-;10791:37;;10883:4;10877;10873:15;10865:23;;10588:307;;;:::o;10901:169::-;10985:11;11019:6;11014:3;11007:19;11059:4;11054:3;11050:14;11035:29;;10901:169;;;;:::o;11076:305::-;11116:3;11135:20;11153:1;11135:20;:::i;:::-;11130:25;;11169:20;11187:1;11169:20;:::i;:::-;11164:25;;11323:1;11255:66;11251:74;11248:1;11245:81;11242:107;;;11329:18;;:::i;:::-;11242:107;11373:1;11370;11366:9;11359:16;;11076:305;;;;:::o;11387:185::-;11427:1;11444:20;11462:1;11444:20;:::i;:::-;11439:25;;11478:20;11496:1;11478:20;:::i;:::-;11473:25;;11517:1;11507:35;;11522:18;;:::i;:::-;11507:35;11564:1;11561;11557:9;11552:14;;11387:185;;;;:::o;11578:96::-;11615:7;11644:24;11662:5;11644:24;:::i;:::-;11633:35;;11578:96;;;:::o;11680:149::-;11716:7;11756:66;11749:5;11745:78;11734:89;;11680:149;;;:::o;11835:126::-;11872:7;11912:42;11905:5;11901:54;11890:65;;11835:126;;;:::o;11967:77::-;12004:7;12033:5;12022:16;;11967:77;;;:::o;12050:154::-;12134:6;12129:3;12124;12111:30;12196:1;12187:6;12182:3;12178:16;12171:27;12050:154;;;:::o;12210:281::-;12293:27;12315:4;12293:27;:::i;:::-;12285:6;12281:40;12423:6;12411:10;12408:22;12387:18;12375:10;12372:34;12369:62;12366:88;;;12434:18;;:::i;:::-;12366:88;12474:10;12470:2;12463:22;12253:238;12210:281;;:::o;12497:180::-;12545:77;12542:1;12535:88;12642:4;12639:1;12632:15;12666:4;12663:1;12656:15;12683:180;12731:77;12728:1;12721:88;12828:4;12825:1;12818:15;12852:4;12849:1;12842:15;12869:180;12917:77;12914:1;12907:88;13014:4;13011:1;13004:15;13038:4;13035:1;13028:15;13055:180;13103:77;13100:1;13093:88;13200:4;13197:1;13190:15;13224:4;13221:1;13214:15;13241:117;13350:1;13347;13340:12;13364:117;13473:1;13470;13463:12;13487:117;13596:1;13593;13586:12;13610:117;13719:1;13716;13709:12;13733:117;13842:1;13839;13832:12;13856:102;13897:6;13948:2;13944:7;13939:2;13932:5;13928:14;13924:28;13914:38;;13856:102;;;:::o;13964:177::-;14104:29;14100:1;14092:6;14088:14;14081:53;13964:177;:::o;14147:225::-;14287:34;14283:1;14275:6;14271:14;14264:58;14356:8;14351:2;14343:6;14339:15;14332:33;14147:225;:::o;14378:182::-;14518:34;14514:1;14506:6;14502:14;14495:58;14378:182;:::o;14566:172::-;14706:24;14702:1;14694:6;14690:14;14683:48;14566:172;:::o;14744:181::-;14884:33;14880:1;14872:6;14868:14;14861:57;14744:181;:::o;14931:122::-;15004:24;15022:5;15004:24;:::i;:::-;14997:5;14994:35;14984:63;;15043:1;15040;15033:12;14984:63;14931:122;:::o;15059:::-;15132:24;15150:5;15132:24;:::i;:::-;15125:5;15122:35;15112:63;;15171:1;15168;15161:12;15112:63;15059:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "918600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2522",
								"renounceOwnership()": "30443",
								"rewards(uint256)": "infinite",
								"setNftContact(address)": "27074",
								"stake(uint256)": "infinite",
								"tokenOwnedBy(uint256)": "2906",
								"transferOwnership(address)": "30791",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1054,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1042,
									"end": 1054,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1042,
									"end": 1069,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1076,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 490,
									"end": 2113,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220358c1e1ad9bffa6ca993009eba38c17419c73a3934e9f133d0c757cb864d202e64736f6c63430008070033",
									".code": [
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "F301AF42"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1834,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1834,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1831,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1861,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1900,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1903,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1972,
											"end": 1981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 2010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2033,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2026,
											"end": 2065,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2093,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2105,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 2111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 2111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 2113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1561,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1547,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1526,
											"end": 1561,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1518,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1617,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1636,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1636,
											"end": 1663,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1636,
											"end": 1665,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1665,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1636,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1683,
											"end": 1695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1713,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1713,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1713,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1739,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1748,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1756,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 866,
											"end": 914,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 866,
											"end": 914,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1285,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1285,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1285,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1310,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1313,
											"end": 1320,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1355,
											"end": 1365,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1331,
											"end": 1365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1386,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1392,
											"end": 1399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1375,
											"end": 1400,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1410,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1410,
											"end": 1439,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1410,
											"end": 1439,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1410,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1446,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 920,
											"end": 963,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1183,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1156,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1190,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 131,
											"end": 136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 229,
											"end": 235,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 172,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 172,
											"end": 236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 156,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 156,
											"end": 237,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 147,
											"end": 237,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 147,
											"end": 237,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 257,
											"end": 262,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 286,
											"end": 292,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 272,
											"end": 293,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 320,
											"end": 324,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 309,
											"end": 325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 302,
											"end": 325,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 346,
											"end": 352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 376,
											"end": 393,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 367,
											"end": 394,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 364,
											"end": 400,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 361,
											"end": 504,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 361,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 361,
											"end": 504,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 361,
											"end": 504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 538,
											"end": 544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 535,
											"end": 536,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 532,
											"end": 545,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 513,
											"end": 762,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 606,
											"end": 609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 679,
											"end": 682,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 667,
											"end": 677,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 635,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 635,
											"end": 683,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 630,
											"end": 633,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 623,
											"end": 684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 713,
											"end": 717,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 711,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 704,
											"end": 718,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 697,
											"end": 718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 742,
											"end": 745,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 738,
											"end": 752,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 731,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 731,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 560,
											"end": 561,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 553,
											"end": 562,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 548,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 548,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 513,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 513,
											"end": 762,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 513,
											"end": 762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 517,
											"end": 531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 137,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24,
											"end": 768,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 892,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 892,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 892,
											"end": 940,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 892,
											"end": 940,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 892,
											"end": 940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 876,
											"end": 941,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 876,
											"end": 941,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 876,
											"end": 941,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 867,
											"end": 941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 867,
											"end": 941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 957,
											"end": 962,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 950,
											"end": 971,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1000,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 991,
											"end": 1007,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1029,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1128,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1128,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1047,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1047,
											"end": 1126,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1126,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1047,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1128,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1016,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1164,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1137,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 857,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 1184,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1261,
											"end": 1281,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1281,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 1290,
											"end": 1323,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1323,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 1290,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1329,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1434,
											"end": 1439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1464,
											"end": 1481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1460,
											"end": 1487,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1450,
											"end": 1572,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1491,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1491,
											"end": 1570,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1491,
											"end": 1570,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1491,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1572,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1450,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1727,
											"end": 1730,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1700,
											"end": 1717,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1626,
											"end": 1731,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1626,
											"end": 1731,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 1626,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1617,
											"end": 1731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1617,
											"end": 1731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1737,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1857,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1858,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1992,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2084,
											"end": 2087,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2073,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2067,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2057,
											"end": 2074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2010,
											"end": 2088,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2010,
											"end": 2088,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 2010,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2001,
											"end": 2088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1817,
											"end": 2094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 2094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2171,
											"end": 2191,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2162,
											"end": 2191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2239,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2340,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2318,
											"end": 2340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2376,
											"end": 2381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 2349,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2245,
											"end": 2388,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2504,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2488,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2500,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2505,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2508,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2470,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2716,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2723,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2840,
											"end": 2846,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2900,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2885,
											"end": 2894,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2883,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2895,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2901,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2985,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2865,
											"end": 2985,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2985,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 2865,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3083,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3070,
											"end": 3092,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3049,
											"end": 3102,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3049,
											"end": 3102,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3049,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3222,
											"end": 3229,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3211,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 3177,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3230,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3230,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3279,
											"end": 3281,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3350,
											"end": 3357,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3368,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3439,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3485,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3488,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3452,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3636,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3593,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3655,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3583,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3378,
											"end": 3665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 3672,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3773,
											"end": 3779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3824,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3808,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3793,
											"end": 3825,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3790,
											"end": 3909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3828,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 3828,
											"end": 3907,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3828,
											"end": 3907,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 3828,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3790,
											"end": 3909,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 3790,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3969,
											"end": 3970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3954,
											"end": 3971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 3972,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4018,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4102,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3985,
											"end": 4102,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4021,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4021,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4021,
											"end": 4100,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4100,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4021,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 4102,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3985,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4207,
											"end": 4214,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4183,
											"end": 4205,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4126,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4126,
											"end": 4215,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4126,
											"end": 4215,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4126,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4215,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4116,
											"end": 4215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3919,
											"end": 4225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 4232,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4343,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4325,
											"end": 4332,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4321,
											"end": 4344,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4349,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4314,
											"end": 4433,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4314,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4314,
											"end": 4433,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4352,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4314,
											"end": 4433,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4314,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4473,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4542,
											"end": 4549,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4518,
											"end": 4540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4497,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4497,
											"end": 4550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4497,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4238,
											"end": 4567,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4573,
											"end": 4691,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4573,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4678,
											"end": 4683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4660,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4685,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4691,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4697,
											"end": 4812,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4697,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4799,
											"end": 4804,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4806,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4697,
											"end": 4812,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 5045,
											"end": 5047,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 5040,
											"end": 5043,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4981,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 4981,
											"end": 5048,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4981,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4981,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4974,
											"end": 5048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5146,
											"end": 5149,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5057,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 5057,
											"end": 5150,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5150,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5057,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5175,
											"end": 5177,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5173,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5166,
											"end": 5178,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5159,
											"end": 5178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4818,
											"end": 5184,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5332,
											"end": 5335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5417,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5412,
											"end": 5415,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 5353,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5518,
											"end": 5521,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5429,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5429,
											"end": 5522,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5429,
											"end": 5522,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 5429,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5549,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5542,
											"end": 5545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5538,
											"end": 5550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5531,
											"end": 5550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5556,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5707,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5725,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5801,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5801,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5801,
											"end": 5894,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5801,
											"end": 5894,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5801,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5917,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5903,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5562,
											"end": 5928,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6161,
											"end": 6163,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6097,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6097,
											"end": 6164,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6097,
											"end": 6164,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6097,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6090,
											"end": 6164,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6090,
											"end": 6164,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6262,
											"end": 6265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 6173,
											"end": 6266,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6173,
											"end": 6266,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 6173,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6291,
											"end": 6293,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6286,
											"end": 6289,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6282,
											"end": 6294,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6275,
											"end": 6294,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5934,
											"end": 6300,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6469,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6533,
											"end": 6535,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6528,
											"end": 6531,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6469,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 6469,
											"end": 6536,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6536,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6469,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 6536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6462,
											"end": 6536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6545,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 6545,
											"end": 6638,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6545,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 6545,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6663,
											"end": 6665,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6654,
											"end": 6666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6647,
											"end": 6666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6672,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6678,
											"end": 6796,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 6678,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6765,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6783,
											"end": 6788,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6765,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6765,
											"end": 6789,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6765,
											"end": 6789,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 6765,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6753,
											"end": 6790,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6678,
											"end": 6796,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6999,
											"end": 7016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 6946,
											"end": 7017,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6946,
											"end": 7017,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6946,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6802,
											"end": 7024,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7179,
											"end": 7183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7219,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7206,
											"end": 7215,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7202,
											"end": 7220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7194,
											"end": 7220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7194,
											"end": 7220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7230,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7379,
											"end": 7381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7355,
											"end": 7361,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7383,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 7311,
											"end": 7383,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7311,
											"end": 7383,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7311,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7461,
											"end": 7463,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7450,
											"end": 7459,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7464,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7393,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 7393,
											"end": 7465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7393,
											"end": 7465,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7393,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7472,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7569,
											"end": 7573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7609,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7592,
											"end": 7610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7584,
											"end": 7610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7675,
											"end": 7684,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7662,
											"end": 7668,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7620,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7620,
											"end": 7689,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7620,
											"end": 7689,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7620,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7478,
											"end": 7696,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7908,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7895,
											"end": 7904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7891,
											"end": 7909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7883,
											"end": 7909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7955,
											"end": 7964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7926,
											"end": 7943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7919,
											"end": 7966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7983,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 8109,
											"end": 8113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7983,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7983,
											"end": 8114,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8114,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7983,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7975,
											"end": 8114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7702,
											"end": 8121,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8293,
											"end": 8297,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8333,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8320,
											"end": 8329,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8308,
											"end": 8334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8308,
											"end": 8334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8380,
											"end": 8389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8390,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8367,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8351,
											"end": 8368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8344,
											"end": 8391,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8534,
											"end": 8538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8408,
											"end": 8539,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8408,
											"end": 8539,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8408,
											"end": 8539,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 8408,
											"end": 8539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8400,
											"end": 8539,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8400,
											"end": 8539,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8546,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8741,
											"end": 8759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8759,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8733,
											"end": 8759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8805,
											"end": 8814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8795,
											"end": 8815,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8791,
											"end": 8792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8780,
											"end": 8789,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8776,
											"end": 8793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8769,
											"end": 8816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8959,
											"end": 8963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8833,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8833,
											"end": 8964,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8833,
											"end": 8964,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 8833,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8825,
											"end": 8964,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8825,
											"end": 8964,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8552,
											"end": 8971,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9147,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9170,
											"end": 9179,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9158,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9220,
											"end": 9240,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9205,
											"end": 9214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9201,
											"end": 9218,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9194,
											"end": 9241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 9384,
											"end": 9388,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9258,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 9258,
											"end": 9389,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9258,
											"end": 9389,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 9258,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9250,
											"end": 9389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9250,
											"end": 9389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8977,
											"end": 9396,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9595,
											"end": 9604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9609,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9583,
											"end": 9609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9655,
											"end": 9664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9649,
											"end": 9653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9665,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9626,
											"end": 9643,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9619,
											"end": 9666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 9809,
											"end": 9813,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9683,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9683,
											"end": 9814,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9683,
											"end": 9814,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 9683,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9675,
											"end": 9814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9675,
											"end": 9814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9402,
											"end": 9821,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9920,
											"end": 9924,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9943,
											"end": 9961,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9935,
											"end": 9961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9971,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10015,
											"end": 10021,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9971,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9971,
											"end": 10042,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9971,
											"end": 10042,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 9971,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 10049,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10089,
											"end": 10095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10116,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10106,
											"end": 10136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10106,
											"end": 10136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10173,
											"end": 10177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10165,
											"end": 10171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10145,
											"end": 10178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 10145,
											"end": 10178,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10145,
											"end": 10178,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10145,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10055,
											"end": 10184,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10190,
											"end": 10265,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10190,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10258,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10250,
											"end": 10259,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10259,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10240,
											"end": 10259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10190,
											"end": 10265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10190,
											"end": 10265,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10427,
											"end": 10457,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10480,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 10424,
											"end": 10480,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10480,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 10424,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10502,
											"end": 10508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10498,
											"end": 10515,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10515,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10515,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10564,
											"end": 10568,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10575,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10575,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10552,
											"end": 10575,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10271,
											"end": 10582,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10649,
											"end": 10653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10731,
											"end": 10737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10758,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10761,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10725,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10799,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10799,
											"end": 10828,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10799,
											"end": 10828,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10799,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10791,
											"end": 10828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 10887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10877,
											"end": 10881,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10873,
											"end": 10888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10865,
											"end": 10888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10865,
											"end": 10888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10588,
											"end": 10895,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10985,
											"end": 10996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11019,
											"end": 11025,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11014,
											"end": 11017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11007,
											"end": 11026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11059,
											"end": 11063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11054,
											"end": 11057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11050,
											"end": 11064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 11070,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11153,
											"end": 11154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 11135,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11130,
											"end": 11155,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 11169,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11164,
											"end": 11189,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11164,
											"end": 11189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11323,
											"end": 11324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11255,
											"end": 11321,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11251,
											"end": 11325,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11248,
											"end": 11249,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11245,
											"end": 11326,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11349,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11242,
											"end": 11349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 11329,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11242,
											"end": 11349,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 11242,
											"end": 11349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11370,
											"end": 11371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11366,
											"end": 11375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11359,
											"end": 11375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11359,
											"end": 11375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11076,
											"end": 11381,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11427,
											"end": 11428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11462,
											"end": 11463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 11444,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11439,
											"end": 11464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11496,
											"end": 11497,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 11478,
											"end": 11498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11473,
											"end": 11498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11517,
											"end": 11518,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11507,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11507,
											"end": 11542,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 11522,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11507,
											"end": 11542,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 11507,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11561,
											"end": 11562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11557,
											"end": 11566,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11387,
											"end": 11572,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11615,
											"end": 11622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11662,
											"end": 11667,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11633,
											"end": 11668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11578,
											"end": 11674,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11716,
											"end": 11723,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11756,
											"end": 11822,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11749,
											"end": 11754,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11745,
											"end": 11823,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11823,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11734,
											"end": 11823,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11680,
											"end": 11829,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11872,
											"end": 11879,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11954,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11905,
											"end": 11910,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11901,
											"end": 11955,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11890,
											"end": 11955,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11890,
											"end": 11955,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11835,
											"end": 11961,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12004,
											"end": 12011,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12033,
											"end": 12038,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12022,
											"end": 12038,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12022,
											"end": 12038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12129,
											"end": 12132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12111,
											"end": 12141,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12187,
											"end": 12193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12182,
											"end": 12185,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12194,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12171,
											"end": 12198,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12050,
											"end": 12204,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12210,
											"end": 12491,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12210,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12315,
											"end": 12319,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12293,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12293,
											"end": 12320,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12293,
											"end": 12320,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12293,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12285,
											"end": 12291,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12281,
											"end": 12321,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12411,
											"end": 12421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12408,
											"end": 12430,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12387,
											"end": 12405,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12375,
											"end": 12385,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12372,
											"end": 12406,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12369,
											"end": 12431,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 12366,
											"end": 12454,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12366,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12366,
											"end": 12454,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12366,
											"end": 12454,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12366,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12484,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12470,
											"end": 12472,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12463,
											"end": 12485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12253,
											"end": 12491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12210,
											"end": 12491,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12497,
											"end": 12677,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 12497,
											"end": 12677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12622,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12542,
											"end": 12543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12535,
											"end": 12623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12632,
											"end": 12647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12666,
											"end": 12670,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12663,
											"end": 12664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12683,
											"end": 12863,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 12683,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 12808,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12728,
											"end": 12729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12809,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12828,
											"end": 12832,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12818,
											"end": 12833,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12852,
											"end": 12856,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12849,
											"end": 12850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12842,
											"end": 12857,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12869,
											"end": 13049,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 12869,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12917,
											"end": 12994,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12914,
											"end": 12915,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13014,
											"end": 13018,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 13011,
											"end": 13012,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13004,
											"end": 13019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13042,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13035,
											"end": 13036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13028,
											"end": 13043,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13055,
											"end": 13235,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 13055,
											"end": 13235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13103,
											"end": 13180,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13100,
											"end": 13101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13093,
											"end": 13181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13200,
											"end": 13204,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 13197,
											"end": 13198,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 13190,
											"end": 13205,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13224,
											"end": 13228,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13221,
											"end": 13222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13214,
											"end": 13229,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13241,
											"end": 13358,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 13241,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13350,
											"end": 13351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13347,
											"end": 13348,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13340,
											"end": 13352,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13473,
											"end": 13474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13470,
											"end": 13471,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13463,
											"end": 13475,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13604,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 13487,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13596,
											"end": 13597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13593,
											"end": 13594,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13586,
											"end": 13598,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13727,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 13610,
											"end": 13727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13716,
											"end": 13717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13709,
											"end": 13721,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13733,
											"end": 13850,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 13733,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13842,
											"end": 13843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13840,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 13832,
											"end": 13844,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13897,
											"end": 13903,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13948,
											"end": 13950,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13944,
											"end": 13951,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 13939,
											"end": 13941,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 13932,
											"end": 13937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13928,
											"end": 13942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13924,
											"end": 13952,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13952,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13914,
											"end": 13952,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13856,
											"end": 13958,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 13964,
											"end": 14141,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 13964,
											"end": 14141,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14104,
											"end": 14133,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 14100,
											"end": 14101,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14092,
											"end": 14098,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14088,
											"end": 14102,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14081,
											"end": 14134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13964,
											"end": 14141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13964,
											"end": 14141,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14147,
											"end": 14372,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 14147,
											"end": 14372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14287,
											"end": 14321,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14283,
											"end": 14284,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14275,
											"end": 14281,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14271,
											"end": 14285,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14264,
											"end": 14322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14356,
											"end": 14364,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14351,
											"end": 14353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14343,
											"end": 14349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14339,
											"end": 14354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14332,
											"end": 14365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14147,
											"end": 14372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14147,
											"end": 14372,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14378,
											"end": 14560,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 14378,
											"end": 14560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14518,
											"end": 14552,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14514,
											"end": 14515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14506,
											"end": 14512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14502,
											"end": 14516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14495,
											"end": 14553,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14560,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14378,
											"end": 14560,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14566,
											"end": 14738,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 14566,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14706,
											"end": 14730,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F7420746865206F776E65722E00000000000000000000"
										},
										{
											"begin": 14702,
											"end": 14703,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14694,
											"end": 14700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14690,
											"end": 14704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14683,
											"end": 14731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14566,
											"end": 14738,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14744,
											"end": 14925,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 14744,
											"end": 14925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14884,
											"end": 14917,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14880,
											"end": 14881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14868,
											"end": 14882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14861,
											"end": 14918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14744,
											"end": 14925,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14931,
											"end": 15053,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 14931,
											"end": 15053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 15022,
											"end": 15027,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15004,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 15004,
											"end": 15028,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15004,
											"end": 15028,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 15004,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14997,
											"end": 15002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14994,
											"end": 15029,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 15047,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 14984,
											"end": 15047,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15043,
											"end": 15044,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15040,
											"end": 15041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15033,
											"end": 15045,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14984,
											"end": 15047,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 14984,
											"end": 15047,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 15053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14931,
											"end": 15053,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 15059,
											"end": 15181,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 15059,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15132,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 15132,
											"end": 15156,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15132,
											"end": 15156,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 15132,
											"end": 15156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15125,
											"end": 15130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15122,
											"end": 15157,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15175,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 15112,
											"end": 15175,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15168,
											"end": 15169,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 15161,
											"end": 15173,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 15112,
											"end": 15175,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 15112,
											"end": 15175,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15059,
											"end": 15181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15059,
											"end": 15181,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(uint256)": "f301af42",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnedBy(uint256)": "8488cc41",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0x0468ec6fb81f7d8ac5f0c9ea316511674bbc710c5a373cb519510e4cc6f595e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d42d59d18143902b1a4089ba6cd4ba4b47d1703eaa07d1ac53a24b45519253\",\"dweb:/ipfs/QmbJHFi6y8K1C6YrVVb1JwX7qjUAQpwc1SdqozuDfR5bae\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 445,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 478,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnedBy",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 482,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 485,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"NFT": [
							437
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							636
						]
					},
					"id": 637,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 113,
							"src": "57:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 153,
							"src": "116:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 314,
							"src": "185:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 269,
							"src": "261:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 637,
							"sourceUnit": 410,
							"src": "326:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "NFT",
							"nameLocation": "396:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "438b6300",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "415:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "437:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "429:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:16:8"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "468:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "468:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "468:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:18:8"
									},
									"scope": 437,
									"src": "406:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 637,
							"src": "386:102:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "515:7:8"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "515:7:8"
								},
								{
									"baseName": {
										"id": 440,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "524:12:8"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "524:12:8"
								},
								{
									"baseName": {
										"id": 442,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "538:15:8"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "538:15:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 636,
							"linearizedBaseContracts": [
								636,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "499:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "568:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "560:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"id": 449,
									"libraryName": {
										"id": 446,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "593:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "587:36:8",
									"typeName": {
										"id": 448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 447,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "606:16:8"
										},
										"referencedDeclaration": 341,
										"src": "606:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "653:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "628:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 451,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 450,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "628:16:8"
										},
										"referencedDeclaration": 341,
										"src": "628:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 460,
									"name": "NFTStaked",
									"nameLocation": "683:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "701:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "693:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "716:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "708:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "733:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "725:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:47:8"
									},
									"src": "677:63:8"
								},
								{
									"anonymous": false,
									"id": 468,
									"name": "NFTUnstaked",
									"nameLocation": "751:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "771:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "763:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "786:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "778:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "803:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "795:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "795:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "762:47:8"
									},
									"src": "745:65:8"
								},
								{
									"anonymous": false,
									"id": 474,
									"name": "Claimed",
									"nameLocation": "821:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "837:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "829:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "852:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "844:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:31:8"
									},
									"src": "815:45:8"
								},
								{
									"constant": false,
									"functionSelector": "8488cc41",
									"id": 478,
									"mutability": "mutable",
									"name": "tokenOwnedBy",
									"nameLocation": "902:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "866:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 477,
										"keyType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "875:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "866:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "886:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f301af42",
									"id": 482,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "956:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "920:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 481,
										"keyType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "929:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "920:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "940:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "tokenStaked",
									"nameLocation": "979:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 636,
									"src": "969:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "969:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"nodeType": "ArrayTypeName",
										"src": "969:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1032:44:8",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1042:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1057:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1042:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1042:27:8"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1018:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1010:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:22:8"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1032:0:8"
									},
									"scope": 636,
									"src": "997:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1146:44:8",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1156:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1171:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1156:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1156:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1136:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1136:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "1091:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1113:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1105:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:22:8"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1146:0:8"
									},
									"scope": 636,
									"src": "1082:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1237:209:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1286:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1286:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1306:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1298:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1298:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1298:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1313:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1255:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1247:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1247:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1247:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1247:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1247:74:8"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1331:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1344:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1331:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1355:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1355:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1331:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1331:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1392:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1375:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1375:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1375:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1375:25:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 538,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1410:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1410:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1410:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1410:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1205:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1219:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1211:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:17:8"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1237:0:8"
									},
									"scope": 636,
									"src": "1196:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "1508:248:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1526:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1526:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1551:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1551:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1526:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1563:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1518:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1518:70:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1598:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1605:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1618:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1605:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1598:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 566,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1636:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1636:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1636:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1636:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1722:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1714:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1714:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1714:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1729:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1729:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1741:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1683:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 571,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1675:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1675:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1675:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "1675:74:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1486:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1486:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1461:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1477:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1469:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:17:8"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:0:8"
									},
									"scope": 636,
									"src": "1452:304:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1789:322:8",
										"statements": [
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"mutability": "mutable",
														"name": "sharePerEach",
														"nameLocation": "1807:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "1799:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1799:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 590,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1822:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1822:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 592,
																"name": "_stakedNFTCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1834:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$341_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "1834:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1834:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1799:62:8"
											},
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "tokensStaked",
														"nameLocation": "1888:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "1871:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 599,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1871:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 600,
															"nodeType": "ArrayTypeName",
															"src": "1871:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 608,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1943:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$636",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1935:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1935:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1935:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 603,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1907:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 602,
																"name": "NFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "1903:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_NFT_$437_$",
																	"typeString": "type(contract NFT)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1903:17:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NFT_$437",
																"typeString": "contract NFT"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "1903:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1903:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1871:78:8"
											},
											{
												"body": {
													"id": 632,
													"nodeType": "Block",
													"src": "2012:93:8",
													"statements": [
														{
															"expression": {
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 620,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2026:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 624,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 621,
																			"name": "tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "2034:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 623,
																		"indexExpression": {
																			"id": 622,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "2046:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2034:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2026:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 625,
																	"name": "sharePerEach",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "2053:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2026:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 627,
															"nodeType": "ExpressionStatement",
															"src": "2026:39:8"
														},
														{
															"id": 631,
															"nodeType": "UncheckedBlock",
															"src": "2079:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2090:3:8",
																		"subExpression": {
																			"id": 628,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "2092:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "2090:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 616,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "1987:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 617,
															"name": "tokensStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "1991:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1991:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1987:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"initializationExpression": {
													"assignments": [
														613
													],
													"declarations": [
														{
															"constant": false,
															"id": 613,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1980:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 633,
															"src": "1972:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 612,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1972:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 615,
													"initialValue": {
														"hexValue": "30",
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1984:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1972:13:8"
												},
												"nodeType": "ForStatement",
												"src": "1968:137:8"
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1769:2:8"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:0:8"
									},
									"scope": 636,
									"src": "1762:349:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 637,
							"src": "490:1623:8",
							"usedErrors": []
						}
					],
					"src": "32:2081:8"
				},
				"id": 8
			}
		}
	}
}