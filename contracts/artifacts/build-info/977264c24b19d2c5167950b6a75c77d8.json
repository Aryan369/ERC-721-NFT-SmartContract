{
	"id": "977264c24b19d2c5167950b6a75c77d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ninterface INFT {\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\n}\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    address _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnerOf;\n    mapping (uint256 => uint256) public rewards;\n    uint256[] tokenStaked;\n\n    constructor (address nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(address nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnerOf[tokenId] = msg.sender;\n        tokenStaked.push(tokenId);\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnerOf[tokenId];\n        _stakedNFTCounter.decrement();\n        (bool success, ) = payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        delete rewards[tokenId];\n        IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    function claim(uint256 tokenId) nonReentrant external {\n        require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\");\n        (bool success, ) = payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        rewards[tokenId] = 0;\n    }\n\n    function calculateRewards(uint256 tokenId) public view returns(uint256){\n        return rewards[tokenId];\n    }\n\n    function getTokensStakedByUser(address user) public view returns(uint[] memory){\n        uint256[] memory _tokenStaked = INFT(_nftContract).walletOfOwner(address(this));\n        uint256[] memory tokenOwnerOfUser;\n        uint256 currentIndex = 0;\n\n        for (uint i; i < _tokenStaked.length;){\n            if(user == tokenOwnerOf[_tokenStaked[i]]){\n                tokenOwnerOfUser[currentIndex] = _tokenStaked[i];\n                currentIndex++;\n            }\n            unchecked {++i;}\n        }\n\n        return tokenOwnerOfUser;\n    }\n\n    receive() external payable {\n        require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\");\n        uint256 sharePerEach = msg.value / _stakedNFTCounter.current();\n        uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this));\n        \n        for(uint256 i = 0; i < tokensStaked.length;){\n            rewards[tokenStaked[i]] += sharePerEach;\n            unchecked {++i;}\n        }\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_4:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1629:1662   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1611:1663   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1599:1601   */\n      0x20\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"#utility.yul\":14:187   */\n    tag_11:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_15\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_15:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:319   */\n    tag_12:\n        /* \"#utility.yul\":253:263   */\n      0x4e487b71\n        /* \"#utility.yul\":248:251   */\n      0xe0\n        /* \"#utility.yul\":244:264   */\n      shl\n        /* \"#utility.yul\":241:242   */\n      0x00\n        /* \"#utility.yul\":234:265   */\n      mstore\n        /* \"#utility.yul\":284:288   */\n      0x41\n        /* \"#utility.yul\":281:282   */\n      0x04\n        /* \"#utility.yul\":274:289   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x24\n        /* \"#utility.yul\":305:306   */\n      0x00\n        /* \"#utility.yul\":298:313   */\n      revert\n        /* \"#utility.yul\":324:1462   */\n    tag_6:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":496:499   */\n      0x80\n        /* \"#utility.yul\":484:493   */\n      dup6\n        /* \"#utility.yul\":475:482   */\n      dup8\n        /* \"#utility.yul\":471:494   */\n      sub\n        /* \"#utility.yul\":467:500   */\n      slt\n        /* \"#utility.yul\":464:517   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":513:514   */\n      0x00\n        /* \"#utility.yul\":510:511   */\n      dup1\n        /* \"#utility.yul\":503:515   */\n      revert\n        /* \"#utility.yul\":464:517   */\n    tag_18:\n        /* \"#utility.yul\":536:565   */\n      tag_19\n        /* \"#utility.yul\":555:564   */\n      dup6\n        /* \"#utility.yul\":536:565   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":526:565   */\n      swap4\n      pop\n        /* \"#utility.yul\":584:622   */\n      tag_20\n        /* \"#utility.yul\":618:620   */\n      0x20\n        /* \"#utility.yul\":607:616   */\n      dup7\n        /* \"#utility.yul\":603:621   */\n      add\n        /* \"#utility.yul\":584:622   */\n      tag_11\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":574:622   */\n      swap3\n      pop\n        /* \"#utility.yul\":669:671   */\n      0x40\n        /* \"#utility.yul\":658:667   */\n      dup6\n        /* \"#utility.yul\":654:672   */\n      add\n        /* \"#utility.yul\":641:673   */\n      calldataload\n        /* \"#utility.yul\":631:673   */\n      swap2\n      pop\n        /* \"#utility.yul\":724:726   */\n      0x60\n        /* \"#utility.yul\":713:722   */\n      dup6\n        /* \"#utility.yul\":709:727   */\n      add\n        /* \"#utility.yul\":696:728   */\n      calldataload\n        /* \"#utility.yul\":747:765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":788:790   */\n      dup1\n        /* \"#utility.yul\":780:786   */\n      dup3\n        /* \"#utility.yul\":777:791   */\n      gt\n        /* \"#utility.yul\":774:808   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":801:802   */\n      dup1\n        /* \"#utility.yul\":794:806   */\n      revert\n        /* \"#utility.yul\":774:808   */\n    tag_21:\n        /* \"#utility.yul\":842:848   */\n      dup2\n        /* \"#utility.yul\":831:840   */\n      dup8\n        /* \"#utility.yul\":827:849   */\n      add\n        /* \"#utility.yul\":817:849   */\n      swap2\n      pop\n        /* \"#utility.yul\":887:894   */\n      dup8\n        /* \"#utility.yul\":880:884   */\n      0x1f\n        /* \"#utility.yul\":876:878   */\n      dup4\n        /* \"#utility.yul\":872:885   */\n      add\n        /* \"#utility.yul\":868:895   */\n      slt\n        /* \"#utility.yul\":858:913   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":858:913   */\n    tag_22:\n        /* \"#utility.yul\":945:947   */\n      dup2\n        /* \"#utility.yul\":932:948   */\n      calldataload\n        /* \"#utility.yul\":967:969   */\n      dup2\n        /* \"#utility.yul\":963:965   */\n      dup2\n        /* \"#utility.yul\":960:970   */\n      gt\n        /* \"#utility.yul\":957:993   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":973:991   */\n      tag_24\n      tag_12\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":1048:1050   */\n      0x40\n        /* \"#utility.yul\":1042:1051   */\n      mload\n        /* \"#utility.yul\":1016:1018   */\n      0x1f\n        /* \"#utility.yul\":1102:1115   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1098:1120   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1122:1124   */\n      0x3f\n        /* \"#utility.yul\":1094:1125   */\n      add\n        /* \"#utility.yul\":1090:1130   */\n      and\n        /* \"#utility.yul\":1078:1131   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1146:1164   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1166:1188   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1143:1189   */\n      or\n        /* \"#utility.yul\":1140:1212   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":1192:1210   */\n      tag_26\n      tag_12\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":1232:1242   */\n      dup2\n        /* \"#utility.yul\":1228:1230   */\n      0x40\n        /* \"#utility.yul\":1221:1243   */\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      dup3\n        /* \"#utility.yul\":1259:1265   */\n      dup2\n        /* \"#utility.yul\":1252:1270   */\n      mstore\n        /* \"#utility.yul\":1307:1314   */\n      dup11\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1297:1299   */\n      dup5\n        /* \"#utility.yul\":1293:1295   */\n      dup8\n        /* \"#utility.yul\":1289:1300   */\n      add\n        /* \"#utility.yul\":1285:1305   */\n      add\n        /* \"#utility.yul\":1282:1315   */\n      gt\n        /* \"#utility.yul\":1279:1332   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1279:1332   */\n    tag_27:\n        /* \"#utility.yul\":1384:1386   */\n      dup3\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1375:1377   */\n      dup7\n        /* \"#utility.yul\":1371:1382   */\n      add\n        /* \"#utility.yul\":1366:1368   */\n      0x20\n        /* \"#utility.yul\":1358:1364   */\n      dup4\n        /* \"#utility.yul\":1354:1369   */\n      add\n        /* \"#utility.yul\":1341:1387   */\n      calldatacopy\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1424:1426   */\n      0x20\n        /* \"#utility.yul\":1419:1421   */\n      dup5\n        /* \"#utility.yul\":1411:1417   */\n      dup4\n        /* \"#utility.yul\":1407:1422   */\n      add\n        /* \"#utility.yul\":1403:1427   */\n      add\n        /* \"#utility.yul\":1396:1431   */\n      mstore\n        /* \"#utility.yul\":1450:1456   */\n      dup1\n        /* \"#utility.yul\":1440:1456   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":324:1462   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC9 0x2C 0xA8 0xEA EQ 0xEB DUP4 PUSH5 0xD6C186F3B5 EQ LOG1 0xCB 0xC3 0xDF SWAP2 JUMPDEST NOT AND SSTORE CALL 0xB9 PUSH4 0x616AE5E8 PUSH18 0x64736F6C6343000811003300000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1671:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "248:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "253:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "244:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "234:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "284:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "305:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "192:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1008:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "501:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "513:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "503:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "503:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "503:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "475:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "471:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "471:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:33:9"
															},
															"nodeType": "YulIf",
															"src": "464:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "526:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "536:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "574:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "607:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "618:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "584:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "631:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "658:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "669:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "641:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "682:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "713:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "724:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "709:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "709:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "696:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "686:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "737:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "747:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "741:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "788:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "777:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:14:9"
															},
															"nodeType": "YulIf",
															"src": "774:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "821:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "876:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "880:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "872:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "872:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "887:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:35:9"
															},
															"nodeType": "YulIf",
															"src": "858:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "945:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "926:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "971:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "973:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "973:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "973:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "963:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "967:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:10:9"
															},
															"nodeType": "YulIf",
															"src": "957:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1016:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1006:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1028:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1032:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1060:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1082:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1106:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1110:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1102:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1102:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1117:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1098:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1098:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1094:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1094:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1127:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1090:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1064:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1190:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1192:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1192:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1149:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1161:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1146:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1169:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1166:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1143:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:46:9"
															},
															"nodeType": "YulIf",
															"src": "1140:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1228:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1232:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1221:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1267:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1293:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1297:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1289:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1289:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1285:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1307:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1282:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:33:9"
															},
															"nodeType": "YulIf",
															"src": "1279:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1366:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1375:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1384:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1341:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1411:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1419:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1407:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1407:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1396:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1440:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1450:6:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:9",
														"type": ""
													}
												],
												"src": "324:1138:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:103:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1576:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1618:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1645:3:9",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1650:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1641:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1641:20:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:33:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:52:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1546:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1557:4:9",
														"type": ""
													}
												],
												"src": "1467:202:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC9 0x2C 0xA8 0xEA EQ 0xEB DUP4 PUSH5 0xD6C186F3B5 EQ LOG1 0xCB 0xC3 0xDF SWAP2 JUMPDEST NOT AND SSTORE CALL 0xB9 PUSH4 0x616AE5E8 PUSH18 0x64736F6C6343000811003300000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;:::i;:::-;-1:-1:-1;;;588:200:4;;;;;;;;;;-1:-1:-1;;;;;;1629:33:9;;;1611:52;;1599:2;1584:18;588:200:4;;;;;;;14:173:9;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:1138;419:6;427;435;443;496:3;484:9;475:7;471:23;467:33;464:53;;;513:1;510;503:12;464:53;536:29;555:9;536:29;:::i;:::-;526:39;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;;669:2;658:9;654:18;641:32;631:42;;724:2;713:9;709:18;696:32;747:18;788:2;780:6;777:14;774:34;;;804:1;801;794:12;774:34;842:6;831:9;827:22;817:32;;887:7;880:4;876:2;872:13;868:27;858:55;;909:1;906;899:12;858:55;945:2;932:16;967:2;963;960:10;957:36;;;973:18;;:::i;:::-;1048:2;1042:9;1016:2;1102:13;;-1:-1:-1;;1098:22:9;;;1122:2;1094:31;1090:40;1078:53;;;1146:18;;;1166:22;;;1143:46;1140:72;;;1192:18;;:::i;:::-;1232:10;1228:2;1221:22;1267:2;1259:6;1252:18;1307:7;1302:2;1297;1293;1289:11;1285:20;1282:33;1279:53;;;1328:1;1325;1318:12;1279:53;1384:2;1379;1375;1371:11;1366:2;1358:6;1354:15;1341:46;1429:1;1424:2;1419;1411:6;1407:15;1403:24;1396:35;1450:6;1440:16;;;;;;;324:1138;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86200",
								"executionCost": "135",
								"totalCost": "86335"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 192,
											"end": 319,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 288,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 313,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 493,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 471,
											"end": 494,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 467,
											"end": 500,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 515,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 555,
											"end": 564,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 565,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 526,
											"end": 565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 603,
											"end": 621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 574,
											"end": 622,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 574,
											"end": 622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 654,
											"end": 672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 673,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 631,
											"end": 673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 713,
											"end": 722,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 709,
											"end": 727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 765,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 791,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 794,
											"end": 806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 831,
											"end": 840,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 827,
											"end": 849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 894,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 880,
											"end": 884,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 876,
											"end": 878,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 872,
											"end": 885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 895,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 858,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 858,
											"end": 913,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 945,
											"end": 947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 948,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 967,
											"end": 969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 960,
											"end": 970,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 957,
											"end": 993,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 957,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 973,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 973,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1094,
											"end": 1125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1192,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1315,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1387,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG1 PUSH19 0x5F6D9979A66EDA26B644C16D560CA564565EE7 0xB8 CODECOPY LOG0 MLOAD 0xBE SWAP10 0x5E 0xA8 SWAP6 PUSH27 0x64736F6C6343000811003300000000000000000000000000000000 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG1 PUSH19 0x5F6D9979A66EDA26B644C16D560CA564565EE7 0xB8 CODECOPY LOG0 MLOAD 0xBE SWAP10 0x5E 0xA8 SWAP6 PUSH27 0x64736F6C6343000811003300000000000000000000000000000000 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"INFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"INFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0x2f00378a699ba9b643df764558707f31b8e929a413c899f703150539c9bb177a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ad8861f0d9008ba8734692ca0c099e6f8cbad954fe1fbc3b574fa133f84444e\",\"dweb:/ipfs/QmUJwy3oKtotAfki6GhpgCaaXQgskPkHwqMrFEC8PiQUZH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getTokensStakedByUser",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":492:3301  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":999:1078  constructor (address nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/NFTStaking.sol\":1044:1056  _nftContract */\n  0x02\n    /* \"contracts/NFTStaking.sol\":1044:1071  _nftContract = nftContract_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/NFTStaking.sol\":492:3301  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/NFTStaking.sol\":492:3301  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":492:3301  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd3ea4350\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf301af42\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x55ed9d53\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x89885a59\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTStaking.sol\":2921:2938  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/NFTStaking.sol\":2952:2953  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2921:2953  _stakedNFTCounter.current() != 0 */\n      sub\n        /* \"contracts/NFTStaking.sol\":2913:2976  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":2913:2976  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x12\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x72, 0x139bc81391951cc8185c99481cdd185ad959)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:315   */\n      mstore\n        /* \"#utility.yul\":332:350   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":2913:2976  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/NFTStaking.sol\":2986:3006  uint256 sharePerEach */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3021:3048  _stakedNFTCounter.current() */\n      tag_23\n        /* \"contracts/NFTStaking.sol\":3021:3038  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/NFTStaking.sol\":3021:3048  _stakedNFTCounter.current() */\n    tag_23:\n        /* \"contracts/NFTStaking.sol\":3009:3048  msg.value / _stakedNFTCounter.current() */\n      tag_24\n      swap1\n        /* \"contracts/NFTStaking.sol\":3009:3018  msg.value */\n      callvalue\n        /* \"contracts/NFTStaking.sol\":3009:3048  msg.value / _stakedNFTCounter.current() */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"contracts/NFTStaking.sol\":3095:3107  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":3090:3137  INFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      shl(0xe8, 0x438b63)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":3131:3135  this */\n      address\n        /* \"contracts/NFTStaking.sol\":3090:3137  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":861:912   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":2986:3048  uint256 sharePerEach = msg.value / _stakedNFTCounter.current() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/NFTStaking.sol\":3058:3087  uint256[] memory tokensStaked */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":3095:3107  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":3090:3122  INFT(_nftContract).walletOfOwner */\n      0x438b6300\n      swap1\n        /* \"#utility.yul\":834:852   */\n      0x24\n      add\n        /* \"contracts/NFTStaking.sol\":3090:3137  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_30\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"contracts/NFTStaking.sol\":3058:3137  uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":3160:3169  uint256 i */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3156:3293  for(uint256 i = 0; i < tokensStaked.length;){... */\n    tag_32:\n        /* \"contracts/NFTStaking.sol\":3179:3191  tokensStaked */\n      dup2\n        /* \"contracts/NFTStaking.sol\":3179:3198  tokensStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":3175:3176  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":3175:3198  i < tokensStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":3156:3293  for(uint256 i = 0; i < tokensStaked.length;){... */\n      iszero\n      tag_33\n      jumpi\n        /* \"contracts/NFTStaking.sol\":3241:3253  sharePerEach */\n      dup3\n        /* \"contracts/NFTStaking.sol\":3214:3221  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":3214:3237  rewards[tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":3222:3233  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":3234:3235  i */\n      dup5\n        /* \"contracts/NFTStaking.sol\":3222:3236  tokenStaked[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":3214:3237  rewards[tokenStaked[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":3214:3253  rewards[tokenStaked[i]] += sharePerEach */\n      dup3\n      dup3\n      sload\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":3278:3281  ++i */\n      0x01\n      add\n        /* \"contracts/NFTStaking.sol\":3156:3293  for(uint256 i = 0; i < tokensStaked.length;){... */\n      jump(tag_32)\n    tag_33:\n      stop\n        /* \"contracts/NFTStaking.sol\":492:3301  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_42:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3863:3896   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3845:3897   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3833:3835   */\n      0x20\n        /* \"#utility.yul\":3818:3836   */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_33\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_33\n      tag_55\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":2329:2870  function getTokensStakedByUser(address user) public view returns(uint[] memory){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_33\n      tag_66\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnerOf */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_68:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":879:911   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":861:912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":849:851   */\n      0x20\n        /* \"#utility.yul\":834:852   */\n      add\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnerOf */\n      tag_46\n        /* \"#utility.yul\":715:918   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_68)\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_33\n      tag_78\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_82:\n        /* \"contracts/NFTStaking.sol\":2275:2282  uint256 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2300:2307  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n      jump\n    tag_81:\n      mload(0x40)\n        /* \"#utility.yul\":5067:5092   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5055:5057   */\n      0x20\n        /* \"#utility.yul\":5040:5058   */\n      add\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n      tag_46\n        /* \"#utility.yul\":4921:5098   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_33\n      tag_88\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":922:965  mapping (uint256 => uint256) public rewards */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_81\n      tag_92\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_92:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_33\n      tag_97\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5287:5308   */\n      mstore\n        /* \"#utility.yul\":5344:5346   */\n      0x1f\n        /* \"#utility.yul\":5324:5342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5317:5347   */\n      mstore\n        /* \"#utility.yul\":5383:5416   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5363:5381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5356:5417   */\n      mstore\n        /* \"#utility.yul\":5434:5452   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_21\n        /* \"#utility.yul\":5103:5458   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_102:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnerOf[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1528:1540  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnerOf[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/NFTStaking.sol\":1553:1563  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1528:1563  tokenOwnerOf[tokenId] == msg.sender */\n      eq\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5665:5667   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5647:5668   */\n      mstore\n        /* \"#utility.yul\":5704:5706   */\n      0x16\n        /* \"#utility.yul\":5684:5702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5677:5707   */\n      mstore\n      shl(0x51, 0x2cb7ba9030b932903737ba103a34329037bbb732b917)\n        /* \"#utility.yul\":5723:5741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5716:5768   */\n      mstore\n        /* \"#utility.yul\":5785:5803   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_21\n        /* \"#utility.yul\":5463:5809   */\n      jump\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n    tag_106:\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnerOf[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1607:1619  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnerOf[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1600:1628  delete tokenOwnerOf[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      tag_109\n        /* \"contracts/NFTStaking.sol\":1638:1655  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1638:1665  _stakedNFTCounter.decrement */\n      tag_110\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnerOf[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1704:1716  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnerOf[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1739:1746  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnerOf[tokenId] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      dup6\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnerOf[tokenId] */\n      dup8\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_115\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_114)\n    tag_115:\n      0x60\n      swap2\n      pop\n    tag_114:\n      pop\n        /* \"contracts/NFTStaking.sol\":1677:1760  (bool success, ) = payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1778:1785  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1770:1786  require(success) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1803:1810  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1796:1819  delete rewards[tokenId] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/NFTStaking.sol\":1837:1849  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      swap1\n      mload\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1876:1880  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6264:6298   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":1883:1893  msg.sender */\n      caller\n        /* \"#utility.yul\":6314:6332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6307:6350   */\n      mstore\n        /* \"#utility.yul\":6366:6384   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6359:6393   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1837:1849  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":1829:1867  IERC721(_nftContract).safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":6199:6217   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5287:5308   */\n      mstore\n        /* \"#utility.yul\":5344:5346   */\n      0x1f\n        /* \"#utility.yul\":5324:5342   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5317:5347   */\n      mstore\n        /* \"#utility.yul\":5383:5416   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":5363:5381   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5356:5417   */\n      mstore\n        /* \"#utility.yul\":5434:5452   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_21\n        /* \"#utility.yul\":5103:5458   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_123:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnerOf[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1988:2000  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnerOf[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/NFTStaking.sol\":2013:2023  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1988:2023  tokenOwnerOf[tokenId] == msg.sender */\n      eq\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5665:5667   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5647:5668   */\n      mstore\n        /* \"#utility.yul\":5704:5706   */\n      0x16\n        /* \"#utility.yul\":5684:5702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5677:5707   */\n      mstore\n      shl(0x51, 0x2cb7ba9030b932903737ba103a34329037bbb732b917)\n        /* \"#utility.yul\":5723:5741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5716:5768   */\n      mstore\n        /* \"#utility.yul\":5785:5803   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_21\n        /* \"#utility.yul\":5463:5809   */\n      jump\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnerOf[tokenId] == msg.sender, \"You are not the owner.\") */\n    tag_126:\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnerOf[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2087:2099  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnerOf[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2122:2129  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnerOf[tokenId] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnerOf[tokenId] */\n      dup8\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_131\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_130)\n    tag_131:\n      0x60\n      swap2\n      pop\n    tag_130:\n      pop\n        /* \"contracts/NFTStaking.sol\":2060:2143  (bool success, ) = payable(tokenOwnerOf[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2161:2168  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2153:2169  require(success) */\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n        /* \"contracts/NFTStaking.sol\":2198:2199  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2179:2186  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2179:2199  rewards[tokenId] = 0 */\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":2329:2870  function getTokensStakedByUser(address user) public view returns(uint[] memory){... */\n    tag_61:\n        /* \"contracts/NFTStaking.sol\":2455:2467  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":2450:2497  INFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      shl(0xe8, 0x438b63)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2491:2495  this */\n      address\n        /* \"contracts/NFTStaking.sol\":2450:2497  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":861:912   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":2394:2407  uint[] memory */\n      0x60\n      swap2\n        /* \"contracts/NFTStaking.sol\":2418:2447  uint256[] memory _tokenStaked */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":2455:2467  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":2450:2482  INFT(_nftContract).walletOfOwner */\n      0x438b6300\n      swap1\n        /* \"#utility.yul\":834:852   */\n      0x24\n      add\n        /* \"contracts/NFTStaking.sol\":2450:2497  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_137\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_31\n      jump\t// in\n    tag_137:\n        /* \"contracts/NFTStaking.sol\":2418:2497  uint256[] memory _tokenStaked = INFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2507:2540  uint256[] memory tokenOwnerOfUser */\n      0x60\n        /* \"contracts/NFTStaking.sol\":2550:2570  uint256 currentIndex */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2590:2596  uint i */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2585:2830  for (uint i; i < _tokenStaked.length;){... */\n    tag_138:\n        /* \"contracts/NFTStaking.sol\":2602:2614  _tokenStaked */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2602:2621  _tokenStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":2598:2599  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2598:2621  i < _tokenStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":2585:2830  for (uint i; i < _tokenStaked.length;){... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2648:2660  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":2648:2677  tokenOwnerOf[_tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2661:2673  _tokenStaked */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2674:2675  i */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2661:2676  _tokenStaked[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_142\n      tag_37\n      jump\t// in\n    tag_142:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/NFTStaking.sol\":2648:2677  tokenOwnerOf[_tokenStaked[i]] */\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/NFTStaking.sol\":2640:2677  user == tokenOwnerOf[_tokenStaked[i]] */\n      swap1\n      dup8\n      and\n      sub\n        /* \"contracts/NFTStaking.sol\":2637:2791  if(user == tokenOwnerOf[_tokenStaked[i]]){... */\n      tag_143\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2729:2741  _tokenStaked */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2742:2743  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2729:2744  _tokenStaked[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_37\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/NFTStaking.sol\":2696:2712  tokenOwnerOfUser */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2713:2725  currentIndex */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2696:2726  tokenOwnerOfUser[currentIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_37\n      jump\t// in\n    tag_147:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/NFTStaking.sol\":2696:2744  tokenOwnerOfUser[currentIndex] = _tokenStaked[i] */\n      mstore\n        /* \"contracts/NFTStaking.sol\":2762:2776  currentIndex++ */\n      dup2\n      tag_148\n      dup2\n      tag_149\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":2637:2791  if(user == tokenOwnerOf[_tokenStaked[i]]){... */\n    tag_143:\n        /* \"contracts/NFTStaking.sol\":2815:2818  ++i */\n      0x01\n      add\n        /* \"contracts/NFTStaking.sol\":2585:2830  for (uint i; i < _tokenStaked.length;){... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"contracts/NFTStaking.sol\":2847:2863  tokenOwnerOfUser */\n      swap1\n      swap5\n        /* \"contracts/NFTStaking.sol\":2329:2870  function getTokensStakedByUser(address user) public view returns(uint[] memory){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_154\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_79:\n        /* \"contracts/NFTStaking.sol\":1257:1269  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1288:1298  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6264:6298   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":1308:1312  this */\n      address\n        /* \"#utility.yul\":6314:6332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6307:6350   */\n      mstore\n        /* \"#utility.yul\":6366:6384   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6359:6393   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1257:1269  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":1249:1287  IERC721(_nftContract).safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":6199:6217   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnerOf[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1333:1345  tokenOwnerOf */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnerOf[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnerOf[tokenId] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/NFTStaking.sol\":1357:1367  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnerOf[tokenId] = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1377:1388  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":1377:1402  tokenStaked.push(tokenId) */\n      dup1\n      sload\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnerOf[tokenId] = msg.sender */\n      0x01\n        /* \"contracts/NFTStaking.sol\":1377:1402  tokenStaked.push(tokenId) */\n      dup2\n      add\n      dup3\n      sstore\n      swap2\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup3\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n      tag_163\n        /* \"contracts/NFTStaking.sol\":1412:1429  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n    tag_163:\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_167\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6746:6748   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6728:6749   */\n      mstore\n        /* \"#utility.yul\":6785:6787   */\n      0x26\n        /* \"#utility.yul\":6765:6783   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6758:6788   */\n      mstore\n        /* \"#utility.yul\":6824:6858   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6804:6822   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6797:6859   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6875:6893   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6868:6904   */\n      mstore\n        /* \"#utility.yul\":6921:6940   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_21\n        /* \"#utility.yul\":6544:6946   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_169:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_163\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_152\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTStaking.sol\":1158:1170  _nftContract */\n      0x02\n        /* \"contracts/NFTStaking.sol\":1158:1185  _nftContract = nftContract_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7153:7155   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7135:7156   */\n      mstore\n        /* \"#utility.yul\":7192:7194   */\n      0x1b\n        /* \"#utility.yul\":7172:7190   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7165:7195   */\n      mstore\n        /* \"#utility.yul\":7231:7260   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":7211:7229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7204:7261   */\n      mstore\n        /* \"#utility.yul\":7278:7296   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_21\n        /* \"#utility.yul\":6951:7302   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_177:\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7509:7511   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7491:7512   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7528:7546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7521:7551   */\n      mstore\n        /* \"#utility.yul\":7587:7621   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7567:7585   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7560:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7657   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_21\n        /* \"#utility.yul\":7307:7663   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":361:488   */\n    tag_190:\n        /* \"#utility.yul\":422:432   */\n      0x4e487b71\n        /* \"#utility.yul\":417:420   */\n      0xe0\n        /* \"#utility.yul\":413:433   */\n      shl\n        /* \"#utility.yul\":410:411   */\n      0x00\n        /* \"#utility.yul\":403:434   */\n      mstore\n        /* \"#utility.yul\":453:457   */\n      0x11\n        /* \"#utility.yul\":450:451   */\n      0x04\n        /* \"#utility.yul\":443:458   */\n      mstore\n        /* \"#utility.yul\":477:481   */\n      0x24\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":467:482   */\n      revert\n        /* \"#utility.yul\":493:710   */\n    tag_25:\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":559:560   */\n      dup3\n        /* \"#utility.yul\":549:681   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":603:613   */\n      0x4e487b71\n        /* \"#utility.yul\":598:601   */\n      0xe0\n        /* \"#utility.yul\":594:614   */\n      shl\n        /* \"#utility.yul\":591:592   */\n      0x00\n        /* \"#utility.yul\":584:615   */\n      mstore\n        /* \"#utility.yul\":638:642   */\n      0x12\n        /* \"#utility.yul\":635:636   */\n      0x04\n        /* \"#utility.yul\":628:643   */\n      mstore\n        /* \"#utility.yul\":666:670   */\n      0x24\n        /* \"#utility.yul\":663:664   */\n      0x00\n        /* \"#utility.yul\":656:671   */\n      revert\n        /* \"#utility.yul\":549:681   */\n    tag_198:\n      pop\n        /* \"#utility.yul\":695:704   */\n      div\n      swap1\n        /* \"#utility.yul\":493:710   */\n      jump\t// out\n        /* \"#utility.yul\":923:1050   */\n    tag_191:\n        /* \"#utility.yul\":984:994   */\n      0x4e487b71\n        /* \"#utility.yul\":979:982   */\n      0xe0\n        /* \"#utility.yul\":975:995   */\n      shl\n        /* \"#utility.yul\":972:973   */\n      0x00\n        /* \"#utility.yul\":965:996   */\n      mstore\n        /* \"#utility.yul\":1015:1019   */\n      0x41\n        /* \"#utility.yul\":1012:1013   */\n      0x04\n        /* \"#utility.yul\":1005:1020   */\n      mstore\n        /* \"#utility.yul\":1039:1043   */\n      0x24\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1029:1044   */\n      revert\n        /* \"#utility.yul\":1055:1330   */\n    tag_192:\n        /* \"#utility.yul\":1126:1128   */\n      0x40\n        /* \"#utility.yul\":1120:1129   */\n      mload\n        /* \"#utility.yul\":1191:1193   */\n      0x1f\n        /* \"#utility.yul\":1172:1185   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1168:1195   */\n      and\n        /* \"#utility.yul\":1156:1196   */\n      dup2\n      add\n        /* \"#utility.yul\":1226:1244   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1211:1245   */\n      dup2\n      gt\n        /* \"#utility.yul\":1247:1269   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1208:1270   */\n      or\n        /* \"#utility.yul\":1205:1293   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1273:1291   */\n      tag_203\n      tag_191\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1309:1311   */\n      0x40\n        /* \"#utility.yul\":1302:1324   */\n      mstore\n        /* \"#utility.yul\":1055:1330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1335:2271   */\n    tag_31:\n        /* \"#utility.yul\":1430:1436   */\n      0x00\n        /* \"#utility.yul\":1461:1463   */\n      0x20\n        /* \"#utility.yul\":1504:1506   */\n      dup1\n        /* \"#utility.yul\":1492:1501   */\n      dup4\n        /* \"#utility.yul\":1483:1490   */\n      dup6\n        /* \"#utility.yul\":1479:1502   */\n      sub\n        /* \"#utility.yul\":1475:1507   */\n      slt\n        /* \"#utility.yul\":1472:1524   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":1520:1521   */\n      0x00\n        /* \"#utility.yul\":1517:1518   */\n      dup1\n        /* \"#utility.yul\":1510:1522   */\n      revert\n        /* \"#utility.yul\":1472:1524   */\n    tag_205:\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1547:1563   */\n      mload\n        /* \"#utility.yul\":1582:1600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1623:1625   */\n      dup1\n        /* \"#utility.yul\":1615:1621   */\n      dup3\n        /* \"#utility.yul\":1612:1626   */\n      gt\n        /* \"#utility.yul\":1609:1643   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1639:1640   */\n      0x00\n        /* \"#utility.yul\":1636:1637   */\n      dup1\n        /* \"#utility.yul\":1629:1641   */\n      revert\n        /* \"#utility.yul\":1609:1643   */\n    tag_206:\n        /* \"#utility.yul\":1677:1683   */\n      dup2\n        /* \"#utility.yul\":1666:1675   */\n      dup6\n        /* \"#utility.yul\":1662:1684   */\n      add\n        /* \"#utility.yul\":1652:1684   */\n      swap2\n      pop\n        /* \"#utility.yul\":1722:1729   */\n      dup6\n        /* \"#utility.yul\":1715:1719   */\n      0x1f\n        /* \"#utility.yul\":1711:1713   */\n      dup4\n        /* \"#utility.yul\":1707:1720   */\n      add\n        /* \"#utility.yul\":1703:1730   */\n      slt\n        /* \"#utility.yul\":1693:1748   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1741:1742   */\n      dup1\n        /* \"#utility.yul\":1734:1746   */\n      revert\n        /* \"#utility.yul\":1693:1748   */\n    tag_207:\n        /* \"#utility.yul\":1773:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1776   */\n      mload\n        /* \"#utility.yul\":1795:1797   */\n      dup2\n        /* \"#utility.yul\":1791:1793   */\n      dup2\n        /* \"#utility.yul\":1788:1798   */\n      gt\n        /* \"#utility.yul\":1785:1821   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1801:1819   */\n      tag_209\n      tag_191\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1847:1849   */\n      dup1\n        /* \"#utility.yul\":1844:1845   */\n      0x05\n        /* \"#utility.yul\":1840:1850   */\n      shl\n        /* \"#utility.yul\":1830:1850   */\n      swap2\n      pop\n        /* \"#utility.yul\":1870:1898   */\n      tag_210\n        /* \"#utility.yul\":1894:1896   */\n      dup5\n        /* \"#utility.yul\":1890:1892   */\n      dup4\n        /* \"#utility.yul\":1886:1897   */\n      add\n        /* \"#utility.yul\":1870:1898   */\n      tag_192\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1932:1947   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2002:2013   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1998:2018   */\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1963:1975   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2030:2049   */\n      dup9\n      dup5\n      gt\n        /* \"#utility.yul\":2027:2066   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2059:2060   */\n      dup1\n        /* \"#utility.yul\":2052:2064   */\n      revert\n        /* \"#utility.yul\":2027:2066   */\n    tag_211:\n        /* \"#utility.yul\":2086:2097   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2106:2241   */\n    tag_212:\n        /* \"#utility.yul\":2122:2128   */\n      dup4\n        /* \"#utility.yul\":2117:2120   */\n      dup6\n        /* \"#utility.yul\":2114:2129   */\n      lt\n        /* \"#utility.yul\":2106:2241   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2188:2198   */\n      dup5\n      mload\n        /* \"#utility.yul\":2176:2199   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2139:2151   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2219:2231   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2106:2241   */\n      jump(tag_212)\n    tag_214:\n        /* \"#utility.yul\":2260:2265   */\n      swap9\n        /* \"#utility.yul\":1335:2271   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2276:2403   */\n    tag_37:\n        /* \"#utility.yul\":2337:2347   */\n      0x4e487b71\n        /* \"#utility.yul\":2332:2335   */\n      0xe0\n        /* \"#utility.yul\":2328:2348   */\n      shl\n        /* \"#utility.yul\":2325:2326   */\n      0x00\n        /* \"#utility.yul\":2318:2349   */\n      mstore\n        /* \"#utility.yul\":2368:2372   */\n      0x32\n        /* \"#utility.yul\":2365:2366   */\n      0x04\n        /* \"#utility.yul\":2358:2373   */\n      mstore\n        /* \"#utility.yul\":2392:2396   */\n      0x24\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2382:2397   */\n      revert\n        /* \"#utility.yul\":2408:2533   */\n    tag_40:\n        /* \"#utility.yul\":2473:2482   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2494:2504   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2491:2527   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2507:2525   */\n      tag_218\n      tag_190\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2408:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2538:2711   */\n    tag_193:\n        /* \"#utility.yul\":2606:2626   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2655:2686   */\n      dup2\n      and\n        /* \"#utility.yul\":2645:2687   */\n      dup2\n      eq\n        /* \"#utility.yul\":2635:2705   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2698:2699   */\n      dup1\n        /* \"#utility.yul\":2691:2703   */\n      revert\n        /* \"#utility.yul\":2635:2705   */\n    tag_220:\n        /* \"#utility.yul\":2538:2711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3696   */\n    tag_44:\n        /* \"#utility.yul\":2811:2817   */\n      0x00\n        /* \"#utility.yul\":2819:2825   */\n      dup1\n        /* \"#utility.yul\":2827:2833   */\n      0x00\n        /* \"#utility.yul\":2835:2841   */\n      dup1\n        /* \"#utility.yul\":2888:2891   */\n      0x80\n        /* \"#utility.yul\":2876:2885   */\n      dup6\n        /* \"#utility.yul\":2867:2874   */\n      dup8\n        /* \"#utility.yul\":2863:2886   */\n      sub\n        /* \"#utility.yul\":2859:2892   */\n      slt\n        /* \"#utility.yul\":2856:2909   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2905:2906   */\n      0x00\n        /* \"#utility.yul\":2902:2903   */\n      dup1\n        /* \"#utility.yul\":2895:2907   */\n      revert\n        /* \"#utility.yul\":2856:2909   */\n    tag_222:\n        /* \"#utility.yul\":2928:2957   */\n      tag_223\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2928:2957   */\n      tag_193\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2918:2957   */\n      swap4\n      pop\n        /* \"#utility.yul\":2976:2978   */\n      0x20\n        /* \"#utility.yul\":2997:3035   */\n      tag_224\n        /* \"#utility.yul\":3031:3033   */\n      dup2\n        /* \"#utility.yul\":3020:3029   */\n      dup8\n        /* \"#utility.yul\":3016:3034   */\n      add\n        /* \"#utility.yul\":2997:3035   */\n      tag_193\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2987:3035   */\n      swap4\n      pop\n        /* \"#utility.yul\":3082:3084   */\n      0x40\n        /* \"#utility.yul\":3071:3080   */\n      dup7\n        /* \"#utility.yul\":3067:3085   */\n      add\n        /* \"#utility.yul\":3054:3086   */\n      calldataload\n        /* \"#utility.yul\":3044:3086   */\n      swap3\n      pop\n        /* \"#utility.yul\":3137:3139   */\n      0x60\n        /* \"#utility.yul\":3126:3135   */\n      dup7\n        /* \"#utility.yul\":3122:3140   */\n      add\n        /* \"#utility.yul\":3109:3141   */\n      calldataload\n        /* \"#utility.yul\":3160:3178   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3201:3203   */\n      dup1\n        /* \"#utility.yul\":3193:3199   */\n      dup3\n        /* \"#utility.yul\":3190:3204   */\n      gt\n        /* \"#utility.yul\":3187:3221   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3217:3218   */\n      0x00\n        /* \"#utility.yul\":3214:3215   */\n      dup1\n        /* \"#utility.yul\":3207:3219   */\n      revert\n        /* \"#utility.yul\":3187:3221   */\n    tag_225:\n        /* \"#utility.yul\":3255:3261   */\n      dup2\n        /* \"#utility.yul\":3244:3253   */\n      dup9\n        /* \"#utility.yul\":3240:3262   */\n      add\n        /* \"#utility.yul\":3230:3262   */\n      swap2\n      pop\n        /* \"#utility.yul\":3300:3307   */\n      dup9\n        /* \"#utility.yul\":3293:3297   */\n      0x1f\n        /* \"#utility.yul\":3289:3291   */\n      dup4\n        /* \"#utility.yul\":3285:3298   */\n      add\n        /* \"#utility.yul\":3281:3308   */\n      slt\n        /* \"#utility.yul\":3271:3326   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3271:3326   */\n    tag_226:\n        /* \"#utility.yul\":3358:3360   */\n      dup2\n        /* \"#utility.yul\":3345:3361   */\n      calldataload\n        /* \"#utility.yul\":3380:3382   */\n      dup2\n        /* \"#utility.yul\":3376:3378   */\n      dup2\n        /* \"#utility.yul\":3373:3383   */\n      gt\n        /* \"#utility.yul\":3370:3406   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":3386:3404   */\n      tag_228\n      tag_191\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3428:3481   */\n      tag_229\n        /* \"#utility.yul\":3471:3473   */\n      0x1f\n        /* \"#utility.yul\":3452:3465   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3448:3475   */\n      and\n        /* \"#utility.yul\":3444:3480   */\n      dup6\n      add\n        /* \"#utility.yul\":3428:3481   */\n      tag_192\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3415:3481   */\n      swap2\n      pop\n        /* \"#utility.yul\":3504:3506   */\n      dup1\n        /* \"#utility.yul\":3497:3502   */\n      dup3\n        /* \"#utility.yul\":3490:3507   */\n      mstore\n        /* \"#utility.yul\":3544:3551   */\n      dup10\n        /* \"#utility.yul\":3539:3541   */\n      dup5\n        /* \"#utility.yul\":3534:3536   */\n      dup3\n        /* \"#utility.yul\":3530:3532   */\n      dup6\n        /* \"#utility.yul\":3526:3537   */\n      add\n        /* \"#utility.yul\":3522:3542   */\n      add\n        /* \"#utility.yul\":3519:3552   */\n      gt\n        /* \"#utility.yul\":3516:3569   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3565:3566   */\n      0x00\n        /* \"#utility.yul\":3562:3563   */\n      dup1\n        /* \"#utility.yul\":3555:3567   */\n      revert\n        /* \"#utility.yul\":3516:3569   */\n    tag_230:\n        /* \"#utility.yul\":3620:3622   */\n      dup1\n        /* \"#utility.yul\":3615:3617   */\n      dup5\n        /* \"#utility.yul\":3611:3613   */\n      dup5\n        /* \"#utility.yul\":3607:3618   */\n      add\n        /* \"#utility.yul\":3602:3604   */\n      dup6\n        /* \"#utility.yul\":3595:3600   */\n      dup5\n        /* \"#utility.yul\":3591:3605   */\n      add\n        /* \"#utility.yul\":3578:3623   */\n      calldatacopy\n        /* \"#utility.yul\":3664:3665   */\n      0x00\n        /* \"#utility.yul\":3659:3661   */\n      dup5\n        /* \"#utility.yul\":3654:3656   */\n      dup3\n        /* \"#utility.yul\":3647:3652   */\n      dup5\n        /* \"#utility.yul\":3643:3657   */\n      add\n        /* \"#utility.yul\":3639:3662   */\n      add\n        /* \"#utility.yul\":3632:3666   */\n      mstore\n      pop\n        /* \"#utility.yul\":3685:3690   */\n      dup1\n        /* \"#utility.yul\":3675:3690   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2716:3696   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4088   */\n    tag_51:\n        /* \"#utility.yul\":3967:3973   */\n      0x00\n        /* \"#utility.yul\":4020:4022   */\n      0x20\n        /* \"#utility.yul\":4008:4017   */\n      dup3\n        /* \"#utility.yul\":3999:4006   */\n      dup5\n        /* \"#utility.yul\":3995:4018   */\n      sub\n        /* \"#utility.yul\":3991:4023   */\n      slt\n        /* \"#utility.yul\":3988:4040   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4036:4037   */\n      0x00\n        /* \"#utility.yul\":4033:4034   */\n      dup1\n        /* \"#utility.yul\":4026:4038   */\n      revert\n        /* \"#utility.yul\":3988:4040   */\n    tag_233:\n      pop\n        /* \"#utility.yul\":4059:4082   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3908:4088   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4093:4279   */\n    tag_60:\n        /* \"#utility.yul\":4152:4158   */\n      0x00\n        /* \"#utility.yul\":4205:4207   */\n      0x20\n        /* \"#utility.yul\":4193:4202   */\n      dup3\n        /* \"#utility.yul\":4184:4191   */\n      dup5\n        /* \"#utility.yul\":4180:4203   */\n      sub\n        /* \"#utility.yul\":4176:4208   */\n      slt\n        /* \"#utility.yul\":4173:4225   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":4221:4222   */\n      0x00\n        /* \"#utility.yul\":4218:4219   */\n      dup1\n        /* \"#utility.yul\":4211:4223   */\n      revert\n        /* \"#utility.yul\":4173:4225   */\n    tag_235:\n        /* \"#utility.yul\":4244:4273   */\n      tag_236\n        /* \"#utility.yul\":4263:4272   */\n      dup3\n        /* \"#utility.yul\":4244:4273   */\n      tag_193\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4234:4273   */\n      swap4\n        /* \"#utility.yul\":4093:4279   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4284:4916   */\n    tag_63:\n        /* \"#utility.yul\":4455:4457   */\n      0x20\n        /* \"#utility.yul\":4507:4528   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4577:4590   */\n      dup3\n      mload\n        /* \"#utility.yul\":4480:4498   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4599:4621   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4426:4430   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4455:4457   */\n      swap1\n        /* \"#utility.yul\":4678:4693   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4652:4654   */\n      0x40\n        /* \"#utility.yul\":4637:4655   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4426:4430   */\n      dup5\n        /* \"#utility.yul\":4721:4890   */\n    tag_238:\n        /* \"#utility.yul\":4735:4741   */\n      dup2\n        /* \"#utility.yul\":4732:4733   */\n      dup2\n        /* \"#utility.yul\":4729:4742   */\n      lt\n        /* \"#utility.yul\":4721:4890   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":4796:4809   */\n      dup4\n      mload\n        /* \"#utility.yul\":4784:4810   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4865:4880   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4830:4842   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4757:4758   */\n      0x01\n        /* \"#utility.yul\":4750:4759   */\n      add\n        /* \"#utility.yul\":4721:4890   */\n      jump(tag_238)\n    tag_240:\n      pop\n        /* \"#utility.yul\":4907:4910   */\n      swap1\n      swap7\n        /* \"#utility.yul\":4284:4916   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6404:6539   */\n    tag_149:\n        /* \"#utility.yul\":6443:6446   */\n      0x00\n        /* \"#utility.yul\":6464:6481   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":6461:6504   */\n      tag_248\n      jumpi\n        /* \"#utility.yul\":6484:6502   */\n      tag_248\n      tag_190\n      jump\t// in\n    tag_248:\n      pop\n        /* \"#utility.yul\":6531:6532   */\n      0x01\n        /* \"#utility.yul\":6520:6533   */\n      add\n      swap1\n        /* \"#utility.yul\":6404:6539   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220127bae5853e737dc785e178f60043749eaa834ba36b92e28c5e76c5714b2e32864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 97,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610e89380380610e8983398101604081905261002f916100b1565b61003833610061565b60018055600280546001600160a01b0319166001600160a01b03929092169190911790556100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b610d99806100f06000396000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b14610301578063a694fc3a1461031f578063d3ea43501461033f578063f2fde38b1461037a578063f301af421461039a578063fd71c650146103c757600080fd5b8063150b7a02146101e85780632e17de7814610231578063379607f51461025157806355ed9d5314610271578063715018a61461029e57806389885a59146102b357600080fd5b366101e3576003546000036100fc5760405162461bcd60e51b8152602060048201526012602482015271139bc81391951cc8185c99481cdd185ad95960721b60448201526064015b60405180910390fd5b600061010760035490565b6101119034610ab1565b60025460405162438b6360e81b81523060048201529192506000916001600160a01b039091169063438b630090602401600060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101869190810190610b1a565b905060005b81518110156101e1578260056000600684815481106101ac576101ac610bc0565b9060005260206000200154815260200190815260200160002060008282546101d49190610bd6565b909155505060010161018b565b005b600080fd5b3480156101f457600080fd5b50610213610203366004610c0b565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561023d57600080fd5b506101e161024c366004610ccb565b6103e7565b34801561025d57600080fd5b506101e161026c366004610ccb565b6105bb565b34801561027d57600080fd5b5061029161028c366004610ce4565b6106fb565b6040516102289190610d06565b3480156102aa57600080fd5b506101e161081c565b3480156102bf57600080fd5b506102e96102ce366004610ccb565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610228565b34801561030d57600080fd5b506000546001600160a01b03166102e9565b34801561032b57600080fd5b506101e161033a366004610ccb565b610830565b34801561034b57600080fd5b5061036c61035a366004610ccb565b60009081526005602052604090205490565b604051908152602001610228565b34801561038657600080fd5b506101e1610395366004610ce4565b6108fa565b3480156103a657600080fd5b5061036c6103b5366004610ccb565b60056020526000908152604090205481565b3480156103d357600080fd5b506101e16103e2366004610ce4565b610970565b6002600154036104395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001556000818152600460205260409020546001600160a01b0316331461049d5760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100f3565b600081815260046020526040902080546001600160a01b03191690556104c3600361099a565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061053757600080fd5b600082815260056020526040808220919091556002549051632142170760e11b8152306004820152336024820152604481018490526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b50506001805550505050565b60026001540361060d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001556000818152600460205260409020546001600160a01b031633146106715760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100f3565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d80600081146106d2576040519150601f19603f3d011682016040523d82523d6000602084013e6106d7565b606091505b50509050806106e557600080fd5b5060009081526005602052604081205560018055565b60025460405162438b6360e81b81523060048201526060916000916001600160a01b039091169063438b630090602401600060405180830381865afa158015610748573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107709190810190610b1a565b905060606000805b8351811015610812576004600085838151811061079757610797610bc0565b6020908102919091018101518252810191909152604001600020546001600160a01b039081169087160361080a578381815181106107d7576107d7610bc0565b60200260200101518383815181106107f1576107f1610bc0565b60209081029190910101528161080681610d4a565b9250505b600101610778565b5090949350505050565b6108246109f1565b61082e6000610a4b565b565b600254604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050600082815260046020526040812080546001600160a01b031916331790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01829055506108f7600380546001019055565b50565b6109026109f1565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f3565b6108f781610a4b565b6109786109f1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b8054806109e95760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016100f3565b600019019055565b6000546001600160a01b0316331461082e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600082610ace57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b1257610b12610ad3565b604052919050565b60006020808385031215610b2d57600080fd5b825167ffffffffffffffff80821115610b4557600080fd5b818501915085601f830112610b5957600080fd5b815181811115610b6b57610b6b610ad3565b8060051b9150610b7c848301610ae9565b8181529183018401918481019088841115610b9657600080fd5b938501935b83851015610bb457845182529385019390850190610b9b565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610be957610be9610a9b565b92915050565b80356001600160a01b0381168114610c0657600080fd5b919050565b60008060008060808587031215610c2157600080fd5b610c2a85610bef565b93506020610c39818701610bef565b935060408601359250606086013567ffffffffffffffff80821115610c5d57600080fd5b818801915088601f830112610c7157600080fd5b813581811115610c8357610c83610ad3565b610c95601f8201601f19168501610ae9565b91508082528984828501011115610cab57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600060208284031215610cdd57600080fd5b5035919050565b600060208284031215610cf657600080fd5b610cff82610bef565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610d3e57835183529284019291840191600101610d22565b50909695505050505050565b600060018201610d5c57610d5c610a9b565b506001019056fea2646970667358221220127bae5853e737dc785e178f60043749eaa834ba36b92e28c5e76c5714b2e32864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE89 CODESIZE SUB DUP1 PUSH2 0xE89 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB1 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x61 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD99 DUP1 PUSH2 0xF0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x55ED9D53 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x89885A59 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391951CC8185C99481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x107 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x111 SWAP1 CALLVALUE PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x186 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AC JUMPI PUSH2 0x1AC PUSH2 0xBC0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x4C3 PUSH1 0x3 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x529 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x770 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x4 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x80A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7D7 JUMPI PUSH2 0x7D7 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F1 JUMPI PUSH2 0x7F1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x806 DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x778 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x82E PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x896 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 SWAP1 SSTORE POP PUSH2 0x8F7 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x978 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB12 JUMPI PUSH2 0xB12 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH2 0xAD3 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xB7C DUP5 DUP4 ADD PUSH2 0xAE9 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xBB4 JUMPI DUP5 MLOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xB9B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0xA9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2A DUP6 PUSH2 0xBEF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xC39 DUP2 DUP8 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC83 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0xC95 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF DUP3 PUSH2 0xBEF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD22 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD5C JUMPI PUSH2 0xD5C PUSH2 0xA9B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH28 0xAE5853E737DC785E178F60043749EAA834BA36B92E28C5E76C5714B2 0xE3 0x28 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "492:2809:8:-:0;;;999:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:5;936:18:0;:32::i;:::-;1701:1:1;1806:22;;1044:12:8;:27;;-1:-1:-1;;;;;;1044:27:8;-1:-1:-1;;;;;1044:27:8;;;;;;;;;;492:2809;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;492:2809:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2545,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2635,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRewards_666": {
									"entryPoint": null,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_654": {
									"entryPoint": 1467,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_353": {
									"entryPoint": null,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_395": {
									"entryPoint": 2458,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getTokensStakedByUser_735": {
									"entryPoint": 1787,
									"id": 735,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2076,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_482": {
									"entryPoint": null,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_507": {
									"entryPoint": 2416,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_544": {
									"entryPoint": 2096,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnerOf_478": {
									"entryPoint": null,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2298,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_610": {
									"entryPoint": 999,
									"id": 610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7665:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:9"
																	},
																	{
																		"hexValue": "4e6f204e46547320617265207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:20:9",
																		"type": "",
																		"value": "No NFTs are staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "324:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "336:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "347:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "332:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "324:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:9",
														"type": ""
													}
												],
												"src": "14:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "393:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "417:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "422:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "413:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "403:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "450:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "453:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "474:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "477:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "467:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "467:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "361:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "539:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "591:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "598:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "603:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "594:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "594:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "584:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "584:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "584:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "635:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "628:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "628:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "628:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "663:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "666:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "656:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "656:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "559:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "552:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:9:9"
															},
															"nodeType": "YulIf",
															"src": "549:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "690:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "699:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "702:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "695:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "690:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "524:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "527:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "533:1:9",
														"type": ""
													}
												],
												"src": "493:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "816:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "826:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "838:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "849:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "834:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "834:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "826:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "868:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "883:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "899:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "904:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "895:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "895:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "908:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "891:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "891:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "879:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "879:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "861:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "785:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "796:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "807:4:9",
														"type": ""
													}
												],
												"src": "715:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "955:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "972:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "979:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "984:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "965:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "965:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1005:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1039:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1029:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "923:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1100:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1110:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1126:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1120:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1110:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1138:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1160:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1176:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1182:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1191:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1187:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1187:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1156:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1142:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1271:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1273:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1273:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1273:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1214:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1226:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1211:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1250:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1247:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1247:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1208:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:62:9"
															},
															"nodeType": "YulIf",
															"src": "1205:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1309:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1313:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1302:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1080:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1089:6:9",
														"type": ""
													}
												],
												"src": "1055:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1441:830:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1451:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1461:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1508:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1517:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1510:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1510:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1510:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1492:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1504:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1475:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:32:9"
															},
															"nodeType": "YulIf",
															"src": "1472:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1533:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1553:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1547:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1537:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1572:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1582:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1576:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1627:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1636:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1639:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1629:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1629:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1615:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1623:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1612:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:14:9"
															},
															"nodeType": "YulIf",
															"src": "1609:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1652:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1677:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1656:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1732:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1741:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1744:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1734:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1734:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1734:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1711:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1715:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1707:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1707:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1703:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:35:9"
															},
															"nodeType": "YulIf",
															"src": "1693:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1757:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1773:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1767:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1761:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1799:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1801:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1801:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1801:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1791:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1795:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1788:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:10:9"
															},
															"nodeType": "YulIf",
															"src": "1785:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1830:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1844:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1847:2:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1840:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1840:10:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1834:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1859:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1890:2:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1894:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1886:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1886:11:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1870:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:28:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1863:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1907:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1920:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1911:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1939:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1944:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1932:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1932:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1956:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1967:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1972:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1984:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2006:2:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2010:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:11:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2015:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:20:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1988:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2050:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2052:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2052:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2033:6:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2041:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2030:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2030:19:9"
															},
															"nodeType": "YulIf",
															"src": "2027:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2075:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2090:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2094:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2086:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2086:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2079:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2162:79:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2183:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2194:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2188:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2188:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2176:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2176:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2212:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2223:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2219:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2219:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2212:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2117:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2114:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2130:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2132:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2143:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2148:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2139:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2132:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2110:3:9",
																"statements": []
															},
															"src": "2106:135:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2250:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2260:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1418:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1430:6:9",
														"type": ""
													}
												],
												"src": "1335:936:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2308:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2337:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2328:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2358:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2389:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2382:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2382:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2382:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2276:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2456:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2466:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2477:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2480:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2473:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2507:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2497:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2500:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2494:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:10:9"
															},
															"nodeType": "YulIf",
															"src": "2491:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2439:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2442:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2448:3:9",
														"type": ""
													}
												],
												"src": "2408:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2597:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2606:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2597:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2689:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2691:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2648:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2659:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2674:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2679:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2670:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2670:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2683:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2666:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2666:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2655:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2655:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2645:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2645:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2638:50:9"
															},
															"nodeType": "YulIf",
															"src": "2635:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2566:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2577:5:9",
														"type": ""
													}
												],
												"src": "2538:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2846:850:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2893:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2905:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2895:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2895:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2867:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2876:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2863:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2863:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2888:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2859:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:33:9"
															},
															"nodeType": "YulIf",
															"src": "2856:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2918:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2947:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2928:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2928:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2918:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2966:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2976:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2970:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2987:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3020:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3031:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3016:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3016:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2997:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2987:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3044:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3054:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3044:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3095:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3137:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3109:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3099:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3150:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3160:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3154:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3205:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3214:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3217:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3207:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3207:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3201:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3190:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:14:9"
															},
															"nodeType": "YulIf",
															"src": "3187:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3230:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3244:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3255:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3240:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3234:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3310:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3319:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3322:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3312:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3312:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3312:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3289:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3293:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3285:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3281:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3281:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3274:35:9"
															},
															"nodeType": "YulIf",
															"src": "3271:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3335:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3358:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3345:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3345:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3339:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3384:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3386:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3386:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3386:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3376:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3380:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3373:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:10:9"
															},
															"nodeType": "YulIf",
															"src": "3370:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3415:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "3456:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3460:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3452:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3452:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3471:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3467:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3467:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3448:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3477:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3444:36:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3428:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:53:9"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "3419:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3497:5:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3504:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3490:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3490:17:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3490:17:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3553:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3565:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3555:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3555:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3555:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3530:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3534:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3526:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3526:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3539:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3522:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3522:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3544:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3519:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3519:33:9"
															},
															"nodeType": "YulIf",
															"src": "3516:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "3595:5:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3602:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3611:2:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3615:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3607:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3607:11:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3620:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3578:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3578:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nodeType": "YulIdentifier",
																						"src": "3647:5:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3654:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3643:14:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3659:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3664:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3632:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3632:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3632:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:15:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3685:5:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2788:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2799:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2811:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2819:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2827:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2835:6:9",
														"type": ""
													}
												],
												"src": "2716:980:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3800:103:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3810:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3822:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3818:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3818:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3810:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3852:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3867:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3879:3:9",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3884:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3875:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3875:20:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3863:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3863:33:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3845:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3845:52:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3769:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3780:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3791:4:9",
														"type": ""
													}
												],
												"src": "3701:202:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3978:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4026:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3999:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4008:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3995:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:32:9"
															},
															"nodeType": "YulIf",
															"src": "3988:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4049:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4072:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4059:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4049:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3944:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3955:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3967:6:9",
														"type": ""
													}
												],
												"src": "3908:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4163:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4209:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4218:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4211:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4211:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4184:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4205:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4176:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4176:32:9"
															},
															"nodeType": "YulIf",
															"src": "4173:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4234:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4263:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4244:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4234:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4129:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4140:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4152:6:9",
														"type": ""
													}
												],
												"src": "4093:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4435:481:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4445:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4455:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4449:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4466:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4484:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4495:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4480:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4470:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4514:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4525:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4507:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4507:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4537:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4548:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4541:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4563:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4583:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4577:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4567:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4606:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4614:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4599:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4630:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4641:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4630:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4664:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4682:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4690:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4678:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4668:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4702:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4711:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4706:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4770:120:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4791:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "4802:6:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4796:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4796:13:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4784:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4784:26:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4784:26:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4823:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4834:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4839:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4830:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4830:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4823:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4855:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4869:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4877:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4865:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4865:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4855:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4732:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4735:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4729:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4729:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4743:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4745:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4754:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4757:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4750:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4750:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4745:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4725:3:9",
																"statements": []
															},
															"src": "4721:169:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4899:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4907:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4899:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4404:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4415:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4426:4:9",
														"type": ""
													}
												],
												"src": "4284:632:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5022:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5032:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5044:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5040:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5040:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5032:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5074:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5085:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5067:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5067:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5067:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4991:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5002:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5013:4:9",
														"type": ""
													}
												],
												"src": "4921:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5277:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5287:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5287:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5339:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5344:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5317:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5317:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5383:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5426:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5438:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5449:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5426:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5254:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5268:4:9",
														"type": ""
													}
												],
												"src": "5103:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5637:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5654:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5665:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5647:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5647:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5647:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5688:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5699:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5684:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5677:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5727:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5738:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5723:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5723:18:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5743:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5716:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5777:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5789:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5800:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5785:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5777:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5614:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5628:4:9",
														"type": ""
													}
												],
												"src": "5463:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6005:14:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6007:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6014:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6007:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5989:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5997:3:9",
														"type": ""
													}
												],
												"src": "5814:205:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6181:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6191:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6203:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6214:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6199:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6191:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6226:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6244:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6249:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6236:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6236:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6230:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6271:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6286:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6294:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6282:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6264:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6264:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6318:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6329:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6314:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6338:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6346:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6307:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6307:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6370:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6381:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6366:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6359:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6134:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6145:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6153:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6161:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6172:4:9",
														"type": ""
													}
												],
												"src": "6024:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6451:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6482:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6484:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6484:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6467:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6478:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6474:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6474:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6464:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6464:17:9"
															},
															"nodeType": "YulIf",
															"src": "6461:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6513:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6524:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6531:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6520:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6513:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6433:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6443:3:9",
														"type": ""
													}
												],
												"src": "6404:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6718:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6735:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6728:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6728:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6780:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6785:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6808:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6819:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6824:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6797:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6797:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6879:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6890:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6875:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6875:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6895:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6868:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6868:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6913:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6925:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6936:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6913:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6695:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6709:4:9",
														"type": ""
													}
												],
												"src": "6544:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7125:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7153:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7135:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7135:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7135:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7176:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7187:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7172:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7192:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7165:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7165:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7165:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7215:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7226:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7211:18:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7231:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7204:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7204:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7204:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7270:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7282:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7270:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7102:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7116:4:9",
														"type": ""
													}
												],
												"src": "6951:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7481:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7498:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7491:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7491:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7532:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7543:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7528:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7528:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7521:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7571:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7582:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7567:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7587:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7560:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7560:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7458:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7472:4:9",
														"type": ""
													}
												],
												"src": "7307:356:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No NFTs are staked\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value3 := array\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You are not the owner.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b14610301578063a694fc3a1461031f578063d3ea43501461033f578063f2fde38b1461037a578063f301af421461039a578063fd71c650146103c757600080fd5b8063150b7a02146101e85780632e17de7814610231578063379607f51461025157806355ed9d5314610271578063715018a61461029e57806389885a59146102b357600080fd5b366101e3576003546000036100fc5760405162461bcd60e51b8152602060048201526012602482015271139bc81391951cc8185c99481cdd185ad95960721b60448201526064015b60405180910390fd5b600061010760035490565b6101119034610ab1565b60025460405162438b6360e81b81523060048201529192506000916001600160a01b039091169063438b630090602401600060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101869190810190610b1a565b905060005b81518110156101e1578260056000600684815481106101ac576101ac610bc0565b9060005260206000200154815260200190815260200160002060008282546101d49190610bd6565b909155505060010161018b565b005b600080fd5b3480156101f457600080fd5b50610213610203366004610c0b565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561023d57600080fd5b506101e161024c366004610ccb565b6103e7565b34801561025d57600080fd5b506101e161026c366004610ccb565b6105bb565b34801561027d57600080fd5b5061029161028c366004610ce4565b6106fb565b6040516102289190610d06565b3480156102aa57600080fd5b506101e161081c565b3480156102bf57600080fd5b506102e96102ce366004610ccb565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610228565b34801561030d57600080fd5b506000546001600160a01b03166102e9565b34801561032b57600080fd5b506101e161033a366004610ccb565b610830565b34801561034b57600080fd5b5061036c61035a366004610ccb565b60009081526005602052604090205490565b604051908152602001610228565b34801561038657600080fd5b506101e1610395366004610ce4565b6108fa565b3480156103a657600080fd5b5061036c6103b5366004610ccb565b60056020526000908152604090205481565b3480156103d357600080fd5b506101e16103e2366004610ce4565b610970565b6002600154036104395760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001556000818152600460205260409020546001600160a01b0316331461049d5760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100f3565b600081815260046020526040902080546001600160a01b03191690556104c3600361099a565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061053757600080fd5b600082815260056020526040808220919091556002549051632142170760e11b8152306004820152336024820152604481018490526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561059b57600080fd5b505af11580156105af573d6000803e3d6000fd5b50506001805550505050565b60026001540361060d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100f3565b60026001556000818152600460205260409020546001600160a01b031633146106715760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100f3565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d80600081146106d2576040519150601f19603f3d011682016040523d82523d6000602084013e6106d7565b606091505b50509050806106e557600080fd5b5060009081526005602052604081205560018055565b60025460405162438b6360e81b81523060048201526060916000916001600160a01b039091169063438b630090602401600060405180830381865afa158015610748573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107709190810190610b1a565b905060606000805b8351811015610812576004600085838151811061079757610797610bc0565b6020908102919091018101518252810191909152604001600020546001600160a01b039081169087160361080a578381815181106107d7576107d7610bc0565b60200260200101518383815181106107f1576107f1610bc0565b60209081029190910101528161080681610d4a565b9250505b600101610778565b5090949350505050565b6108246109f1565b61082e6000610a4b565b565b600254604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561088257600080fd5b505af1158015610896573d6000803e3d6000fd5b505050600082815260046020526040812080546001600160a01b031916331790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01829055506108f7600380546001019055565b50565b6109026109f1565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f3565b6108f781610a4b565b6109786109f1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b8054806109e95760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016100f3565b600019019055565b6000546001600160a01b0316331461082e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052601160045260246000fd5b600082610ace57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b1257610b12610ad3565b604052919050565b60006020808385031215610b2d57600080fd5b825167ffffffffffffffff80821115610b4557600080fd5b818501915085601f830112610b5957600080fd5b815181811115610b6b57610b6b610ad3565b8060051b9150610b7c848301610ae9565b8181529183018401918481019088841115610b9657600080fd5b938501935b83851015610bb457845182529385019390850190610b9b565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610be957610be9610a9b565b92915050565b80356001600160a01b0381168114610c0657600080fd5b919050565b60008060008060808587031215610c2157600080fd5b610c2a85610bef565b93506020610c39818701610bef565b935060408601359250606086013567ffffffffffffffff80821115610c5d57600080fd5b818801915088601f830112610c7157600080fd5b813581811115610c8357610c83610ad3565b610c95601f8201601f19168501610ae9565b91508082528984828501011115610cab57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600060208284031215610cdd57600080fd5b5035919050565b600060208284031215610cf657600080fd5b610cff82610bef565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610d3e57835183529284019291840191600101610d22565b50909695505050505050565b600060018201610d5c57610d5c610a9b565b506001019056fea2646970667358221220127bae5853e737dc785e178f60043749eaa834ba36b92e28c5e76c5714b2e32864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x55ED9D53 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x89885A59 EQ PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1E3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391951CC8185C99481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x107 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x111 SWAP1 CALLVALUE PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x186 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1E1 JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1AC JUMPI PUSH2 0x1AC PUSH2 0xBC0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0xBD6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x18B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xC0B JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xD06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x228 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36C PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x3E2 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x4C3 PUSH1 0x3 PUSH2 0x99A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x524 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x529 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x60D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6D7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x748 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x770 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x4 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP8 AND SUB PUSH2 0x80A JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7D7 JUMPI PUSH2 0x7D7 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x7F1 JUMPI PUSH2 0x7F1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x806 DUP2 PUSH2 0xD4A JUMP JUMPDEST SWAP3 POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x778 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x824 PUSH2 0x9F1 JUMP JUMPDEST PUSH2 0x82E PUSH1 0x0 PUSH2 0xA4B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x896 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 SWAP1 SSTORE POP PUSH2 0x8F7 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x902 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x8F7 DUP2 PUSH2 0xA4B JUMP JUMPDEST PUSH2 0x978 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x9E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xACE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB12 JUMPI PUSH2 0xB12 PUSH2 0xAD3 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB6B PUSH2 0xAD3 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xB7C DUP5 DUP4 ADD PUSH2 0xAE9 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0xB96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xBB4 JUMPI DUP5 MLOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xB9B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE9 PUSH2 0xA9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2A DUP6 PUSH2 0xBEF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xC39 DUP2 DUP8 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC83 JUMPI PUSH2 0xC83 PUSH2 0xAD3 JUMP JUMPDEST PUSH2 0xC95 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xAE9 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF DUP3 PUSH2 0xBEF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD3E JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD22 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xD5C JUMPI PUSH2 0xD5C PUSH2 0xA9B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH28 0xAE5853E737DC785E178F60043749EAA834BA36B92E28C5E76C5714B2 0xE3 0x28 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "492:2809:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2921:17;918:14:6;2952:1:8;2921:32;2913:63;;;;-1:-1:-1;;;2913:63:8;;216:2:9;2913:63:8;;;198:21:9;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:9;;;267:48;332:18;;2913:63:8;;;;;;;;;2986:20;3021:27;:17;918:14:6;;827:112;3021:27:8;3009:39;;:9;:39;:::i;:::-;3095:12;;3090:47;;-1:-1:-1;;;3090:47:8;;3131:4;3090:47;;;861:51:9;2986:62:8;;-1:-1:-1;3058:29:8;;-1:-1:-1;;;;;3095:12:8;;;;3090:32;;834:18:9;;3090:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3090:47:8;;;;;;;;;;;;:::i;:::-;3058:79;;3160:9;3156:137;3179:12;:19;3175:1;:23;3156:137;;;3241:12;3214:7;:23;3222:11;3234:1;3222:14;;;;;;;;:::i;:::-;;;;;;;;;3214:23;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;3278:3:8;;3156:137;;;;492:2809;;;;588:200:4;;;;;;;;;;-1:-1:-1;588:200:4;;;;;:::i;:::-;-1:-1:-1;;;588:200:4;;;;;;;;;;-1:-1:-1;;;;;;3863:33:9;;;3845:52;;3833:2;3818:18;588:200:4;;;;;;;;1454:456:8;;;;;;;;;;-1:-1:-1;1454:456:8;;;;;:::i;:::-;;:::i;1916:290::-;;;;;;;;;;-1:-1:-1;1916:290:8;;;;;:::i;:::-;;:::i;2329:541::-;;;;;;;;;;-1:-1:-1;2329:541:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;868:48:8:-;;;;;;;;;;-1:-1:-1;868:48:8;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;868:48:8;;;;;;-1:-1:-1;;;;;879:32:9;;;861:51;;849:2;834:18;868:48:8;715:203:9;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1198:250:8;;;;;;;;;;-1:-1:-1;1198:250:8;;;;;:::i;:::-;;:::i;2212:111::-;;;;;;;;;;-1:-1:-1;2212:111:8;;;;;:::i;:::-;2275:7;2300:16;;;:7;:16;;;;;;;2212:111;;;;5067:25:9;;;5055:2;5040:18;2212:111:8;4921:177:9;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;922:43:8:-;;;;;;;;;;-1:-1:-1;922:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;1084:108;;;;;;;;;;-1:-1:-1;1084:108:8;;;;;:::i;:::-;;:::i;1454:456::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;5305:2:9;2317:63:1;;;5287:21:9;5344:2;5324:18;;;5317:30;5383:33;5363:18;;;5356:61;5434:18;;2317:63:1;5103:355:9;2317:63:1;1744:1;2455:7;:18;1528:21:8::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;1528:21:8::1;1553:10;1528:35;1520:70;;;::::0;-1:-1:-1;;;1520:70:8;;5665:2:9;1520:70:8::1;::::0;::::1;5647:21:9::0;5704:2;5684:18;;;5677:30;-1:-1:-1;;;5723:18:9;;;5716:52;5785:18;;1520:70:8::1;5463:346:9::0;1520:70:8::1;1607:21;::::0;;;:12:::1;:21;::::0;;;;1600:28;;-1:-1:-1;;;;;;1600:28:8::1;::::0;;1638:29:::1;:17;:27;:29::i;:::-;1678:12;1704:21:::0;;;:12:::1;:21;::::0;;;;;;;;1739:7:::1;:16:::0;;;;;;;1696:64;;-1:-1:-1;;;;;1704:21:8;;::::1;::::0;1678:12;1696:64;1678:12;1696:64;1739:16;1704:21;1696:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:83;;;1778:7;1770:16;;;::::0;::::1;;1803;::::0;;;:7:::1;:16;::::0;;;;;1796:23;;;;1837:12:::1;::::0;1829:74;;-1:-1:-1;;;1829:74:8;;1876:4:::1;1829:74;::::0;::::1;6264:34:9::0;1883:10:8::1;6314:18:9::0;;;6307:43;6366:18;;;6359:34;;;-1:-1:-1;;;;;1837:12:8;;::::1;::::0;1829:38:::1;::::0;6199:18:9;;1829:74:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;;;1454:456:8:o;1916:290::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;5305:2:9;2317:63:1;;;5287:21:9;5344:2;5324:18;;;5317:30;5383:33;5363:18;;;5356:61;5434:18;;2317:63:1;5103:355:9;2317:63:1;1744:1;2455:7;:18;1988:21:8::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;1988:21:8::1;2013:10;1988:35;1980:70;;;::::0;-1:-1:-1;;;1980:70:8;;5665:2:9;1980:70:8::1;::::0;::::1;5647:21:9::0;5704:2;5684:18;;;5677:30;-1:-1:-1;;;5723:18:9;;;5716:52;5785:18;;1980:70:8::1;5463:346:9::0;1980:70:8::1;2061:12;2087:21:::0;;;:12:::1;:21;::::0;;;;;;;;2122:7:::1;:16:::0;;;;;;;2079:64;;-1:-1:-1;;;;;2087:21:8;;::::1;::::0;2061:12;2079:64;2061:12;2079:64;2122:16;2087:21;2079:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:83;;;2161:7;2153:16;;;::::0;::::1;;-1:-1:-1::0;2198:1:8::1;2179:16:::0;;;:7:::1;:16;::::0;;;;:20;1701:1:1;2628:22;;1916:290:8:o;2329:541::-;2455:12;;2450:47;;-1:-1:-1;;;2450:47:8;;2491:4;2450:47;;;861:51:9;2394:13:8;;2418:29;;-1:-1:-1;;;;;2455:12:8;;;;2450:32;;834:18:9;;2450:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2450:47:8;;;;;;;;;;;;:::i;:::-;2418:79;;2507:33;2550:20;2590:6;2585:245;2602:12;:19;2598:1;:23;2585:245;;;2648:12;:29;2661:12;2674:1;2661:15;;;;;;;;:::i;:::-;;;;;;;;;;;;2648:29;;;;;;;;;;-1:-1:-1;2648:29:8;;-1:-1:-1;;;;;2648:29:8;;;2640:37;;;;2637:154;;2729:12;2742:1;2729:15;;;;;;;;:::i;:::-;;;;;;;2696:16;2713:12;2696:30;;;;;;;;:::i;:::-;;;;;;;;;;:48;2762:14;;;;:::i;:::-;;;;2637:154;2815:3;;2585:245;;;-1:-1:-1;2847:16:8;;2329:541;-1:-1:-1;;;;2329:541:8:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1198:250:8:-;1257:12;;1249:74;;-1:-1:-1;;;1249:74:8;;1288:10;1249:74;;;6264:34:9;1308:4:8;6314:18:9;;;6307:43;6366:18;;;6359:34;;;-1:-1:-1;;;;;1257:12:8;;;;1249:38;;6199:18:9;;1249:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1333:21:8;;;;:12;:21;;;;;:34;;-1:-1:-1;;;;;;1333:34:8;1357:10;1333:34;;;1377:11;:25;;1333:34;1377:25;;;;;;;;;;;-1:-1:-1;1412:29:8;:17;1032:19:6;;1050:1;1032:19;;;945:123;1412:29:8;1198:250;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;6746:2:9;2161:73:0::1;::::0;::::1;6728:21:9::0;6785:2;6765:18;;;6758:30;6824:34;6804:18;;;6797:62;-1:-1:-1;;;6875:18:9;;;6868:36;6921:19;;2161:73:0::1;6544:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1084:108:8:-:0;1094:13:0;:11;:13::i;:::-;1158:12:8::1;:27:::0;;-1:-1:-1;;;;;;1158:27:8::1;-1:-1:-1::0;;;;;1158:27:8;;;::::1;::::0;;;::::1;::::0;;1084:108::o;1074:229:6:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:6;;7153:2:9;1177:49:6;;;7135:21:9;7192:2;7172:18;;;7165:30;7231:29;7211:18;;;7204:57;7278:18;;1177:49:6;6951:351:9;1177:49:6;-1:-1:-1;;1277:9:6;1260:26;;1074:229::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;7509:2:9;1414:68:0;;;7491:21:9;;;7528:18;;;7521:30;7587:34;7567:18;;;7560:62;7639:18;;1414:68:0;7307:356:9;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;361:127:9:-;422:10;417:3;413:20;410:1;403:31;453:4;450:1;443:15;477:4;474:1;467:15;493:217;533:1;559;549:132;;603:10;598:3;594:20;591:1;584:31;638:4;635:1;628:15;666:4;663:1;656:15;549:132;-1:-1:-1;695:9:9;;493:217::o;923:127::-;984:10;979:3;975:20;972:1;965:31;1015:4;1012:1;1005:15;1039:4;1036:1;1029:15;1055:275;1126:2;1120:9;1191:2;1172:13;;-1:-1:-1;;1168:27:9;1156:40;;1226:18;1211:34;;1247:22;;;1208:62;1205:88;;;1273:18;;:::i;:::-;1309:2;1302:22;1055:275;;-1:-1:-1;1055:275:9:o;1335:936::-;1430:6;1461:2;1504;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;1553:9;1547:16;1582:18;1623:2;1615:6;1612:14;1609:34;;;1639:1;1636;1629:12;1609:34;1677:6;1666:9;1662:22;1652:32;;1722:7;1715:4;1711:2;1707:13;1703:27;1693:55;;1744:1;1741;1734:12;1693:55;1773:2;1767:9;1795:2;1791;1788:10;1785:36;;;1801:18;;:::i;:::-;1847:2;1844:1;1840:10;1830:20;;1870:28;1894:2;1890;1886:11;1870:28;:::i;:::-;1932:15;;;2002:11;;;1998:20;;;1963:12;;;;2030:19;;;2027:39;;;2062:1;2059;2052:12;2027:39;2086:11;;;;2106:135;2122:6;2117:3;2114:15;2106:135;;;2188:10;;2176:23;;2139:12;;;;2219;;;;2106:135;;;2260:5;1335:936;-1:-1:-1;;;;;;;;1335:936:9:o;2276:127::-;2337:10;2332:3;2328:20;2325:1;2318:31;2368:4;2365:1;2358:15;2392:4;2389:1;2382:15;2408:125;2473:9;;;2494:10;;;2491:36;;;2507:18;;:::i;:::-;2408:125;;;;:::o;2538:173::-;2606:20;;-1:-1:-1;;;;;2655:31:9;;2645:42;;2635:70;;2701:1;2698;2691:12;2635:70;2538:173;;;:::o;2716:980::-;2811:6;2819;2827;2835;2888:3;2876:9;2867:7;2863:23;2859:33;2856:53;;;2905:1;2902;2895:12;2856:53;2928:29;2947:9;2928:29;:::i;:::-;2918:39;;2976:2;2997:38;3031:2;3020:9;3016:18;2997:38;:::i;:::-;2987:48;;3082:2;3071:9;3067:18;3054:32;3044:42;;3137:2;3126:9;3122:18;3109:32;3160:18;3201:2;3193:6;3190:14;3187:34;;;3217:1;3214;3207:12;3187:34;3255:6;3244:9;3240:22;3230:32;;3300:7;3293:4;3289:2;3285:13;3281:27;3271:55;;3322:1;3319;3312:12;3271:55;3358:2;3345:16;3380:2;3376;3373:10;3370:36;;;3386:18;;:::i;:::-;3428:53;3471:2;3452:13;;-1:-1:-1;;3448:27:9;3444:36;;3428:53;:::i;:::-;3415:66;;3504:2;3497:5;3490:17;3544:7;3539:2;3534;3530;3526:11;3522:20;3519:33;3516:53;;;3565:1;3562;3555:12;3516:53;3620:2;3615;3611;3607:11;3602:2;3595:5;3591:14;3578:45;3664:1;3659:2;3654;3647:5;3643:14;3639:23;3632:34;;3685:5;3675:15;;;;;2716:980;;;;;;;:::o;3908:180::-;3967:6;4020:2;4008:9;3999:7;3995:23;3991:32;3988:52;;;4036:1;4033;4026:12;3988:52;-1:-1:-1;4059:23:9;;3908:180;-1:-1:-1;3908:180:9:o;4093:186::-;4152:6;4205:2;4193:9;4184:7;4180:23;4176:32;4173:52;;;4221:1;4218;4211:12;4173:52;4244:29;4263:9;4244:29;:::i;:::-;4234:39;4093:186;-1:-1:-1;;;4093:186:9:o;4284:632::-;4455:2;4507:21;;;4577:13;;4480:18;;;4599:22;;;4426:4;;4455:2;4678:15;;;;4652:2;4637:18;;;4426:4;4721:169;4735:6;4732:1;4729:13;4721:169;;;4796:13;;4784:26;;4865:15;;;;4830:12;;;;4757:1;4750:9;4721:169;;;-1:-1:-1;4907:3:9;;4284:632;-1:-1:-1;;;;;;4284:632:9:o;6404:135::-;6443:3;6464:17;;;6461:43;;6484:18;;:::i;:::-;-1:-1:-1;6531:1:9;6520:13;;6404:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "696200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateRewards(uint256)": "2482",
								"claim(uint256)": "infinite",
								"getTokensStakedByUser(address)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2331",
								"renounceOwnership()": "infinite",
								"rewards(uint256)": "2526",
								"setNftContact(address)": "26845",
								"stake(uint256)": "infinite",
								"tokenOwnerOf(uint256)": "2588",
								"transferOwnership(address)": "28399",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 999,
									"end": 1078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 3301,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220127bae5853e737dc785e178f60043749eaa834ba36b92e28c5e76c5714b2e32864736f6c63430008110033",
									".code": [
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "D3EA4350"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "F301AF42"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "55ED9D53"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "89885A59"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2953,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81391951CC8185C99481CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2913,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2986,
											"end": 3006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3021,
											"end": 3038,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3018,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 3009,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3009,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "438B63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3135,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 861,
											"end": 912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2986,
											"end": 3048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2986,
											"end": 3048,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 3090,
											"end": 3122,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 834,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 834,
											"end": 852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3090,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3090,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3058,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3198,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3198,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3221,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3233,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 3234,
											"end": 3235,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3222,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3222,
											"end": 3236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3214,
											"end": 3253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3253,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3156,
											"end": 3293,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 3301,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3863,
											"end": 3896,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3896,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3863,
											"end": 3896,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2329,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2329,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2329,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 868,
											"end": 916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 879,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 879,
											"end": 911,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 861,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 861,
											"end": 912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 849,
											"end": 851,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 834,
											"end": 852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 715,
											"end": 918,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5067,
											"end": 5092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5067,
											"end": 5092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5055,
											"end": 5057,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 4921,
											"end": 5098,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5416,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5103,
											"end": 5458,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103A34329037BBB732B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 5463,
											"end": 5809,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1880,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1893,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6307,
											"end": 6350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5287,
											"end": 5308,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5346,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5347,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5383,
											"end": 5416,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5434,
											"end": 5452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5103,
											"end": 5458,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5665,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5668,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5702,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103A34329037BBB732B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5723,
											"end": 5741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5768,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5785,
											"end": 5803,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 5463,
											"end": 5809,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "438B63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2491,
											"end": 2495,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 861,
											"end": 912,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2394,
											"end": 2407,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2447,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 2450,
											"end": 2482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 834,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 834,
											"end": 852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2450,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 2450,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2540,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2550,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2614,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2602,
											"end": 2621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2673,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2661,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2661,
											"end": 2676,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2648,
											"end": 2677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2677,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2637,
											"end": 2791,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2741,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2729,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2744,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2712,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2696,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2726,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 2762,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2762,
											"end": 2776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2791,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2637,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 2585,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2870,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1298,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6264,
											"end": 6298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6307,
											"end": 6350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6199,
											"end": 6217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1388,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1412,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6728,
											"end": 6749,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6785,
											"end": 6787,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6758,
											"end": 6788,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6824,
											"end": 6858,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6859,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6875,
											"end": 6893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6868,
											"end": 6904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6940,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6921,
											"end": 6940,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6544,
											"end": 6946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7155,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7156,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7194,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7165,
											"end": 7195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7260,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 7211,
											"end": 7229,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7211,
											"end": 7229,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7211,
											"end": 7229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 6951,
											"end": 7302,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7491,
											"end": 7512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7528,
											"end": 7546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7521,
											"end": 7551,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7587,
											"end": 7621,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7560,
											"end": 7622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7657,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7639,
											"end": 7657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7307,
											"end": 7663,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 361,
											"end": 488,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 361,
											"end": 488,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 422,
											"end": 432,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 413,
											"end": 433,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 410,
											"end": 411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 453,
											"end": 457,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 443,
											"end": 458,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 477,
											"end": 481,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 482,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 493,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 493,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 549,
											"end": 681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 549,
											"end": 681,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 603,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 598,
											"end": 601,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 594,
											"end": 614,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 591,
											"end": 592,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 638,
											"end": 642,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 636,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 643,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 666,
											"end": 670,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 663,
											"end": 664,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 671,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 549,
											"end": 681,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 549,
											"end": 681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 695,
											"end": 704,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 695,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 493,
											"end": 710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1050,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 923,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 994,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 979,
											"end": 982,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 975,
											"end": 995,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 972,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1005,
											"end": 1020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1044,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1330,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1055,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1191,
											"end": 1193,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1172,
											"end": 1185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1172,
											"end": 1185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1195,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1196,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1244,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1245,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1247,
											"end": 1269,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1270,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1293,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1205,
											"end": 1293,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1273,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 1273,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1330,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1055,
											"end": 1330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1055,
											"end": 1330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 2271,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1335,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1463,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1501,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1502,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1475,
											"end": 1507,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1521,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 1472,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1563,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1722,
											"end": 1729,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1719,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1711,
											"end": 1713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1703,
											"end": 1730,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1693,
											"end": 1748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1734,
											"end": 1746,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1693,
											"end": 1748,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1693,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1773,
											"end": 1775,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1795,
											"end": 1797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1798,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1821,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1785,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1785,
											"end": 1821,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 1801,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 1801,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1840,
											"end": 1850,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1830,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1894,
											"end": 1896,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1870,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1870,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2049,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2097,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2114,
											"end": 2129,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2199,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2139,
											"end": 2151,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2106,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1335,
											"end": 2271,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1335,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2276,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2332,
											"end": 2335,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2328,
											"end": 2348,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2325,
											"end": 2326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2349,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2368,
											"end": 2372,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2373,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2396,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2397,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2504,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2491,
											"end": 2527,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2507,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2711,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2538,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2626,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2626,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2686,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2687,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 2635,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2538,
											"end": 2711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 2891,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2876,
											"end": 2885,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2886,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2859,
											"end": 2892,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2909,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2856,
											"end": 2909,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2895,
											"end": 2907,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2856,
											"end": 2909,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 2856,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2928,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2928,
											"end": 2957,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2928,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2918,
											"end": 2957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2976,
											"end": 2978,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 3031,
											"end": 3033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3029,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3016,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2997,
											"end": 3035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2997,
											"end": 3035,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2997,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3035,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2987,
											"end": 3035,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3086,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3178,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3201,
											"end": 3203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3190,
											"end": 3204,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3221,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3187,
											"end": 3221,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3214,
											"end": 3215,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3221,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 3187,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3261,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3244,
											"end": 3253,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3297,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3289,
											"end": 3291,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3285,
											"end": 3298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3281,
											"end": 3308,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3271,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3361,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3378,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3373,
											"end": 3383,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3406,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3370,
											"end": 3406,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 3386,
											"end": 3404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3471,
											"end": 3473,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3452,
											"end": 3465,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3452,
											"end": 3465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3480,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3428,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3415,
											"end": 3481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3502,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3507,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3544,
											"end": 3551,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3526,
											"end": 3537,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3552,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3569,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3516,
											"end": 3569,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3555,
											"end": 3567,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3569,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 3516,
											"end": 3569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3620,
											"end": 3622,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3611,
											"end": 3613,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3600,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3623,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3664,
											"end": 3665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3661,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3652,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3657,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3662,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3690,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 3696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4088,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 3908,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4008,
											"end": 4017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4006,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4018,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4023,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4040,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3988,
											"end": 4040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4034,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4040,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3988,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4082,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4082,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 4088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 4088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4279,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4093,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4158,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4207,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4184,
											"end": 4191,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4176,
											"end": 4208,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4225,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4173,
											"end": 4225,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4223,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4225,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4173,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4263,
											"end": 4272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4244,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4234,
											"end": 4273,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4279,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4093,
											"end": 4279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4916,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 4284,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4507,
											"end": 4528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4577,
											"end": 4590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4599,
											"end": 4621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4426,
											"end": 4430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4430,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4426,
											"end": 4430,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4742,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4809,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4810,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4784,
											"end": 4810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4880,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4880,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4880,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4842,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4750,
											"end": 4759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4721,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4284,
											"end": 4916,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6539,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 6404,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6443,
											"end": 6446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6461,
											"end": 6504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6484,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 6484,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6520,
											"end": 6533,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6520,
											"end": 6533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6404,
											"end": 6539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateRewards(uint256)": "d3ea4350",
							"claim(uint256)": "379607f5",
							"getTokensStakedByUser(address)": "55ed9d53",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(uint256)": "f301af42",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnerOf(uint256)": "89885a59",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getTokensStakedByUser\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0x2f00378a699ba9b643df764558707f31b8e929a413c899f703150539c9bb177a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ad8861f0d9008ba8734692ca0c099e6f8cbad954fe1fbc3b574fa133f84444e\",\"dweb:/ipfs/QmUJwy3oKtotAfki6GhpgCaaXQgskPkHwqMrFEC8PiQUZH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 445,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 478,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnerOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 482,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 485,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nameLocations": [
											"424:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "756:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "773:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"INFT": [
							437
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							795
						]
					},
					"id": 796,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 796,
							"sourceUnit": 113,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 796,
							"sourceUnit": 153,
							"src": "117:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 796,
							"sourceUnit": 314,
							"src": "186:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 796,
							"sourceUnit": 269,
							"src": "262:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 796,
							"sourceUnit": 410,
							"src": "327:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "INFT",
							"nameLocation": "397:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "438b6300",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "417:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "439:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "431:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:16:8"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "470:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "470:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "470:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:18:8"
									},
									"scope": 437,
									"src": "408:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 796,
							"src": "387:103:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Ownable",
										"nameLocations": [
											"517:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "517:7:8"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "517:7:8"
								},
								{
									"baseName": {
										"id": 440,
										"name": "ERC721Holder",
										"nameLocations": [
											"526:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "526:12:8"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "526:12:8"
								},
								{
									"baseName": {
										"id": 442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"540:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "540:15:8"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "540:15:8"
								}
							],
							"canonicalName": "SacredTemple",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 795,
							"linearizedBaseContracts": [
								795,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "501:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "570:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 795,
									"src": "562:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 449,
									"libraryName": {
										"id": 446,
										"name": "Counters",
										"nameLocations": [
											"595:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "595:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "589:36:8",
									"typeName": {
										"id": 448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 447,
											"name": "Counters.Counter",
											"nameLocations": [
												"608:8:8",
												"617:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "608:16:8"
										},
										"referencedDeclaration": 341,
										"src": "608:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "655:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 795,
									"src": "630:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 451,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 450,
											"name": "Counters.Counter",
											"nameLocations": [
												"630:8:8",
												"639:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "630:16:8"
										},
										"referencedDeclaration": 341,
										"src": "630:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39",
									"id": 460,
									"name": "NFTStaked",
									"nameLocation": "685:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "695:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "718:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "710:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "735:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "727:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:47:8"
									},
									"src": "679:63:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b",
									"id": 468,
									"name": "NFTUnstaked",
									"nameLocation": "753:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "773:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "765:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "788:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "780:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "797:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:47:8"
									},
									"src": "747:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 474,
									"name": "Claimed",
									"nameLocation": "823:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "839:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "831:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "854:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "846:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:31:8"
									},
									"src": "817:45:8"
								},
								{
									"constant": false,
									"functionSelector": "89885a59",
									"id": 478,
									"mutability": "mutable",
									"name": "tokenOwnerOf",
									"nameLocation": "904:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 795,
									"src": "868:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 477,
										"keyType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "877:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "868:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f301af42",
									"id": 482,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "958:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 795,
									"src": "922:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 481,
										"keyType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "931:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "922:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "tokenStaked",
									"nameLocation": "981:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 795,
									"src": "971:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "971:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"nodeType": "ArrayTypeName",
										"src": "971:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1034:44:8",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1044:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1059:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1044:27:8"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1020:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1012:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:22:8"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:8"
									},
									"scope": 795,
									"src": "999:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1148:44:8",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1158:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1173:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1158:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1158:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nameLocations": [
													"1138:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1138:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1138:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "1093:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1115:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1107:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:22:8"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:8"
									},
									"scope": 795,
									"src": "1084:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1239:209:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1288:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1292:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1288:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1308:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1300:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1300:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1300:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1315:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1257:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1249:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1249:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1271:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1249:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1249:74:8"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "tokenOwnerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1333:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1346:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1333:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1357:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1361:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1357:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1333:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1333:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1394:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1377:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1377:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1377:25:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 538,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1412:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1430:9:8",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1412:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1412:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1207:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1221:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1213:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:8"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:8"
									},
									"scope": 795,
									"src": "1198:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "1510:400:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "tokenOwnerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1528:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1528:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1553:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1557:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1553:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1528:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1520:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1520:70:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1600:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "tokenOwnerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1607:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1620:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1607:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1600:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 566,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1638:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1656:9:8",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1638:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1638:29:8"
											},
											{
												"assignments": [
													572,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1683:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 609,
														"src": "1678:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 571,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1678:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1757:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 575,
																			"name": "tokenOwnerOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "1704:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 577,
																		"indexExpression": {
																			"id": 576,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1717:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1704:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1696:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1696:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1696:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1727:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1696:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 580,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1739:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1747:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1739:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1696:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1677:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1778:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1770:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1770:16:8"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1796:23:8",
													"subExpression": {
														"baseExpression": {
															"id": 591,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "1803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1811:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1803:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1796:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1876:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1868:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1868:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1868:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1883:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1887:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1883:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1895:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1837:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1829:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1829:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "1829:74:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nameLocations": [
													"1488:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1488:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1463:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1479:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1471:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:17:8"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:0:8"
									},
									"scope": 795,
									"src": "1454:456:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1970:236:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 618,
																	"name": "tokenOwnerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1988:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 620,
																"indexExpression": {
																	"id": 619,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2001:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1988:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2013:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2017:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2013:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1988:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2025:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1980:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1980:70:8"
											},
											{
												"assignments": [
													628,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2066:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "2061:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 627,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2061:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 631,
																			"name": "tokenOwnerOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "2087:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 633,
																		"indexExpression": {
																			"id": 632,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "2100:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2087:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2079:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2079:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2079:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2110:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2079:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 636,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2122:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2130:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2122:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2079:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2161:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2153:16:8"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 647,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2179:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "2187:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2179:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2198:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2179:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2179:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "nonReentrant",
												"nameLocations": [
													"1948:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1948:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:12:8"
										}
									],
									"name": "claim",
									"nameLocation": "1925:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:17:8"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:0:8"
									},
									"scope": 795,
									"src": "1916:290:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2283:40:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 661,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 663,
													"indexExpression": {
														"id": 662,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "2308:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2300:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 664,
												"nodeType": "Return",
												"src": "2293:23:8"
											}
										]
									},
									"functionSelector": "d3ea4350",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "2221:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2246:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2238:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:17:8"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2275:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:9:8"
									},
									"scope": 795,
									"src": "2212:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "2408:462:8",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "_tokenStaked",
														"nameLocation": "2435:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "2418:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 676,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2418:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"nodeType": "ArrayTypeName",
															"src": "2418:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2491:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2483:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2483:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2483:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 680,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2455:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 679,
																"name": "INFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "2450:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INFT_$437_$",
																	"typeString": "type(contract INFT)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2450:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFT_$437",
																"typeString": "contract INFT"
															}
														},
														"id": 682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2469:13:8",
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "2450:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2450:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2418:79:8"
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "tokenOwnerOfUser",
														"nameLocation": "2524:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "2507:33:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 691,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2507:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 692,
															"nodeType": "ArrayTypeName",
															"src": "2507:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"nodeType": "VariableDeclarationStatement",
												"src": "2507:33:8"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "2558:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "2550:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2550:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"hexValue": "30",
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2573:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2550:24:8"
											},
											{
												"body": {
													"id": 730,
													"nodeType": "Block",
													"src": "2623:207:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 706,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "2640:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 707,
																		"name": "tokenOwnerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "2648:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 711,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 708,
																			"name": "_tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "2661:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 710,
																		"indexExpression": {
																			"id": 709,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "2674:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2661:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2648:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2640:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 725,
															"nodeType": "IfStatement",
															"src": "2637:154:8",
															"trueBody": {
																"id": 724,
																"nodeType": "Block",
																"src": "2678:113:8",
																"statements": [
																	{
																		"expression": {
																			"id": 719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 713,
																					"name": "tokenOwnerOfUser",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 693,
																					"src": "2696:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 715,
																				"indexExpression": {
																					"id": 714,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 696,
																					"src": "2713:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2696:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 716,
																					"name": "_tokenStaked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "2729:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 718,
																				"indexExpression": {
																					"id": 717,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 700,
																					"src": "2742:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2729:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2696:48:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 720,
																		"nodeType": "ExpressionStatement",
																		"src": "2696:48:8"
																	},
																	{
																		"expression": {
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2762:14:8",
																			"subExpression": {
																				"id": 721,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "2762:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 723,
																		"nodeType": "ExpressionStatement",
																		"src": "2762:14:8"
																	}
																]
															}
														},
														{
															"id": 729,
															"nodeType": "UncheckedBlock",
															"src": "2804:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2815:3:8",
																		"subExpression": {
																			"id": 726,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "2817:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 728,
																	"nodeType": "ExpressionStatement",
																	"src": "2815:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2598:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 703,
															"name": "_tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2602:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2615:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2602:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"initializationExpression": {
													"assignments": [
														700
													],
													"declarations": [
														{
															"constant": false,
															"id": 700,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2595:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 731,
															"src": "2590:6:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 699,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2590:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 701,
													"nodeType": "VariableDeclarationStatement",
													"src": "2590:6:8"
												},
												"nodeType": "ForStatement",
												"src": "2585:245:8"
											},
											{
												"expression": {
													"id": 732,
													"name": "tokenOwnerOfUser",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 693,
													"src": "2847:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 673,
												"id": 733,
												"nodeType": "Return",
												"src": "2840:23:8"
											}
										]
									},
									"functionSelector": "55ed9d53",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokensStakedByUser",
									"nameLocation": "2338:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2368:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2360:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2359:14:8"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2394:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 670,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2394:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 671,
													"nodeType": "ArrayTypeName",
													"src": "2394:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:15:8"
									},
									"scope": 795,
									"src": "2329:541:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "2903:396:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 739,
																		"name": "_stakedNFTCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "2921:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$341_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 740,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2939:7:8",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 353,
																	"src": "2921:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2921:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2921:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e46547320617265207374616b6564",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															},
															"value": "No NFTs are staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2913:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2913:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "2913:63:8"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "sharePerEach",
														"nameLocation": "2994:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "2986:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2986:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 749,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3009:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3013:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "3009:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 751,
																"name": "_stakedNFTCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3021:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$341_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3039:7:8",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "3021:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3021:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3009:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2986:62:8"
											},
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "tokensStaked",
														"nameLocation": "3075:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 793,
														"src": "3058:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 758,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3058:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 759,
															"nodeType": "ArrayTypeName",
															"src": "3058:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 770,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 767,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3131:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$795",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3123:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 765,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3123:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3123:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 762,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "3095:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 761,
																"name": "INFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "3090:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INFT_$437_$",
																	"typeString": "type(contract INFT)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3090:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFT_$437",
																"typeString": "contract INFT"
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3109:13:8",
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "3090:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3090:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3058:79:8"
											},
											{
												"body": {
													"id": 791,
													"nodeType": "Block",
													"src": "3200:93:8",
													"statements": [
														{
															"expression": {
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 779,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "3214:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 783,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 780,
																			"name": "tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "3222:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 782,
																		"indexExpression": {
																			"id": 781,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "3234:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3222:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3214:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 784,
																	"name": "sharePerEach",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "3241:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3214:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "3214:39:8"
														},
														{
															"id": 790,
															"nodeType": "UncheckedBlock",
															"src": "3267:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "3278:3:8",
																		"subExpression": {
																			"id": 787,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "3280:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 789,
																	"nodeType": "ExpressionStatement",
																	"src": "3278:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 776,
															"name": "tokensStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "3179:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3179:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3175:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"initializationExpression": {
													"assignments": [
														772
													],
													"declarations": [
														{
															"constant": false,
															"id": 772,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3168:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 792,
															"src": "3160:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 771,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3160:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 774,
													"initialValue": {
														"hexValue": "30",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3172:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3160:13:8"
												},
												"nodeType": "ForStatement",
												"src": "3156:137:8"
											}
										]
									},
									"id": 794,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2883:2:8"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2903:0:8"
									},
									"scope": 795,
									"src": "2876:423:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 796,
							"src": "492:2809:8",
							"usedErrors": []
						}
					],
					"src": "32:3269:8"
				},
				"id": 8
			}
		}
	}
}