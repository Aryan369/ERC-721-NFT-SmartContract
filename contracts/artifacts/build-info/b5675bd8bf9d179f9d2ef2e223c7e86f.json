{
	"id": "b5675bd8bf9d179f9d2ef2e223c7e86f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    IERC721 _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnedBy;\n    mapping (address => uint256) public rewards;\n    uint256[] tokensStaked;\n\n    constructor (IERC721 nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(IERC721 nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        _nftContract.safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnedBy[tokenId] = msg.sender;\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnedBy[tokenId];\n        _stakedNFTCounter.decrement();\n        _nftContract.safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    receive() external payable {\n        // uint256 share = msg.value / _stakedNFTCounter.current();\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_12:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_14\n        /* \"#utility.yul\":125:173   */\n      tag_15\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":109:174   */\n      tag_17\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":249:361   */\n    tag_18:\n        /* \"#utility.yul\":370:411   */\n      tag_21\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_23:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_25\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_27:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":652:774   */\n    tag_29:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_32\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_12\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_33:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_35\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_6:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1206:1326   */\n    tag_38:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_41\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_23\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_42\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_43\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_33\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1793:1910   */\n    tag_44:\n        /* \"#utility.yul\":1934:1996   */\n      tag_47\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2134   */\n    tag_48:\n        /* \"#utility.yul\":2104:2127   */\n      tag_50\n        /* \"#utility.yul\":2121:2126   */\n      dup2\n        /* \"#utility.yul\":2104:2127   */\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2099:2102   */\n      dup3\n        /* \"#utility.yul\":2092:2128   */\n      mstore\n        /* \"#utility.yul\":2019:2134   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2358   */\n    tag_9:\n        /* \"#utility.yul\":2231:2235   */\n      0x00\n        /* \"#utility.yul\":2269:2271   */\n      0x20\n        /* \"#utility.yul\":2258:2267   */\n      dup3\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2246:2272   */\n      swap1\n      pop\n        /* \"#utility.yul\":2282:2351   */\n      tag_53\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2337:2346   */\n      dup4\n        /* \"#utility.yul\":2333:2350   */\n      add\n        /* \"#utility.yul\":2324:2330   */\n      dup5\n        /* \"#utility.yul\":2282:2351   */\n      tag_48\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":2140:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2493   */\n    tag_17:\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2425:2445   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2415:2445   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2487   */\n      tag_57\n        /* \"#utility.yul\":2482:2486   */\n      dup3\n        /* \"#utility.yul\":2474:2480   */\n      dup3\n        /* \"#utility.yul\":2454:2487   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":2364:2493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2499:2574   */\n    tag_56:\n        /* \"#utility.yul\":2532:2538   */\n      0x00\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2559:2568   */\n      mload\n        /* \"#utility.yul\":2549:2568   */\n      swap1\n      pop\n        /* \"#utility.yul\":2499:2574   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2580:2887   */\n    tag_16:\n        /* \"#utility.yul\":2641:2645   */\n      0x00\n        /* \"#utility.yul\":2731:2749   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2723:2729   */\n      dup3\n        /* \"#utility.yul\":2720:2750   */\n      gt\n        /* \"#utility.yul\":2717:2773   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":2753:2771   */\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2717:2773   */\n    tag_61:\n        /* \"#utility.yul\":2791:2820   */\n      tag_64\n        /* \"#utility.yul\":2813:2819   */\n      dup3\n        /* \"#utility.yul\":2791:2820   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2783:2820   */\n      swap1\n      pop\n        /* \"#utility.yul\":2875:2879   */\n      0x20\n        /* \"#utility.yul\":2869:2873   */\n      dup2\n        /* \"#utility.yul\":2865:2880   */\n      add\n        /* \"#utility.yul\":2857:2880   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2893:2989   */\n    tag_66:\n        /* \"#utility.yul\":2930:2937   */\n      0x00\n        /* \"#utility.yul\":2959:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup3\n        /* \"#utility.yul\":2959:2983   */\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2948:2983   */\n      swap1\n      pop\n        /* \"#utility.yul\":2893:2989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3144   */\n    tag_51:\n        /* \"#utility.yul\":3031:3038   */\n      0x00\n        /* \"#utility.yul\":3071:3137   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3064:3069   */\n      dup3\n        /* \"#utility.yul\":3060:3138   */\n      and\n        /* \"#utility.yul\":3049:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":2995:3144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3276   */\n    tag_69:\n        /* \"#utility.yul\":3187:3194   */\n      0x00\n        /* \"#utility.yul\":3227:3269   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3220:3225   */\n      dup3\n        /* \"#utility.yul\":3216:3270   */\n      and\n        /* \"#utility.yul\":3205:3270   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3359   */\n    tag_72:\n        /* \"#utility.yul\":3319:3326   */\n      0x00\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3337:3353   */\n      swap1\n      pop\n        /* \"#utility.yul\":3282:3359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3365:3519   */\n    tag_22:\n        /* \"#utility.yul\":3449:3455   */\n      dup3\n        /* \"#utility.yul\":3444:3447   */\n      dup2\n        /* \"#utility.yul\":3439:3442   */\n      dup4\n        /* \"#utility.yul\":3426:3456   */\n      calldatacopy\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3502:3508   */\n      dup4\n        /* \"#utility.yul\":3497:3500   */\n      dup4\n        /* \"#utility.yul\":3493:3509   */\n      add\n        /* \"#utility.yul\":3486:3513   */\n      mstore\n        /* \"#utility.yul\":3365:3519   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3806   */\n    tag_58:\n        /* \"#utility.yul\":3608:3635   */\n      tag_76\n        /* \"#utility.yul\":3630:3634   */\n      dup3\n        /* \"#utility.yul\":3608:3635   */\n      tag_65\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3600:3606   */\n      dup2\n        /* \"#utility.yul\":3596:3636   */\n      add\n        /* \"#utility.yul\":3738:3744   */\n      dup2\n        /* \"#utility.yul\":3726:3736   */\n      dup2\n        /* \"#utility.yul\":3723:3745   */\n      lt\n        /* \"#utility.yul\":3702:3720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3690:3700   */\n      dup3\n        /* \"#utility.yul\":3687:3721   */\n      gt\n        /* \"#utility.yul\":3684:3746   */\n      or\n        /* \"#utility.yul\":3681:3769   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3749:3767   */\n      tag_78\n      tag_63\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3681:3769   */\n    tag_77:\n        /* \"#utility.yul\":3789:3799   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3778:3800   */\n      mstore\n        /* \"#utility.yul\":3568:3806   */\n      pop\n        /* \"#utility.yul\":3525:3806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3812:3992   */\n    tag_63:\n        /* \"#utility.yul\":3860:3937   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3857:3858   */\n      0x00\n        /* \"#utility.yul\":3850:3938   */\n      mstore\n        /* \"#utility.yul\":3957:3961   */\n      0x41\n        /* \"#utility.yul\":3954:3955   */\n      0x04\n        /* \"#utility.yul\":3947:3962   */\n      mstore\n        /* \"#utility.yul\":3981:3985   */\n      0x24\n        /* \"#utility.yul\":3978:3979   */\n      0x00\n        /* \"#utility.yul\":3971:3986   */\n      revert\n        /* \"#utility.yul\":3998:4115   */\n    tag_31:\n        /* \"#utility.yul\":4107:4108   */\n      0x00\n        /* \"#utility.yul\":4104:4105   */\n      dup1\n        /* \"#utility.yul\":4097:4109   */\n      revert\n        /* \"#utility.yul\":4121:4238   */\n    tag_20:\n        /* \"#utility.yul\":4230:4231   */\n      0x00\n        /* \"#utility.yul\":4227:4228   */\n      dup1\n        /* \"#utility.yul\":4220:4232   */\n      revert\n        /* \"#utility.yul\":4244:4361   */\n    tag_46:\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4350:4351   */\n      dup1\n        /* \"#utility.yul\":4343:4355   */\n      revert\n        /* \"#utility.yul\":4367:4484   */\n    tag_40:\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4490:4592   */\n    tag_65:\n        /* \"#utility.yul\":4531:4537   */\n      0x00\n        /* \"#utility.yul\":4582:4584   */\n      0x1f\n        /* \"#utility.yul\":4578:4585   */\n      not\n        /* \"#utility.yul\":4573:4575   */\n      0x1f\n        /* \"#utility.yul\":4566:4571   */\n      dup4\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4558:4586   */\n      and\n        /* \"#utility.yul\":4548:4586   */\n      swap1\n      pop\n        /* \"#utility.yul\":4490:4592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4598:4720   */\n    tag_26:\n        /* \"#utility.yul\":4671:4695   */\n      tag_86\n        /* \"#utility.yul\":4689:4694   */\n      dup2\n        /* \"#utility.yul\":4671:4695   */\n      tag_66\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4664:4669   */\n      dup2\n        /* \"#utility.yul\":4661:4696   */\n      eq\n        /* \"#utility.yul\":4651:4714   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":4710:4711   */\n      0x00\n        /* \"#utility.yul\":4707:4708   */\n      dup1\n        /* \"#utility.yul\":4700:4712   */\n      revert\n        /* \"#utility.yul\":4651:4714   */\n    tag_87:\n        /* \"#utility.yul\":4598:4720   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4848   */\n    tag_36:\n        /* \"#utility.yul\":4799:4823   */\n      tag_89\n        /* \"#utility.yul\":4817:4822   */\n      dup2\n        /* \"#utility.yul\":4799:4823   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4792:4797   */\n      dup2\n        /* \"#utility.yul\":4789:4824   */\n      eq\n        /* \"#utility.yul\":4779:4842   */\n      tag_90\n      jumpi\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4835:4836   */\n      dup1\n        /* \"#utility.yul\":4828:4840   */\n      revert\n        /* \"#utility.yul\":4779:4842   */\n    tag_90:\n        /* \"#utility.yul\":4726:4848   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH23 0xA0186D484877672EBD47FF5E80FD27FEA8BAE3E3FCE7E7 0x4E 0xC2 DUP9 ADDRESS JUMPDEST 0xE0 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": 96,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4851:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:9"
															},
															"nodeType": "YulIf",
															"src": "249:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:9",
														"type": ""
													}
												],
												"src": "7:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:9",
														"type": ""
													}
												],
												"src": "423:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:9"
															},
															"nodeType": "YulIf",
															"src": "652:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:9",
														"type": ""
													}
												],
												"src": "581:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:9",
														"type": ""
													}
												],
												"src": "925:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:9"
															},
															"nodeType": "YulIf",
															"src": "1206:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:9",
														"type": ""
													}
												],
												"src": "1070:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2099:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2121:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2104:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2070:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2077:3:9",
														"type": ""
													}
												],
												"src": "2019:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2246:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2258:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2246:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2324:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2282:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2220:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2231:4:9",
														"type": ""
													}
												],
												"src": "2140:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2405:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2415:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2425:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2474:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2454:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2454:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2454:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2389:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2398:6:9",
														"type": ""
													}
												],
												"src": "2364:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2539:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2549:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2565:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2559:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2532:6:9",
														"type": ""
													}
												],
												"src": "2499:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2751:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2753:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2753:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2753:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2731:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2720:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:30:9"
															},
															"nodeType": "YulIf",
															"src": "2717:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2783:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2813:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2791:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2791:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2783:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2857:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2869:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2875:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2630:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2641:4:9",
														"type": ""
													}
												],
												"src": "2580:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2959:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2948:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2920:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2930:7:9",
														"type": ""
													}
												],
												"src": "2893:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3049:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3064:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3049:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3021:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3031:7:9",
														"type": ""
													}
												],
												"src": "2995:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3195:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3205:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3220:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3216:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3216:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3205:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3177:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3187:7:9",
														"type": ""
													}
												],
												"src": "3150:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3327:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3337:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3348:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3337:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3309:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3319:7:9",
														"type": ""
													}
												],
												"src": "3282:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3439:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3449:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3426:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3497:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3502:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3398:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3403:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3408:6:9",
														"type": ""
													}
												],
												"src": "3365:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3600:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3630:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3608:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3608:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3747:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3749:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3749:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3749:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3690:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3687:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3687:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3726:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3738:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3684:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:62:9"
															},
															"nodeType": "YulIf",
															"src": "3681:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3789:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3554:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3562:4:9",
														"type": ""
													}
												],
												"src": "3525:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3840:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3860:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3850:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3954:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3947:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3978:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3812:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4087:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4104:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4107:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4097:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4097:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3998:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4210:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4230:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4220:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4121:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4333:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4350:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4353:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4343:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4244:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4456:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4473:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4466:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4367:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4538:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4548:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4566:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4573:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4562:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4562:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4578:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4578:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4558:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4558:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4521:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4531:6:9",
														"type": ""
													}
												],
												"src": "4490:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4698:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4707:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4700:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4700:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4700:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4664:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4689:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4671:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4671:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4661:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:43:9"
															},
															"nodeType": "YulIf",
															"src": "4651:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4634:5:9",
														"type": ""
													}
												],
												"src": "4598:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4769:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4826:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4835:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4838:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4828:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4828:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4792:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4817:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4799:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4799:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4789:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:43:9"
															},
															"nodeType": "YulIf",
															"src": "4779:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4762:5:9",
														"type": ""
													}
												],
												"src": "4726:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a6004803603810190610045919061010e565b610060565b60405161005791906101a0565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000610087610082846101e0565b6101bb565b9050828152602081018484840111156100a3576100a26102ed565b5b6100ae848285610279565b509392505050565b6000813590506100c58161030d565b92915050565b600082601f8301126100e0576100df6102e8565b5b81356100f0848260208601610074565b91505092915050565b60008135905061010881610324565b92915050565b60008060008060808587031215610128576101276102f7565b5b6000610136878288016100b6565b9450506020610147878288016100b6565b9350506040610158878288016100f9565b925050606085013567ffffffffffffffff811115610179576101786102f2565b5b610185878288016100cb565b91505092959194509250565b61019a81610223565b82525050565b60006020820190506101b56000830184610191565b92915050565b60006101c56101d6565b90506101d18282610288565b919050565b6000604051905090565b600067ffffffffffffffff8211156101fb576101fa6102b9565b5b610204826102fc565b9050602081019050919050565b600061021c8261024f565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610291826102fc565b810181811067ffffffffffffffff821117156102b0576102af6102b9565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61031681610211565b811461032157600080fd5b50565b61032d8161026f565b811461033857600080fd5b5056fea26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87 PUSH2 0x82 DUP5 PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xA3 JUMPI PUSH2 0xA2 PUSH2 0x2ED JUMP JUMPDEST JUMPDEST PUSH2 0xAE DUP5 DUP3 DUP6 PUSH2 0x279 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC5 DUP2 PUSH2 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE0 JUMPI PUSH2 0xDF PUSH2 0x2E8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x108 DUP2 PUSH2 0x324 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x128 JUMPI PUSH2 0x127 PUSH2 0x2F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x136 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x147 DUP8 DUP3 DUP9 ADD PUSH2 0xB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x158 DUP8 DUP3 DUP9 ADD PUSH2 0xF9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x178 PUSH2 0x2F2 JUMP JUMPDEST JUMPDEST PUSH2 0x185 DUP8 DUP3 DUP9 ADD PUSH2 0xCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x223 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5 PUSH2 0x1D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D1 DUP3 DUP3 PUSH2 0x288 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB JUMPI PUSH2 0x1FA PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST PUSH2 0x204 DUP3 PUSH2 0x2FC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C DUP3 PUSH2 0x24F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x291 DUP3 PUSH2 0x2FC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0x2B9 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x316 DUP2 PUSH2 0x211 JUMP JUMPDEST DUP2 EQ PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x32D DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP PUSH23 0xA0186D484877672EBD47FF5E80FD27FEA8BAE3E3FCE7E7 0x4E 0xC2 DUP9 ADDRESS JUMPDEST 0xE0 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:115::-;2104:23;2121:5;2104:23;:::i;:::-;2099:3;2092:36;2019:115;;:::o;2140:218::-;2231:4;2269:2;2258:9;2254:18;2246:26;;2282:69;2348:1;2337:9;2333:17;2324:6;2282:69;:::i;:::-;2140:218;;;;:::o;2364:129::-;2398:6;2425:20;;:::i;:::-;2415:30;;2454:33;2482:4;2474:6;2454:33;:::i;:::-;2364:129;;;:::o;2499:75::-;2532:6;2565:2;2559:9;2549:19;;2499:75;:::o;2580:307::-;2641:4;2731:18;2723:6;2720:30;2717:56;;;2753:18;;:::i;:::-;2717:56;2791:29;2813:6;2791:29;:::i;:::-;2783:37;;2875:4;2869;2865:15;2857:23;;2580:307;;;:::o;2893:96::-;2930:7;2959:24;2977:5;2959:24;:::i;:::-;2948:35;;2893:96;;;:::o;2995:149::-;3031:7;3071:66;3064:5;3060:78;3049:89;;2995:149;;;:::o;3150:126::-;3187:7;3227:42;3220:5;3216:54;3205:65;;3150:126;;;:::o;3282:77::-;3319:7;3348:5;3337:16;;3282:77;;;:::o;3365:154::-;3449:6;3444:3;3439;3426:30;3511:1;3502:6;3497:3;3493:16;3486:27;3365:154;;;:::o;3525:281::-;3608:27;3630:4;3608:27;:::i;:::-;3600:6;3596:40;3738:6;3726:10;3723:22;3702:18;3690:10;3687:34;3684:62;3681:88;;;3749:18;;:::i;:::-;3681:88;3789:10;3785:2;3778:22;3568:238;3525:281;;:::o;3812:180::-;3860:77;3857:1;3850:88;3957:4;3954:1;3947:15;3981:4;3978:1;3971:15;3998:117;4107:1;4104;4097:12;4121:117;4230:1;4227;4220:12;4244:117;4353:1;4350;4343:12;4367:117;4476:1;4473;4466:12;4490:102;4531:6;4582:2;4578:7;4573:2;4566:5;4562:14;4558:28;4548:38;;4490:102;;;:::o;4598:122::-;4671:24;4689:5;4671:24;:::i;:::-;4664:5;4661:35;4651:63;;4710:1;4707;4700:12;4651:63;4598:122;:::o;4726:::-;4799:24;4817:5;4799:24;:::i;:::-;4792:5;4789:35;4779:63;;4838:1;4835;4828:12;4779:63;4726:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "176200",
								"executionCost": "220",
								"totalCost": "176420"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a76a0186d484877672ebd47ff5e80fd27fea8bae3e3fce7e74ec288305be02264736f6c63430008070033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 2104,
											"end": 2127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2092,
											"end": 2128,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2019,
											"end": 2134,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2231,
											"end": 2235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2272,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2282,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2358,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2425,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2415,
											"end": 2445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2482,
											"end": 2486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2480,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 2454,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2493,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2574,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2750,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 2753,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2791,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2879,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2887,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2930,
											"end": 2937,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2959,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2948,
											"end": 2983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2989,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3038,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3137,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3138,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 3144,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3187,
											"end": 3194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3269,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3216,
											"end": 3270,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3270,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3150,
											"end": 3276,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3337,
											"end": 3353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3359,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3442,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3456,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3493,
											"end": 3509,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3519,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3608,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3636,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3726,
											"end": 3736,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3702,
											"end": 3720,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3721,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3746,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 3749,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3681,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3789,
											"end": 3799,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3778,
											"end": 3800,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3806,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 3812,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 3937,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3957,
											"end": 3961,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3954,
											"end": 3955,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3947,
											"end": 3962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3978,
											"end": 3979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4220,
											"end": 4232,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4244,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4531,
											"end": 4537,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4584,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4575,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4566,
											"end": 4571,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4558,
											"end": 4586,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4592,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4689,
											"end": 4694,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4671,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4661,
											"end": 4696,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4712,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4651,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4720,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4817,
											"end": 4822,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4799,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4792,
											"end": 4797,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4789,
											"end": 4824,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4835,
											"end": 4836,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4828,
											"end": 4840,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4779,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4726,
											"end": 4848,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLDATASIZE PUSH1 0x8D 0xB0 0xEA JUMPDEST 0xC4 0xDD PUSH4 0x3C21F81B RETURNDATACOPY DUP13 0x2F 0xBE BASEFEE 0xBB EXP DUP9 LOG4 MSTORE 0x5F PUSH18 0xA36B1FE7B76464736F6C6343000807003300 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND CALLDATASIZE PUSH1 0x8D 0xB0 0xEA JUMPDEST 0xC4 0xDD PUSH4 0x3C21F81B RETURNDATACOPY DUP13 0x2F 0xBE BASEFEE 0xBB EXP DUP9 LOG4 MSTORE 0x5F PUSH18 0xA36B1FE7B76464736F6C6343000807003300 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b36608db0ea5bc4dd633c21f81b3e8c2fbe48bb0a88a4525f71a36b1fe7b76464736f6c63430008070033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":386:1710  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":894:973  constructor (IERC721 nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1813  _status */\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":954:966  nftContract_ */\n  dup1\n    /* \"contracts/NFTStaking.sol\":939:951  _nftContract */\n  0x02\n  0x00\n    /* \"contracts/NFTStaking.sol\":939:966  _nftContract = nftContract_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTStaking.sol\":894:973  constructor (IERC721 nftContract_) {... */\n  pop\n    /* \"contracts/NFTStaking.sol\":386:1710  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:180   */\ntag_18:\n    /* \"#utility.yul\":79:84   */\n  0x00\n    /* \"#utility.yul\":110:116   */\n  dup2\n    /* \"#utility.yul\":104:117   */\n  mload\n    /* \"#utility.yul\":95:117   */\n  swap1\n  pop\n    /* \"#utility.yul\":126:174   */\n  tag_20\n    /* \"#utility.yul\":168:173   */\n  dup2\n    /* \"#utility.yul\":126:174   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":7:180   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":186:567   */\ntag_3:\n    /* \"#utility.yul\":271:277   */\n  0x00\n    /* \"#utility.yul\":320:322   */\n  0x20\n    /* \"#utility.yul\":308:317   */\n  dup3\n    /* \"#utility.yul\":299:306   */\n  dup5\n    /* \"#utility.yul\":295:318   */\n  sub\n    /* \"#utility.yul\":291:323   */\n  slt\n    /* \"#utility.yul\":288:407   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":326:405   */\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":288:407   */\ntag_23:\n    /* \"#utility.yul\":446:447   */\n  0x00\n    /* \"#utility.yul\":471:550   */\n  tag_26\n    /* \"#utility.yul\":542:549   */\n  dup5\n    /* \"#utility.yul\":533:539   */\n  dup3\n    /* \"#utility.yul\":522:531   */\n  dup6\n    /* \"#utility.yul\":518:540   */\n  add\n    /* \"#utility.yul\":471:550   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":461:550   */\n  swap2\n  pop\n    /* \"#utility.yul\":417:560   */\n  pop\n    /* \"#utility.yul\":186:567   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":654:750   */\ntag_29:\n    /* \"#utility.yul\":691:698   */\n  0x00\n    /* \"#utility.yul\":720:744   */\n  tag_31\n    /* \"#utility.yul\":738:743   */\n  dup3\n    /* \"#utility.yul\":720:744   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":709:744   */\n  swap1\n  pop\n    /* \"#utility.yul\":654:750   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":756:867   */\ntag_33:\n    /* \"#utility.yul\":808:815   */\n  0x00\n    /* \"#utility.yul\":837:861   */\n  tag_35\n    /* \"#utility.yul\":855:860   */\n  dup3\n    /* \"#utility.yul\":837:861   */\n  tag_29\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":826:861   */\n  swap1\n  pop\n    /* \"#utility.yul\":756:867   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":873:999   */\ntag_32:\n    /* \"#utility.yul\":910:917   */\n  0x00\n    /* \"#utility.yul\":950:992   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":943:948   */\n  dup3\n    /* \"#utility.yul\":939:993   */\n  and\n    /* \"#utility.yul\":928:993   */\n  swap1\n  pop\n    /* \"#utility.yul\":873:999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1128:1245   */\ntag_25:\n    /* \"#utility.yul\":1237:1238   */\n  0x00\n    /* \"#utility.yul\":1234:1235   */\n  dup1\n    /* \"#utility.yul\":1227:1239   */\n  revert\n    /* \"#utility.yul\":1251:1403   */\ntag_21:\n    /* \"#utility.yul\":1339:1378   */\n  tag_41\n    /* \"#utility.yul\":1372:1377   */\n  dup2\n    /* \"#utility.yul\":1339:1378   */\n  tag_33\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1332:1337   */\n  dup2\n    /* \"#utility.yul\":1329:1379   */\n  eq\n    /* \"#utility.yul\":1319:1397   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1393:1394   */\n  0x00\n    /* \"#utility.yul\":1390:1391   */\n  dup1\n    /* \"#utility.yul\":1383:1395   */\n  revert\n    /* \"#utility.yul\":1319:1397   */\ntag_42:\n    /* \"#utility.yul\":1251:1403   */\n  pop\n  jump\t// out\n    /* \"contracts/NFTStaking.sol\":386:1710  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":386:1710  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8488cc41\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x8488cc41\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0700037d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTStaking.sol\":816:859  mapping (address => uint256) public rewards */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1305:1600  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/NFTStaking.sol\":762:810  mapping (uint256 => address) public tokenOwnedBy */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1093:1299  function stake(uint256 tokenId) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/NFTStaking.sol\":979:1087  function setNftContact(IERC721 nftContract_) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/NFTStaking.sol\":816:859  mapping (address => uint256) public rewards */\n    tag_19:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_26:\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":726:732  bytes4 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":751:781  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":744:781  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1305:1600  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_33:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1404:1414  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1379:1414  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1379:1391  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1379:1400  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1392:1399  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1379:1400  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1379:1414  tokenOwnedBy[tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTStaking.sol\":1371:1441  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/NFTStaking.sol\":1458:1470  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1458:1479  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1471:1478  tokenId */\n      dup3\n        /* \"contracts/NFTStaking.sol\":1458:1479  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1451:1479  delete tokenOwnedBy[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1489:1518  _stakedNFTCounter.decrement() */\n      tag_69\n        /* \"contracts/NFTStaking.sol\":1489:1506  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1489:1516  _stakedNFTCounter.decrement */\n      tag_70\n        /* \"contracts/NFTStaking.sol\":1489:1518  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/NFTStaking.sol\":1528:1540  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1528:1557  _nftContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1566:1570  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1573:1583  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1585:1592  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1528:1593  _nftContract.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_75:\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2635  _status */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1305:1600  function unstake(uint256 tokenId) nonReentrant external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_80\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":762:810  mapping (uint256 => address) public tokenOwnedBy */\n    tag_40:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1093:1299  function stake(uint256 tokenId) external {... */\n    tag_50:\n        /* \"contracts/NFTStaking.sol\":1144:1156  _nftContract */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTStaking.sol\":1144:1173  _nftContract.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"contracts/NFTStaking.sol\":1174:1184  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1194:1198  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1201:1208  tokenId */\n      dup5\n        /* \"contracts/NFTStaking.sol\":1144:1209  _nftContract.safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_84:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1243:1253  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1219:1231  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1219:1240  tokenOwnedBy[tokenId] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1232:1239  tokenId */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1219:1240  tokenOwnedBy[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":1219:1253  tokenOwnedBy[tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1263:1292  _stakedNFTCounter.increment() */\n      tag_88\n        /* \"contracts/NFTStaking.sol\":1263:1280  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1263:1290  _stakedNFTCounter.increment */\n      tag_89\n        /* \"contracts/NFTStaking.sol\":1263:1292  _stakedNFTCounter.increment() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/NFTStaking.sol\":1093:1299  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_96\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_81\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":979:1087  function setNftContact(IERC721 nftContract_) external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/NFTStaking.sol\":1068:1080  nftContract_ */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1053:1065  _nftContract */\n      0x02\n      0x00\n        /* \"contracts/NFTStaking.sol\":1053:1080  _nftContract = nftContract_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":979:1087  function setNftContact(IERC721 nftContract_) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_70:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      tag_107\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1427  owner */\n      tag_45\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_81:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_89:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_115:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_117\n        /* \"#utility.yul\":125:173   */\n      tag_118\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":109:174   */\n      tag_120\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":249:361   */\n    tag_121:\n        /* \"#utility.yul\":370:411   */\n      tag_124\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_126:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_128\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_130:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":652:774   */\n    tag_132:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_135\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_115\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1094   */\n    tag_136:\n        /* \"#utility.yul\":986:991   */\n      0x00\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1011:1031   */\n      calldataload\n        /* \"#utility.yul\":1002:1031   */\n      swap1\n      pop\n        /* \"#utility.yul\":1040:1088   */\n      tag_138\n        /* \"#utility.yul\":1082:1087   */\n      dup2\n        /* \"#utility.yul\":1040:1088   */\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":925:1094   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1100:1239   */\n    tag_140:\n        /* \"#utility.yul\":1146:1151   */\n      0x00\n        /* \"#utility.yul\":1184:1190   */\n      dup2\n        /* \"#utility.yul\":1171:1191   */\n      calldataload\n        /* \"#utility.yul\":1162:1191   */\n      swap1\n      pop\n        /* \"#utility.yul\":1200:1233   */\n      tag_142\n        /* \"#utility.yul\":1227:1232   */\n      dup2\n        /* \"#utility.yul\":1200:1233   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1100:1239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1245:1574   */\n    tag_18:\n        /* \"#utility.yul\":1304:1310   */\n      0x00\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1341:1350   */\n      dup3\n        /* \"#utility.yul\":1332:1339   */\n      dup5\n        /* \"#utility.yul\":1328:1351   */\n      sub\n        /* \"#utility.yul\":1324:1356   */\n      slt\n        /* \"#utility.yul\":1321:1440   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1359:1438   */\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1321:1440   */\n    tag_145:\n        /* \"#utility.yul\":1479:1480   */\n      0x00\n        /* \"#utility.yul\":1504:1557   */\n      tag_148\n        /* \"#utility.yul\":1549:1556   */\n      dup5\n        /* \"#utility.yul\":1540:1546   */\n      dup3\n        /* \"#utility.yul\":1529:1538   */\n      dup6\n        /* \"#utility.yul\":1525:1547   */\n      add\n        /* \"#utility.yul\":1504:1557   */\n      tag_126\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1494:1557   */\n      swap2\n      pop\n        /* \"#utility.yul\":1450:1567   */\n      pop\n        /* \"#utility.yul\":1245:1574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1580:2523   */\n    tag_25:\n        /* \"#utility.yul\":1675:1681   */\n      0x00\n        /* \"#utility.yul\":1683:1689   */\n      dup1\n        /* \"#utility.yul\":1691:1697   */\n      0x00\n        /* \"#utility.yul\":1699:1705   */\n      dup1\n        /* \"#utility.yul\":1748:1751   */\n      0x80\n        /* \"#utility.yul\":1736:1745   */\n      dup6\n        /* \"#utility.yul\":1727:1734   */\n      dup8\n        /* \"#utility.yul\":1723:1746   */\n      sub\n        /* \"#utility.yul\":1719:1752   */\n      slt\n        /* \"#utility.yul\":1716:1836   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1755:1834   */\n      tag_151\n      tag_147\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1716:1836   */\n    tag_150:\n        /* \"#utility.yul\":1875:1876   */\n      0x00\n        /* \"#utility.yul\":1900:1953   */\n      tag_152\n        /* \"#utility.yul\":1945:1952   */\n      dup8\n        /* \"#utility.yul\":1936:1942   */\n      dup3\n        /* \"#utility.yul\":1925:1934   */\n      dup9\n        /* \"#utility.yul\":1921:1943   */\n      add\n        /* \"#utility.yul\":1900:1953   */\n      tag_126\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1890:1953   */\n      swap5\n      pop\n        /* \"#utility.yul\":1846:1963   */\n      pop\n        /* \"#utility.yul\":2002:2004   */\n      0x20\n        /* \"#utility.yul\":2028:2081   */\n      tag_153\n        /* \"#utility.yul\":2073:2080   */\n      dup8\n        /* \"#utility.yul\":2064:2070   */\n      dup3\n        /* \"#utility.yul\":2053:2062   */\n      dup9\n        /* \"#utility.yul\":2049:2071   */\n      add\n        /* \"#utility.yul\":2028:2081   */\n      tag_126\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2018:2081   */\n      swap4\n      pop\n        /* \"#utility.yul\":1973:2091   */\n      pop\n        /* \"#utility.yul\":2130:2132   */\n      0x40\n        /* \"#utility.yul\":2156:2209   */\n      tag_154\n        /* \"#utility.yul\":2201:2208   */\n      dup8\n        /* \"#utility.yul\":2192:2198   */\n      dup3\n        /* \"#utility.yul\":2181:2190   */\n      dup9\n        /* \"#utility.yul\":2177:2199   */\n      add\n        /* \"#utility.yul\":2156:2209   */\n      tag_140\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2146:2209   */\n      swap3\n      pop\n        /* \"#utility.yul\":2101:2219   */\n      pop\n        /* \"#utility.yul\":2286:2288   */\n      0x60\n        /* \"#utility.yul\":2275:2284   */\n      dup6\n        /* \"#utility.yul\":2271:2289   */\n      add\n        /* \"#utility.yul\":2258:2290   */\n      calldataload\n        /* \"#utility.yul\":2317:2335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2309:2315   */\n      dup2\n        /* \"#utility.yul\":2306:2336   */\n      gt\n        /* \"#utility.yul\":2303:2420   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":2339:2418   */\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2303:2420   */\n    tag_155:\n        /* \"#utility.yul\":2444:2506   */\n      tag_158\n        /* \"#utility.yul\":2498:2505   */\n      dup8\n        /* \"#utility.yul\":2489:2495   */\n      dup3\n        /* \"#utility.yul\":2478:2487   */\n      dup9\n        /* \"#utility.yul\":2474:2496   */\n      add\n        /* \"#utility.yul\":2444:2506   */\n      tag_130\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2434:2506   */\n      swap2\n      pop\n        /* \"#utility.yul\":2229:2516   */\n      pop\n        /* \"#utility.yul\":1580:2523   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2529:2888   */\n    tag_58:\n        /* \"#utility.yul\":2603:2609   */\n      0x00\n        /* \"#utility.yul\":2652:2654   */\n      0x20\n        /* \"#utility.yul\":2640:2649   */\n      dup3\n        /* \"#utility.yul\":2631:2638   */\n      dup5\n        /* \"#utility.yul\":2627:2650   */\n      sub\n        /* \"#utility.yul\":2623:2655   */\n      slt\n        /* \"#utility.yul\":2620:2739   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2658:2737   */\n      tag_161\n      tag_147\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2620:2739   */\n    tag_160:\n        /* \"#utility.yul\":2778:2779   */\n      0x00\n        /* \"#utility.yul\":2803:2871   */\n      tag_162\n        /* \"#utility.yul\":2863:2870   */\n      dup5\n        /* \"#utility.yul\":2854:2860   */\n      dup3\n        /* \"#utility.yul\":2843:2852   */\n      dup6\n        /* \"#utility.yul\":2839:2861   */\n      add\n        /* \"#utility.yul\":2803:2871   */\n      tag_136\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2793:2871   */\n      swap2\n      pop\n        /* \"#utility.yul\":2749:2881   */\n      pop\n        /* \"#utility.yul\":2529:2888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2894:3223   */\n    tag_32:\n        /* \"#utility.yul\":2953:2959   */\n      0x00\n        /* \"#utility.yul\":3002:3004   */\n      0x20\n        /* \"#utility.yul\":2990:2999   */\n      dup3\n        /* \"#utility.yul\":2981:2988   */\n      dup5\n        /* \"#utility.yul\":2977:3000   */\n      sub\n        /* \"#utility.yul\":2973:3005   */\n      slt\n        /* \"#utility.yul\":2970:3089   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":3008:3087   */\n      tag_165\n      tag_147\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2970:3089   */\n    tag_164:\n        /* \"#utility.yul\":3128:3129   */\n      0x00\n        /* \"#utility.yul\":3153:3206   */\n      tag_166\n        /* \"#utility.yul\":3198:3205   */\n      dup5\n        /* \"#utility.yul\":3189:3195   */\n      dup3\n        /* \"#utility.yul\":3178:3187   */\n      dup6\n        /* \"#utility.yul\":3174:3196   */\n      add\n        /* \"#utility.yul\":3153:3206   */\n      tag_140\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3143:3206   */\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3216   */\n      pop\n        /* \"#utility.yul\":2894:3223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3229:3347   */\n    tag_167:\n        /* \"#utility.yul\":3316:3340   */\n      tag_169\n        /* \"#utility.yul\":3334:3339   */\n      dup2\n        /* \"#utility.yul\":3316:3340   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3311:3314   */\n      dup3\n        /* \"#utility.yul\":3304:3341   */\n      mstore\n        /* \"#utility.yul\":3229:3347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3353:3468   */\n    tag_171:\n        /* \"#utility.yul\":3438:3461   */\n      tag_173\n        /* \"#utility.yul\":3455:3460   */\n      dup2\n        /* \"#utility.yul\":3438:3461   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3433:3436   */\n      dup3\n        /* \"#utility.yul\":3426:3462   */\n      mstore\n        /* \"#utility.yul\":3353:3468   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3474:3840   */\n    tag_175:\n        /* \"#utility.yul\":3616:3619   */\n      0x00\n        /* \"#utility.yul\":3637:3704   */\n      tag_177\n        /* \"#utility.yul\":3701:3703   */\n      0x1b\n        /* \"#utility.yul\":3696:3699   */\n      dup4\n        /* \"#utility.yul\":3637:3704   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3630:3704   */\n      swap2\n      pop\n        /* \"#utility.yul\":3713:3806   */\n      tag_179\n        /* \"#utility.yul\":3802:3805   */\n      dup3\n        /* \"#utility.yul\":3713:3806   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":3831:3833   */\n      0x20\n        /* \"#utility.yul\":3826:3829   */\n      dup3\n        /* \"#utility.yul\":3822:3834   */\n      add\n        /* \"#utility.yul\":3815:3834   */\n      swap1\n      pop\n        /* \"#utility.yul\":3474:3840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3846:4212   */\n    tag_181:\n        /* \"#utility.yul\":3988:3991   */\n      0x00\n        /* \"#utility.yul\":4009:4076   */\n      tag_183\n        /* \"#utility.yul\":4073:4075   */\n      0x26\n        /* \"#utility.yul\":4068:4071   */\n      dup4\n        /* \"#utility.yul\":4009:4076   */\n      tag_178\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4002:4076   */\n      swap2\n      pop\n        /* \"#utility.yul\":4085:4178   */\n      tag_184\n        /* \"#utility.yul\":4174:4177   */\n      dup3\n        /* \"#utility.yul\":4085:4178   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4203:4205   */\n      0x40\n        /* \"#utility.yul\":4198:4201   */\n      dup3\n        /* \"#utility.yul\":4194:4206   */\n      add\n        /* \"#utility.yul\":4187:4206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3846:4212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4584   */\n    tag_186:\n        /* \"#utility.yul\":4360:4363   */\n      0x00\n        /* \"#utility.yul\":4381:4448   */\n      tag_188\n        /* \"#utility.yul\":4445:4447   */\n      0x20\n        /* \"#utility.yul\":4440:4443   */\n      dup4\n        /* \"#utility.yul\":4381:4448   */\n      tag_178\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4374:4448   */\n      swap2\n      pop\n        /* \"#utility.yul\":4457:4550   */\n      tag_189\n        /* \"#utility.yul\":4546:4549   */\n      dup3\n        /* \"#utility.yul\":4457:4550   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4575:4577   */\n      0x20\n        /* \"#utility.yul\":4570:4573   */\n      dup3\n        /* \"#utility.yul\":4566:4578   */\n      add\n        /* \"#utility.yul\":4559:4578   */\n      swap1\n      pop\n        /* \"#utility.yul\":4218:4584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4590:4956   */\n    tag_191:\n        /* \"#utility.yul\":4732:4735   */\n      0x00\n        /* \"#utility.yul\":4753:4820   */\n      tag_193\n        /* \"#utility.yul\":4817:4819   */\n      0x16\n        /* \"#utility.yul\":4812:4815   */\n      dup4\n        /* \"#utility.yul\":4753:4820   */\n      tag_178\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4746:4820   */\n      swap2\n      pop\n        /* \"#utility.yul\":4829:4922   */\n      tag_194\n        /* \"#utility.yul\":4918:4921   */\n      dup3\n        /* \"#utility.yul\":4829:4922   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4947:4949   */\n      0x20\n        /* \"#utility.yul\":4942:4945   */\n      dup3\n        /* \"#utility.yul\":4938:4950   */\n      add\n        /* \"#utility.yul\":4931:4950   */\n      swap1\n      pop\n        /* \"#utility.yul\":4590:4956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4962:5328   */\n    tag_196:\n        /* \"#utility.yul\":5104:5107   */\n      0x00\n        /* \"#utility.yul\":5125:5192   */\n      tag_198\n        /* \"#utility.yul\":5189:5191   */\n      0x1f\n        /* \"#utility.yul\":5184:5187   */\n      dup4\n        /* \"#utility.yul\":5125:5192   */\n      tag_178\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5118:5192   */\n      swap2\n      pop\n        /* \"#utility.yul\":5201:5294   */\n      tag_199\n        /* \"#utility.yul\":5290:5293   */\n      dup3\n        /* \"#utility.yul\":5201:5294   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5319:5321   */\n      0x20\n        /* \"#utility.yul\":5314:5317   */\n      dup3\n        /* \"#utility.yul\":5310:5322   */\n      add\n        /* \"#utility.yul\":5303:5322   */\n      swap1\n      pop\n        /* \"#utility.yul\":4962:5328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5334:5452   */\n    tag_201:\n        /* \"#utility.yul\":5421:5445   */\n      tag_203\n        /* \"#utility.yul\":5439:5444   */\n      dup2\n        /* \"#utility.yul\":5421:5445   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5416:5419   */\n      dup3\n        /* \"#utility.yul\":5409:5446   */\n      mstore\n        /* \"#utility.yul\":5334:5452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5458:5680   */\n    tag_42:\n        /* \"#utility.yul\":5551:5555   */\n      0x00\n        /* \"#utility.yul\":5589:5591   */\n      0x20\n        /* \"#utility.yul\":5578:5587   */\n      dup3\n        /* \"#utility.yul\":5574:5592   */\n      add\n        /* \"#utility.yul\":5566:5592   */\n      swap1\n      pop\n        /* \"#utility.yul\":5602:5673   */\n      tag_206\n        /* \"#utility.yul\":5670:5671   */\n      0x00\n        /* \"#utility.yul\":5659:5668   */\n      dup4\n        /* \"#utility.yul\":5655:5672   */\n      add\n        /* \"#utility.yul\":5646:5652   */\n      dup5\n        /* \"#utility.yul\":5602:5673   */\n      tag_167\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5458:5680   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5686:6128   */\n    tag_72:\n        /* \"#utility.yul\":5835:5839   */\n      0x00\n        /* \"#utility.yul\":5873:5875   */\n      0x60\n        /* \"#utility.yul\":5862:5871   */\n      dup3\n        /* \"#utility.yul\":5858:5876   */\n      add\n        /* \"#utility.yul\":5850:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5886:5957   */\n      tag_208\n        /* \"#utility.yul\":5954:5955   */\n      0x00\n        /* \"#utility.yul\":5943:5952   */\n      dup4\n        /* \"#utility.yul\":5939:5956   */\n      add\n        /* \"#utility.yul\":5930:5936   */\n      dup7\n        /* \"#utility.yul\":5886:5957   */\n      tag_167\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5967:6039   */\n      tag_209\n        /* \"#utility.yul\":6035:6037   */\n      0x20\n        /* \"#utility.yul\":6024:6033   */\n      dup4\n        /* \"#utility.yul\":6020:6038   */\n      add\n        /* \"#utility.yul\":6011:6017   */\n      dup6\n        /* \"#utility.yul\":5967:6039   */\n      tag_167\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":6049:6121   */\n      tag_210\n        /* \"#utility.yul\":6117:6119   */\n      0x40\n        /* \"#utility.yul\":6106:6115   */\n      dup4\n        /* \"#utility.yul\":6102:6120   */\n      add\n        /* \"#utility.yul\":6093:6099   */\n      dup5\n        /* \"#utility.yul\":6049:6121   */\n      tag_201\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5686:6128   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6134:6352   */\n    tag_28:\n        /* \"#utility.yul\":6225:6229   */\n      0x00\n        /* \"#utility.yul\":6263:6265   */\n      0x20\n        /* \"#utility.yul\":6252:6261   */\n      dup3\n        /* \"#utility.yul\":6248:6266   */\n      add\n        /* \"#utility.yul\":6240:6266   */\n      swap1\n      pop\n        /* \"#utility.yul\":6276:6345   */\n      tag_212\n        /* \"#utility.yul\":6342:6343   */\n      0x00\n        /* \"#utility.yul\":6331:6340   */\n      dup4\n        /* \"#utility.yul\":6327:6344   */\n      add\n        /* \"#utility.yul\":6318:6324   */\n      dup5\n        /* \"#utility.yul\":6276:6345   */\n      tag_171\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6134:6352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6358:6777   */\n    tag_103:\n        /* \"#utility.yul\":6524:6528   */\n      0x00\n        /* \"#utility.yul\":6562:6564   */\n      0x20\n        /* \"#utility.yul\":6551:6560   */\n      dup3\n        /* \"#utility.yul\":6547:6565   */\n      add\n        /* \"#utility.yul\":6539:6565   */\n      swap1\n      pop\n        /* \"#utility.yul\":6611:6620   */\n      dup2\n        /* \"#utility.yul\":6605:6609   */\n      dup2\n        /* \"#utility.yul\":6601:6621   */\n      sub\n        /* \"#utility.yul\":6597:6598   */\n      0x00\n        /* \"#utility.yul\":6586:6595   */\n      dup4\n        /* \"#utility.yul\":6582:6599   */\n      add\n        /* \"#utility.yul\":6575:6622   */\n      mstore\n        /* \"#utility.yul\":6639:6770   */\n      tag_214\n        /* \"#utility.yul\":6765:6769   */\n      dup2\n        /* \"#utility.yul\":6639:6770   */\n      tag_175\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6631:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6358:6777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:7202   */\n    tag_95:\n        /* \"#utility.yul\":6949:6953   */\n      0x00\n        /* \"#utility.yul\":6987:6989   */\n      0x20\n        /* \"#utility.yul\":6976:6985   */\n      dup3\n        /* \"#utility.yul\":6972:6990   */\n      add\n        /* \"#utility.yul\":6964:6990   */\n      swap1\n      pop\n        /* \"#utility.yul\":7036:7045   */\n      dup2\n        /* \"#utility.yul\":7030:7034   */\n      dup2\n        /* \"#utility.yul\":7026:7046   */\n      sub\n        /* \"#utility.yul\":7022:7023   */\n      0x00\n        /* \"#utility.yul\":7011:7020   */\n      dup4\n        /* \"#utility.yul\":7007:7024   */\n      add\n        /* \"#utility.yul\":7000:7047   */\n      mstore\n        /* \"#utility.yul\":7064:7195   */\n      tag_216\n        /* \"#utility.yul\":7190:7194   */\n      dup2\n        /* \"#utility.yul\":7064:7195   */\n      tag_181\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7056:7195   */\n      swap1\n      pop\n        /* \"#utility.yul\":6783:7202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7627   */\n    tag_110:\n        /* \"#utility.yul\":7374:7378   */\n      0x00\n        /* \"#utility.yul\":7412:7414   */\n      0x20\n        /* \"#utility.yul\":7401:7410   */\n      dup3\n        /* \"#utility.yul\":7397:7415   */\n      add\n        /* \"#utility.yul\":7389:7415   */\n      swap1\n      pop\n        /* \"#utility.yul\":7461:7470   */\n      dup2\n        /* \"#utility.yul\":7455:7459   */\n      dup2\n        /* \"#utility.yul\":7451:7471   */\n      sub\n        /* \"#utility.yul\":7447:7448   */\n      0x00\n        /* \"#utility.yul\":7436:7445   */\n      dup4\n        /* \"#utility.yul\":7432:7449   */\n      add\n        /* \"#utility.yul\":7425:7472   */\n      mstore\n        /* \"#utility.yul\":7489:7620   */\n      tag_218\n        /* \"#utility.yul\":7615:7619   */\n      dup2\n        /* \"#utility.yul\":7489:7620   */\n      tag_186\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7481:7620   */\n      swap1\n      pop\n        /* \"#utility.yul\":7208:7627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7633:8052   */\n    tag_68:\n        /* \"#utility.yul\":7799:7803   */\n      0x00\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"#utility.yul\":7826:7835   */\n      dup3\n        /* \"#utility.yul\":7822:7840   */\n      add\n        /* \"#utility.yul\":7814:7840   */\n      swap1\n      pop\n        /* \"#utility.yul\":7886:7895   */\n      dup2\n        /* \"#utility.yul\":7880:7884   */\n      dup2\n        /* \"#utility.yul\":7876:7896   */\n      sub\n        /* \"#utility.yul\":7872:7873   */\n      0x00\n        /* \"#utility.yul\":7861:7870   */\n      dup4\n        /* \"#utility.yul\":7857:7874   */\n      add\n        /* \"#utility.yul\":7850:7897   */\n      mstore\n        /* \"#utility.yul\":7914:8045   */\n      tag_220\n        /* \"#utility.yul\":8040:8044   */\n      dup2\n        /* \"#utility.yul\":7914:8045   */\n      tag_191\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7906:8045   */\n      swap1\n      pop\n        /* \"#utility.yul\":7633:8052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8058:8477   */\n    tag_64:\n        /* \"#utility.yul\":8224:8228   */\n      0x00\n        /* \"#utility.yul\":8262:8264   */\n      0x20\n        /* \"#utility.yul\":8251:8260   */\n      dup3\n        /* \"#utility.yul\":8247:8265   */\n      add\n        /* \"#utility.yul\":8239:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8311:8320   */\n      dup2\n        /* \"#utility.yul\":8305:8309   */\n      dup2\n        /* \"#utility.yul\":8301:8321   */\n      sub\n        /* \"#utility.yul\":8297:8298   */\n      0x00\n        /* \"#utility.yul\":8286:8295   */\n      dup4\n        /* \"#utility.yul\":8282:8299   */\n      add\n        /* \"#utility.yul\":8275:8322   */\n      mstore\n        /* \"#utility.yul\":8339:8470   */\n      tag_222\n        /* \"#utility.yul\":8465:8469   */\n      dup2\n        /* \"#utility.yul\":8339:8470   */\n      tag_196\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8331:8470   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8483:8705   */\n    tag_21:\n        /* \"#utility.yul\":8576:8580   */\n      0x00\n        /* \"#utility.yul\":8614:8616   */\n      0x20\n        /* \"#utility.yul\":8603:8612   */\n      dup3\n        /* \"#utility.yul\":8599:8617   */\n      add\n        /* \"#utility.yul\":8591:8617   */\n      swap1\n      pop\n        /* \"#utility.yul\":8627:8698   */\n      tag_224\n        /* \"#utility.yul\":8695:8696   */\n      0x00\n        /* \"#utility.yul\":8684:8693   */\n      dup4\n        /* \"#utility.yul\":8680:8697   */\n      add\n        /* \"#utility.yul\":8671:8677   */\n      dup5\n        /* \"#utility.yul\":8627:8698   */\n      tag_201\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8483:8705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8711:8840   */\n    tag_120:\n        /* \"#utility.yul\":8745:8751   */\n      0x00\n        /* \"#utility.yul\":8772:8792   */\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8762:8792   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:8834   */\n      tag_228\n        /* \"#utility.yul\":8829:8833   */\n      dup3\n        /* \"#utility.yul\":8821:8827   */\n      dup3\n        /* \"#utility.yul\":8801:8834   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8711:8840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8846:8921   */\n    tag_227:\n        /* \"#utility.yul\":8879:8885   */\n      0x00\n        /* \"#utility.yul\":8912:8914   */\n      0x40\n        /* \"#utility.yul\":8906:8915   */\n      mload\n        /* \"#utility.yul\":8896:8915   */\n      swap1\n      pop\n        /* \"#utility.yul\":8846:8921   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":8927:9234   */\n    tag_119:\n        /* \"#utility.yul\":8988:8992   */\n      0x00\n        /* \"#utility.yul\":9078:9096   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9070:9076   */\n      dup3\n        /* \"#utility.yul\":9067:9097   */\n      gt\n        /* \"#utility.yul\":9064:9120   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":9100:9118   */\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9064:9120   */\n    tag_232:\n        /* \"#utility.yul\":9138:9167   */\n      tag_235\n        /* \"#utility.yul\":9160:9166   */\n      dup3\n        /* \"#utility.yul\":9138:9167   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":9130:9167   */\n      swap1\n      pop\n        /* \"#utility.yul\":9222:9226   */\n      0x20\n        /* \"#utility.yul\":9216:9220   */\n      dup2\n        /* \"#utility.yul\":9212:9227   */\n      add\n        /* \"#utility.yul\":9204:9227   */\n      swap1\n      pop\n        /* \"#utility.yul\":8927:9234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9240:9409   */\n    tag_178:\n        /* \"#utility.yul\":9324:9335   */\n      0x00\n        /* \"#utility.yul\":9358:9364   */\n      dup3\n        /* \"#utility.yul\":9353:9356   */\n      dup3\n        /* \"#utility.yul\":9346:9365   */\n      mstore\n        /* \"#utility.yul\":9398:9402   */\n      0x20\n        /* \"#utility.yul\":9393:9396   */\n      dup3\n        /* \"#utility.yul\":9389:9403   */\n      add\n        /* \"#utility.yul\":9374:9403   */\n      swap1\n      pop\n        /* \"#utility.yul\":9240:9409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9511   */\n    tag_170:\n        /* \"#utility.yul\":9452:9459   */\n      0x00\n        /* \"#utility.yul\":9481:9505   */\n      tag_239\n        /* \"#utility.yul\":9499:9504   */\n      dup3\n        /* \"#utility.yul\":9481:9505   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9470:9505   */\n      swap1\n      pop\n        /* \"#utility.yul\":9415:9511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9517:9666   */\n    tag_174:\n        /* \"#utility.yul\":9553:9560   */\n      0x00\n        /* \"#utility.yul\":9593:9659   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9586:9591   */\n      dup3\n        /* \"#utility.yul\":9582:9660   */\n      and\n        /* \"#utility.yul\":9571:9660   */\n      swap1\n      pop\n        /* \"#utility.yul\":9517:9666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9672:9783   */\n    tag_242:\n        /* \"#utility.yul\":9724:9731   */\n      0x00\n        /* \"#utility.yul\":9753:9777   */\n      tag_244\n        /* \"#utility.yul\":9771:9776   */\n      dup3\n        /* \"#utility.yul\":9753:9777   */\n      tag_170\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9742:9777   */\n      swap1\n      pop\n        /* \"#utility.yul\":9672:9783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9789:9915   */\n    tag_240:\n        /* \"#utility.yul\":9826:9833   */\n      0x00\n        /* \"#utility.yul\":9866:9908   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9859:9864   */\n      dup3\n        /* \"#utility.yul\":9855:9909   */\n      and\n        /* \"#utility.yul\":9844:9909   */\n      swap1\n      pop\n        /* \"#utility.yul\":9789:9915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9921:9998   */\n    tag_204:\n        /* \"#utility.yul\":9958:9965   */\n      0x00\n        /* \"#utility.yul\":9987:9992   */\n      dup2\n        /* \"#utility.yul\":9976:9992   */\n      swap1\n      pop\n        /* \"#utility.yul\":9921:9998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10004:10158   */\n    tag_125:\n        /* \"#utility.yul\":10088:10094   */\n      dup3\n        /* \"#utility.yul\":10083:10086   */\n      dup2\n        /* \"#utility.yul\":10078:10081   */\n      dup4\n        /* \"#utility.yul\":10065:10095   */\n      calldatacopy\n        /* \"#utility.yul\":10150:10151   */\n      0x00\n        /* \"#utility.yul\":10141:10147   */\n      dup4\n        /* \"#utility.yul\":10136:10139   */\n      dup4\n        /* \"#utility.yul\":10132:10148   */\n      add\n        /* \"#utility.yul\":10125:10152   */\n      mstore\n        /* \"#utility.yul\":10004:10158   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10445   */\n    tag_229:\n        /* \"#utility.yul\":10247:10274   */\n      tag_249\n        /* \"#utility.yul\":10269:10273   */\n      dup3\n        /* \"#utility.yul\":10247:10274   */\n      tag_236\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10239:10245   */\n      dup2\n        /* \"#utility.yul\":10235:10275   */\n      add\n        /* \"#utility.yul\":10377:10383   */\n      dup2\n        /* \"#utility.yul\":10365:10375   */\n      dup2\n        /* \"#utility.yul\":10362:10384   */\n      lt\n        /* \"#utility.yul\":10341:10359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10329:10339   */\n      dup3\n        /* \"#utility.yul\":10326:10360   */\n      gt\n        /* \"#utility.yul\":10323:10385   */\n      or\n        /* \"#utility.yul\":10320:10408   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":10388:10406   */\n      tag_251\n      tag_234\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10320:10408   */\n    tag_250:\n        /* \"#utility.yul\":10428:10438   */\n      dup1\n        /* \"#utility.yul\":10424:10426   */\n      0x40\n        /* \"#utility.yul\":10417:10439   */\n      mstore\n        /* \"#utility.yul\":10207:10445   */\n      pop\n        /* \"#utility.yul\":10164:10445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10451:10631   */\n    tag_234:\n        /* \"#utility.yul\":10499:10576   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10496:10497   */\n      0x00\n        /* \"#utility.yul\":10489:10577   */\n      mstore\n        /* \"#utility.yul\":10596:10600   */\n      0x41\n        /* \"#utility.yul\":10593:10594   */\n      0x04\n        /* \"#utility.yul\":10586:10601   */\n      mstore\n        /* \"#utility.yul\":10620:10624   */\n      0x24\n        /* \"#utility.yul\":10617:10618   */\n      0x00\n        /* \"#utility.yul\":10610:10625   */\n      revert\n        /* \"#utility.yul\":10637:10754   */\n    tag_134:\n        /* \"#utility.yul\":10746:10747   */\n      0x00\n        /* \"#utility.yul\":10743:10744   */\n      dup1\n        /* \"#utility.yul\":10736:10748   */\n      revert\n        /* \"#utility.yul\":10760:10877   */\n    tag_123:\n        /* \"#utility.yul\":10869:10870   */\n      0x00\n        /* \"#utility.yul\":10866:10867   */\n      dup1\n        /* \"#utility.yul\":10859:10871   */\n      revert\n        /* \"#utility.yul\":10883:11000   */\n    tag_157:\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10989:10990   */\n      dup1\n        /* \"#utility.yul\":10982:10994   */\n      revert\n        /* \"#utility.yul\":11006:11123   */\n    tag_147:\n        /* \"#utility.yul\":11115:11116   */\n      0x00\n        /* \"#utility.yul\":11112:11113   */\n      dup1\n        /* \"#utility.yul\":11105:11117   */\n      revert\n        /* \"#utility.yul\":11129:11231   */\n    tag_236:\n        /* \"#utility.yul\":11170:11176   */\n      0x00\n        /* \"#utility.yul\":11221:11223   */\n      0x1f\n        /* \"#utility.yul\":11217:11224   */\n      not\n        /* \"#utility.yul\":11212:11214   */\n      0x1f\n        /* \"#utility.yul\":11205:11210   */\n      dup4\n        /* \"#utility.yul\":11201:11215   */\n      add\n        /* \"#utility.yul\":11197:11225   */\n      and\n        /* \"#utility.yul\":11187:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":11129:11231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11237:11414   */\n    tag_180:\n        /* \"#utility.yul\":11377:11406   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":11373:11374   */\n      0x00\n        /* \"#utility.yul\":11365:11371   */\n      dup3\n        /* \"#utility.yul\":11361:11375   */\n      add\n        /* \"#utility.yul\":11354:11407   */\n      mstore\n        /* \"#utility.yul\":11237:11414   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11420:11645   */\n    tag_185:\n        /* \"#utility.yul\":11560:11594   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11556:11557   */\n      0x00\n        /* \"#utility.yul\":11548:11554   */\n      dup3\n        /* \"#utility.yul\":11544:11558   */\n      add\n        /* \"#utility.yul\":11537:11595   */\n      mstore\n        /* \"#utility.yul\":11629:11637   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11624:11626   */\n      0x20\n        /* \"#utility.yul\":11616:11622   */\n      dup3\n        /* \"#utility.yul\":11612:11627   */\n      add\n        /* \"#utility.yul\":11605:11638   */\n      mstore\n        /* \"#utility.yul\":11420:11645   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11651:11833   */\n    tag_190:\n        /* \"#utility.yul\":11791:11825   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11787:11788   */\n      0x00\n        /* \"#utility.yul\":11779:11785   */\n      dup3\n        /* \"#utility.yul\":11775:11789   */\n      add\n        /* \"#utility.yul\":11768:11826   */\n      mstore\n        /* \"#utility.yul\":11651:11833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11839:12011   */\n    tag_195:\n        /* \"#utility.yul\":11979:12003   */\n      0x596f7520617265206e6f7420746865206f776e65722e00000000000000000000\n        /* \"#utility.yul\":11975:11976   */\n      0x00\n        /* \"#utility.yul\":11967:11973   */\n      dup3\n        /* \"#utility.yul\":11963:11977   */\n      add\n        /* \"#utility.yul\":11956:12004   */\n      mstore\n        /* \"#utility.yul\":11839:12011   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12017:12198   */\n    tag_200:\n        /* \"#utility.yul\":12157:12190   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":12153:12154   */\n      0x00\n        /* \"#utility.yul\":12145:12151   */\n      dup3\n        /* \"#utility.yul\":12141:12155   */\n      add\n        /* \"#utility.yul\":12134:12191   */\n      mstore\n        /* \"#utility.yul\":12017:12198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12204:12326   */\n    tag_129:\n        /* \"#utility.yul\":12277:12301   */\n      tag_264\n        /* \"#utility.yul\":12295:12300   */\n      dup2\n        /* \"#utility.yul\":12277:12301   */\n      tag_170\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":12270:12275   */\n      dup2\n        /* \"#utility.yul\":12267:12302   */\n      eq\n        /* \"#utility.yul\":12257:12320   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":12316:12317   */\n      0x00\n        /* \"#utility.yul\":12313:12314   */\n      dup1\n        /* \"#utility.yul\":12306:12318   */\n      revert\n        /* \"#utility.yul\":12257:12320   */\n    tag_265:\n        /* \"#utility.yul\":12204:12326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12332:12484   */\n    tag_139:\n        /* \"#utility.yul\":12420:12459   */\n      tag_267\n        /* \"#utility.yul\":12453:12458   */\n      dup2\n        /* \"#utility.yul\":12420:12459   */\n      tag_242\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":12413:12418   */\n      dup2\n        /* \"#utility.yul\":12410:12460   */\n      eq\n        /* \"#utility.yul\":12400:12478   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":12474:12475   */\n      0x00\n        /* \"#utility.yul\":12471:12472   */\n      dup1\n        /* \"#utility.yul\":12464:12476   */\n      revert\n        /* \"#utility.yul\":12400:12478   */\n    tag_268:\n        /* \"#utility.yul\":12332:12484   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12490:12612   */\n    tag_143:\n        /* \"#utility.yul\":12563:12587   */\n      tag_270\n        /* \"#utility.yul\":12581:12586   */\n      dup2\n        /* \"#utility.yul\":12563:12587   */\n      tag_204\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":12556:12561   */\n      dup2\n        /* \"#utility.yul\":12553:12588   */\n      eq\n        /* \"#utility.yul\":12543:12606   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12599:12600   */\n      dup1\n        /* \"#utility.yul\":12592:12604   */\n      revert\n        /* \"#utility.yul\":12543:12606   */\n    tag_271:\n        /* \"#utility.yul\":12490:12612   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a0a3ef79708b2a5dfb5ff9894156569a548b964937c13678ca16e5956063d00164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 166,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 174,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC721_$268_fromMemory": {
									"entryPoint": 370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$268_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$268": {
									"entryPoint": 463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$268": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1406:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "85:95:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "95:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "110:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "104:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "168:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$268",
																	"nodeType": "YulIdentifier",
																	"src": "126:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "126:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "126:48:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$268_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "63:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "71:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "79:5:9",
														"type": ""
													}
												],
												"src": "7:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "278:289:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "324:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "326:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "326:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "326:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "299:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "308:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "295:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "295:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:32:9"
															},
															"nodeType": "YulIf",
															"src": "288:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "417:143:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "432:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "436:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "461:89:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "522:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "533:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "518:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "518:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "542:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$268_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "471:46:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "471:79:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "461:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$268_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "248:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "259:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "271:6:9",
														"type": ""
													}
												],
												"src": "186:381:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "623:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "639:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "633:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "633:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "623:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "606:6:9",
														"type": ""
													}
												],
												"src": "573:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "738:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "720:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "720:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "709:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "681:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "691:7:9",
														"type": ""
													}
												],
												"src": "654:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "816:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "826:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "855:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "837:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "837:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "826:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "798:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "808:7:9",
														"type": ""
													}
												],
												"src": "756:111:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "918:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "928:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "943:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "950:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "939:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "928:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "900:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "910:7:9",
														"type": ""
													}
												],
												"src": "873:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1094:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1111:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1114:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1104:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1104:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1005:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1237:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1227:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1128:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:94:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1381:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1393:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1383:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1383:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1383:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1332:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1372:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$268",
																					"nodeType": "YulIdentifier",
																					"src": "1339:32:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1339:39:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1329:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:50:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1322:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:58:9"
															},
															"nodeType": "YulIf",
															"src": "1319:78:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1302:5:9",
														"type": ""
													}
												],
												"src": "1251:152:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC721_$268_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$268(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$268_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$268_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$268(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC721_$268(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$268(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620010e7380380620010e7833981810160405281019062000037919062000189565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000222565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001838162000208565b92915050565b600060208284031215620001a257620001a162000203565b5b6000620001b28482850162000172565b91505092915050565b6000620001c882620001e3565b9050919050565b6000620001dc82620001bb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200021381620001cf565b81146200021f57600080fd5b50565b610eb580620002326000396000f3fe60806040526004361061008a5760003560e01c80638488cc41116100595780638488cc41146101505780638da5cb5b1461018d578063a694fc3a146101b8578063f2fde38b146101e1578063fd71c6501461020a57610091565b80630700037d14610096578063150b7a02146100d35780632e17de7814610110578063715018a61461013957610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906108c4565b610233565b6040516100ca9190610bb7565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f591906108f1565b61024b565b6040516101079190610afc565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906109a1565b61025f565b005b34801561014557600080fd5b5061014e610429565b005b34801561015c57600080fd5b50610177600480360381019061017291906109a1565b61043d565b6040516101849190610aaa565b60405180910390f35b34801561019957600080fd5b506101a2610470565b6040516101af9190610aaa565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da91906109a1565b610499565b005b3480156101ed57600080fd5b50610208600480360381019061020391906108c4565b610589565b005b34801561021657600080fd5b50610231600480360381019061022c9190610974565b61060d565b005b60056020528060005260406000206000915090505481565b600063150b7a0260e01b9050949350505050565b600260015414156102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610b97565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034590610b77565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561038e6003610659565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033846040518463ffffffff1660e01b81526004016103ed93929190610ac5565b600060405180830381600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b505050506001808190555050565b6104316106b5565b61043b6000610733565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b81526004016104f893929190610ac5565b600060405180830381600087803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061058660036107f7565b50565b6105916106b5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890610b37565b60405180910390fd5b61060a81610733565b50565b6106156106b5565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600001549050600081116106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610b17565b60405180910390fd5b6001810382600001819055505050565b6106bd61080d565b73ffffffffffffffffffffffffffffffffffffffff166106db610470565b73ffffffffffffffffffffffffffffffffffffffff1614610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610b57565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600061082861082384610bf7565b610bd2565b90508281526020810184848401111561084457610843610d27565b5b61084f848285610cb3565b509392505050565b60008135905061086681610e3a565b92915050565b600082601f83011261088157610880610d22565b5b8135610891848260208601610815565b91505092915050565b6000813590506108a981610e51565b92915050565b6000813590506108be81610e68565b92915050565b6000602082840312156108da576108d9610d31565b5b60006108e884828501610857565b91505092915050565b6000806000806080858703121561090b5761090a610d31565b5b600061091987828801610857565b945050602061092a87828801610857565b935050604061093b878288016108af565b925050606085013567ffffffffffffffff81111561095c5761095b610d2c565b5b6109688782880161086c565b91505092959194509250565b60006020828403121561098a57610989610d31565b5b60006109988482850161089a565b91505092915050565b6000602082840312156109b7576109b6610d31565b5b60006109c5848285016108af565b91505092915050565b6109d781610c39565b82525050565b6109e681610c4b565b82525050565b60006109f9601b83610c28565b9150610a0482610d47565b602082019050919050565b6000610a1c602683610c28565b9150610a2782610d70565b604082019050919050565b6000610a3f602083610c28565b9150610a4a82610dbf565b602082019050919050565b6000610a62601683610c28565b9150610a6d82610de8565b602082019050919050565b6000610a85601f83610c28565b9150610a9082610e11565b602082019050919050565b610aa481610ca9565b82525050565b6000602082019050610abf60008301846109ce565b92915050565b6000606082019050610ada60008301866109ce565b610ae760208301856109ce565b610af46040830184610a9b565b949350505050565b6000602082019050610b1160008301846109dd565b92915050565b60006020820190508181036000830152610b30816109ec565b9050919050565b60006020820190508181036000830152610b5081610a0f565b9050919050565b60006020820190508181036000830152610b7081610a32565b9050919050565b60006020820190508181036000830152610b9081610a55565b9050919050565b60006020820190508181036000830152610bb081610a78565b9050919050565b6000602082019050610bcc6000830184610a9b565b92915050565b6000610bdc610bed565b9050610be88282610cc2565b919050565b6000604051905090565b600067ffffffffffffffff821115610c1257610c11610cf3565b5b610c1b82610d36565b9050602081019050919050565b600082825260208201905092915050565b6000610c4482610c89565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610c8282610c39565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610ccb82610d36565b810181811067ffffffffffffffff82111715610cea57610ce9610cf3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610e4381610c39565b8114610e4e57600080fd5b50565b610e5a81610c77565b8114610e6557600080fd5b50565b610e7181610ca9565b8114610e7c57600080fd5b5056fea2646970667358221220a0a3ef79708b2a5dfb5ff9894156569a548b964937c13678ca16e5956063d00164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10E7 CODESIZE SUB DUP1 PUSH3 0x10E7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x189 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xA6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x222 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x183 DUP2 PUSH3 0x208 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1A2 JUMPI PUSH3 0x1A1 PUSH3 0x203 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1B2 DUP5 DUP3 DUP6 ADD PUSH3 0x172 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C8 DUP3 PUSH3 0x1E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DC DUP3 PUSH3 0x1BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x213 DUP2 PUSH3 0x1CF JUMP JUMPDEST DUP2 EQ PUSH3 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xEB5 DUP1 PUSH3 0x232 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8488CC41 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x20A JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x139 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x38E PUSH1 0x3 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x43B PUSH1 0x0 PUSH2 0x733 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x586 PUSH1 0x3 PUSH2 0x7F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A DUP2 PUSH2 0x733 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x6B5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x80D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6DB PUSH2 0x470 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x828 PUSH2 0x823 DUP5 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x843 PUSH2 0xD27 JUMP JUMPDEST JUMPDEST PUSH2 0x84F DUP5 DUP3 DUP6 PUSH2 0xCB3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0xD22 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x891 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x815 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A9 DUP2 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BE DUP2 PUSH2 0xE68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DA JUMPI PUSH2 0x8D9 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E8 DUP5 DUP3 DUP6 ADD PUSH2 0x857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP8 DUP3 DUP9 ADD PUSH2 0x857 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x92A DUP8 DUP3 DUP9 ADD PUSH2 0x857 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x93B DUP8 DUP3 DUP9 ADD PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0xD2C JUMP JUMPDEST JUMPDEST PUSH2 0x968 DUP8 DUP3 DUP9 ADD PUSH2 0x86C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP5 DUP3 DUP6 ADD PUSH2 0x89A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP5 DUP3 DUP6 ADD PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xC39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0xC4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x1B DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA04 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1C PUSH1 0x26 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA27 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F PUSH1 0x20 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4A DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA62 PUSH1 0x16 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6D DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA85 PUSH1 0x1F DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA90 DUP3 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA4 DUP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0xAE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0xAF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB30 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB50 DUP2 PUSH2 0xA0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB70 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB90 DUP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBB0 DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDC PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH2 0xBE8 DUP3 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC12 JUMPI PUSH2 0xC11 PUSH2 0xCF3 JUMP JUMPDEST JUMPDEST PUSH2 0xC1B DUP3 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 DUP3 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC82 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCCB DUP3 PUSH2 0xD36 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCE9 PUSH2 0xCF3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xC39 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP2 EQ PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE71 DUP2 PUSH2 0xCA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LOG3 0xEF PUSH26 0x708B2A5DFB5FF9894156569A548B964937C13678CA16E5956063 0xD0 ADD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:1324:8:-:0;;;894:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1701:1:1;1806:7;:22;;;;954:12:8;939;;:27;;;;;;;;;;;;;;;;;;894:79;386:1324;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:173:9:-;79:5;110:6;104:13;95:22;;126:48;168:5;126:48;:::i;:::-;7:173;;;;:::o;186:381::-;271:6;320:2;308:9;299:7;295:23;291:32;288:119;;;326:79;;:::i;:::-;288:119;446:1;471:79;542:7;533:6;522:9;518:22;471:79;:::i;:::-;461:89;;417:143;186:381;;;;:::o;654:96::-;691:7;720:24;738:5;720:24;:::i;:::-;709:35;;654:96;;;:::o;756:111::-;808:7;837:24;855:5;837:24;:::i;:::-;826:35;;756:111;;;:::o;873:126::-;910:7;950:42;943:5;939:54;928:65;;873:126;;;:::o;1128:117::-;1237:1;1234;1227:12;1251:152;1339:39;1372:5;1339:39;:::i;:::-;1332:5;1329:50;1319:78;;1393:1;1390;1383:12;1319:78;1251:152;:::o;386:1324:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 1717,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": 2061,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1843,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decrement_395": {
									"entryPoint": 1625,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_367": {
									"entryPoint": 2039,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": 587,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1136,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1065,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_474": {
									"entryPoint": 563,
									"id": 474,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_501": {
									"entryPoint": 1549,
									"id": 501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_531": {
									"entryPoint": 1177,
									"id": 531,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnedBy_470": {
									"entryPoint": 1085,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1417,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_571": {
									"entryPoint": 607,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$268": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_contract$_IERC721_$268": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 3063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$268": {
									"entryPoint": 3191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3315,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3362,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3377,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$268": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12615:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:9"
															},
															"nodeType": "YulIf",
															"src": "249:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:9",
														"type": ""
													}
												],
												"src": "7:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:9",
														"type": ""
													}
												],
												"src": "423:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:9"
															},
															"nodeType": "YulIf",
															"src": "652:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:9",
														"type": ""
													}
												],
												"src": "581:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "992:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1002:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1011:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1002:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1082:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$268",
																	"nodeType": "YulIdentifier",
																	"src": "1040:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1040:48:9"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "970:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "978:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "986:5:9",
														"type": ""
													}
												],
												"src": "925:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1152:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1162:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1184:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1171:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1171:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1162:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1200:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1130:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1138:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1146:5:9",
														"type": ""
													}
												],
												"src": "1100:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1311:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1357:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1359:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1359:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1359:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1332:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1341:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1328:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1353:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:32:9"
															},
															"nodeType": "YulIf",
															"src": "1321:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1450:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1465:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1469:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1494:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1529:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1540:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1525:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1525:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1549:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1504:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1504:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1494:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1281:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1292:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1304:6:9",
														"type": ""
													}
												],
												"src": "1245:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1706:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1753:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1755:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1755:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1727:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1736:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1748:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:33:9"
															},
															"nodeType": "YulIf",
															"src": "1716:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "1846:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1861:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1865:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1890:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1925:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1936:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1921:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1921:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1945:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1900:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1900:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1890:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1973:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1988:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2002:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1992:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2018:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2064:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2073:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2028:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2101:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2116:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2130:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2120:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2146:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2181:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2192:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2177:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2177:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2201:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2156:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2146:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2229:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2244:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2275:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2286:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2271:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2271:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2258:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2258:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2248:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2337:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2339:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2339:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2339:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2309:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2317:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2306:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "2303:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2434:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2478:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2489:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2474:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2474:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2498:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2444:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2434:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1652:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1663:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1675:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1683:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1691:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1699:6:9",
														"type": ""
													}
												],
												"src": "1580:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2610:278:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2656:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2658:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2658:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2658:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2631:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2640:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2652:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:32:9"
															},
															"nodeType": "YulIf",
															"src": "2620:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2749:132:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2764:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2768:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2793:78:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2843:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2854:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2839:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2839:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2863:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$268",
																			"nodeType": "YulIdentifier",
																			"src": "2803:35:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:68:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2793:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2580:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2591:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2603:6:9",
														"type": ""
													}
												],
												"src": "2529:359:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2960:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3006:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3008:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3008:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3008:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2981:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2990:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2977:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3002:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2973:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2973:32:9"
															},
															"nodeType": "YulIf",
															"src": "2970:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3099:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3114:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3118:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3143:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3178:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3189:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3174:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3198:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3153:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3143:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2930:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2941:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2953:6:9",
														"type": ""
													}
												],
												"src": "2894:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3294:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3311:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3334:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3316:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3316:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3304:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3304:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3304:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3282:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3289:3:9",
														"type": ""
													}
												],
												"src": "3229:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3433:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3455:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3438:16:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:36:9"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3404:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3411:3:9",
														"type": ""
													}
												],
												"src": "3353:115:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3620:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3630:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3696:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3637:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3630:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3802:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nodeType": "YulIdentifier",
																	"src": "3713:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3713:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3713:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3815:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3826:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3831:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3822:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3822:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3608:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3616:3:9",
														"type": ""
													}
												],
												"src": "3474:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3992:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4002:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4068:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4073:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4009:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4009:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4174:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4085:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4085:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4187:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4187:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3980:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3988:3:9",
														"type": ""
													}
												],
												"src": "3846:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4364:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4374:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4440:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4381:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4546:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4457:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4457:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4457:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4559:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4570:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4566:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4566:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4559:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4352:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4360:3:9",
														"type": ""
													}
												],
												"src": "4218:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4736:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4746:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4812:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4817:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4753:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4753:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4746:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4918:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																	"nodeType": "YulIdentifier",
																	"src": "4829:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4829:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4931:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4942:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4947:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4724:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4732:3:9",
														"type": ""
													}
												],
												"src": "4590:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5108:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5118:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5184:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5125:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5290:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "5201:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5201:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5201:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5310:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5303:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5096:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5104:3:9",
														"type": ""
													}
												],
												"src": "4962:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5399:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5416:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5439:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5421:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5421:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5387:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5394:3:9",
														"type": ""
													}
												],
												"src": "5334:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5556:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5566:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5578:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5566:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5646:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5670:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5655:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5655:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5602:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5602:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5528:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5540:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5551:4:9",
														"type": ""
													}
												],
												"src": "5458:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5840:288:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5850:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5862:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5873:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5858:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5858:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5850:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5943:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5954:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5939:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5886:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6011:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6024:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6035:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6020:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6020:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5967:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5967:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5967:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6093:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6106:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6117:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6102:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6102:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6049:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6049:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6049:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5796:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5808:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5816:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5824:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5835:4:9",
														"type": ""
													}
												],
												"src": "5686:442:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6230:122:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6240:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6252:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6263:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6248:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6240:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6318:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6331:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6342:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6327:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6276:41:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6276:69:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6276:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6202:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6214:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6225:4:9",
														"type": ""
													}
												],
												"src": "6134:218:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6529:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6539:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6551:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6562:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6586:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6597:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6582:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6605:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6611:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6575:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6575:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6631:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6765:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6639:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6639:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6631:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6509:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6524:4:9",
														"type": ""
													}
												],
												"src": "6358:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6954:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6964:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6976:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6972:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6972:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6964:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7011:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7022:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7007:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7030:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7026:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7000:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7000:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7056:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7190:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7064:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7064:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6934:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6949:4:9",
														"type": ""
													}
												],
												"src": "6783:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7379:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7389:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7401:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7397:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7397:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7389:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7436:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7447:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7432:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7432:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7455:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7461:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7451:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7425:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7425:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7425:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7481:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7615:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7489:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7489:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7481:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7359:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7374:4:9",
														"type": ""
													}
												],
												"src": "7208:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7804:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7814:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7826:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7822:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7814:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7872:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7857:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7880:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7886:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7876:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7876:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7850:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7850:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7906:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8040:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7914:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7906:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7784:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7799:4:9",
														"type": ""
													}
												],
												"src": "7633:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8239:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8251:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8262:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8286:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8297:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8282:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8305:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8311:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8301:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8275:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8275:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8331:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8465:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8339:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8339:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8331:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8209:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8224:4:9",
														"type": ""
													}
												],
												"src": "8058:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8581:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8591:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8603:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8614:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8599:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8599:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8591:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8684:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8695:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8627:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8627:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8627:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8553:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8565:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8576:4:9",
														"type": ""
													}
												],
												"src": "8483:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8752:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8762:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8772:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8762:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8821:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8829:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8801:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8801:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8736:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8745:6:9",
														"type": ""
													}
												],
												"src": "8711:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8886:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8896:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8906:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8906:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8896:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8879:6:9",
														"type": ""
													}
												],
												"src": "8846:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8993:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9098:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9100:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9100:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9100:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9070:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9078:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9067:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9067:30:9"
															},
															"nodeType": "YulIf",
															"src": "9064:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9130:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9160:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9138:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9138:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9130:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9204:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9216:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9222:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9212:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8977:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8988:4:9",
														"type": ""
													}
												],
												"src": "8927:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9336:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9358:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9374:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9393:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9398:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9389:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9389:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9374:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9308:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9313:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9324:11:9",
														"type": ""
													}
												],
												"src": "9240:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9460:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9470:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9499:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9481:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9481:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9470:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9442:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9452:7:9",
														"type": ""
													}
												],
												"src": "9415:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9561:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9571:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9586:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9593:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9582:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9571:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9543:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9553:7:9",
														"type": ""
													}
												],
												"src": "9517:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9732:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9742:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9771:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9753:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9753:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9742:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9714:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9724:7:9",
														"type": ""
													}
												],
												"src": "9672:111:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9834:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9844:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9859:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9855:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9844:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9816:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9826:7:9",
														"type": ""
													}
												],
												"src": "9789:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9966:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9976:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9987:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9976:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9948:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9958:7:9",
														"type": ""
													}
												],
												"src": "9921:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10055:103:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10078:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10083:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10088:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "10065:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10065:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "10136:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10141:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10132:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10150:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10125:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10037:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10042:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10047:6:9",
														"type": ""
													}
												],
												"src": "10004:154:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10207:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10217:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "10239:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "10269:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10247:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10247:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10235:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10235:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "10221:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10386:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10388:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10388:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10388:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10329:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10341:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10326:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10326:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "10365:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10377:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10362:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10362:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "10323:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10323:62:9"
															},
															"nodeType": "YulIf",
															"src": "10320:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10424:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "10428:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10417:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10193:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10201:4:9",
														"type": ""
													}
												],
												"src": "10164:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10496:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10499:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10489:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10489:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10489:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10593:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10596:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10586:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10617:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10620:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10610:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "10451:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10726:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10743:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10746:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10736:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "10637:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10849:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10866:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10869:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10859:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10859:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "10760:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10972:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10989:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10992:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10982:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10883:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11095:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11112:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11115:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11105:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11105:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11006:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11177:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11187:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11205:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11212:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11201:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11201:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11221:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11217:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11197:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11187:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11160:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11170:6:9",
														"type": ""
													}
												],
												"src": "11129:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11343:71:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11365:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11373:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11361:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11361:14:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11377:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11354:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11354:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11354:53:9"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11335:6:9",
														"type": ""
													}
												],
												"src": "11237:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11526:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11548:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11556:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11544:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11560:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11537:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11537:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11537:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11616:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11624:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11612:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11612:15:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11629:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11605:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11605:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11605:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11518:6:9",
														"type": ""
													}
												],
												"src": "11420:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11757:76:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11779:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11787:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11775:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11775:14:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11791:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11768:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11768:58:9"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11749:6:9",
														"type": ""
													}
												],
												"src": "11651:182:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:66:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11967:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11963:14:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11979:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11956:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11956:48:9"
														}
													]
												},
												"name": "store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11937:6:9",
														"type": ""
													}
												],
												"src": "11839:172:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12123:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12145:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12153:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12141:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12141:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12157:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12134:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12134:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12134:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12115:6:9",
														"type": ""
													}
												],
												"src": "12017:181:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12247:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12304:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12313:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12316:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12306:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12306:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12306:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12270:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12295:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "12277:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12277:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12267:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12267:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12260:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12260:43:9"
															},
															"nodeType": "YulIf",
															"src": "12257:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12240:5:9",
														"type": ""
													}
												],
												"src": "12204:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12390:94:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12462:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12471:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12474:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12464:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12464:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12464:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12413:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12453:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$268",
																					"nodeType": "YulIdentifier",
																					"src": "12420:32:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12420:39:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12410:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12410:50:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12403:58:9"
															},
															"nodeType": "YulIf",
															"src": "12400:78:9"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$268",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12383:5:9",
														"type": ""
													}
												],
												"src": "12332:152:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12533:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12590:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12599:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12602:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12592:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12592:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12592:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12556:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12581:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12563:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12563:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12553:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12553:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:43:9"
															},
															"nodeType": "YulIf",
															"src": "12543:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12526:5:9",
														"type": ""
													}
												],
												"src": "12490:122:9"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_contract$_IERC721_$268(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC721_$268(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$268(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$268(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC721_$268(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner.\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC721_$268(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$268(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c80638488cc41116100595780638488cc41146101505780638da5cb5b1461018d578063a694fc3a146101b8578063f2fde38b146101e1578063fd71c6501461020a57610091565b80630700037d14610096578063150b7a02146100d35780632e17de7814610110578063715018a61461013957610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b891906108c4565b610233565b6040516100ca9190610bb7565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f591906108f1565b61024b565b6040516101079190610afc565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906109a1565b61025f565b005b34801561014557600080fd5b5061014e610429565b005b34801561015c57600080fd5b50610177600480360381019061017291906109a1565b61043d565b6040516101849190610aaa565b60405180910390f35b34801561019957600080fd5b506101a2610470565b6040516101af9190610aaa565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da91906109a1565b610499565b005b3480156101ed57600080fd5b50610208600480360381019061020391906108c4565b610589565b005b34801561021657600080fd5b50610231600480360381019061022c9190610974565b61060d565b005b60056020528060005260406000206000915090505481565b600063150b7a0260e01b9050949350505050565b600260015414156102a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029c90610b97565b60405180910390fd5b60026001819055503373ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034590610b77565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561038e6003610659565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3033846040518463ffffffff1660e01b81526004016103ed93929190610ac5565b600060405180830381600087803b15801561040757600080fd5b505af115801561041b573d6000803e3d6000fd5b505050506001808190555050565b6104316106b5565b61043b6000610733565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3330846040518463ffffffff1660e01b81526004016104f893929190610ac5565b600060405180830381600087803b15801561051257600080fd5b505af1158015610526573d6000803e3d6000fd5b50505050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061058660036107f7565b50565b6105916106b5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610601576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f890610b37565b60405180910390fd5b61060a81610733565b50565b6106156106b5565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081600001549050600081116106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90610b17565b60405180910390fd5b6001810382600001819055505050565b6106bd61080d565b73ffffffffffffffffffffffffffffffffffffffff166106db610470565b73ffffffffffffffffffffffffffffffffffffffff1614610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890610b57565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600033905090565b600061082861082384610bf7565b610bd2565b90508281526020810184848401111561084457610843610d27565b5b61084f848285610cb3565b509392505050565b60008135905061086681610e3a565b92915050565b600082601f83011261088157610880610d22565b5b8135610891848260208601610815565b91505092915050565b6000813590506108a981610e51565b92915050565b6000813590506108be81610e68565b92915050565b6000602082840312156108da576108d9610d31565b5b60006108e884828501610857565b91505092915050565b6000806000806080858703121561090b5761090a610d31565b5b600061091987828801610857565b945050602061092a87828801610857565b935050604061093b878288016108af565b925050606085013567ffffffffffffffff81111561095c5761095b610d2c565b5b6109688782880161086c565b91505092959194509250565b60006020828403121561098a57610989610d31565b5b60006109988482850161089a565b91505092915050565b6000602082840312156109b7576109b6610d31565b5b60006109c5848285016108af565b91505092915050565b6109d781610c39565b82525050565b6109e681610c4b565b82525050565b60006109f9601b83610c28565b9150610a0482610d47565b602082019050919050565b6000610a1c602683610c28565b9150610a2782610d70565b604082019050919050565b6000610a3f602083610c28565b9150610a4a82610dbf565b602082019050919050565b6000610a62601683610c28565b9150610a6d82610de8565b602082019050919050565b6000610a85601f83610c28565b9150610a9082610e11565b602082019050919050565b610aa481610ca9565b82525050565b6000602082019050610abf60008301846109ce565b92915050565b6000606082019050610ada60008301866109ce565b610ae760208301856109ce565b610af46040830184610a9b565b949350505050565b6000602082019050610b1160008301846109dd565b92915050565b60006020820190508181036000830152610b30816109ec565b9050919050565b60006020820190508181036000830152610b5081610a0f565b9050919050565b60006020820190508181036000830152610b7081610a32565b9050919050565b60006020820190508181036000830152610b9081610a55565b9050919050565b60006020820190508181036000830152610bb081610a78565b9050919050565b6000602082019050610bcc6000830184610a9b565b92915050565b6000610bdc610bed565b9050610be88282610cc2565b919050565b6000604051905090565b600067ffffffffffffffff821115610c1257610c11610cf3565b5b610c1b82610d36565b9050602081019050919050565b600082825260208201905092915050565b6000610c4482610c89565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000610c8282610c39565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b610ccb82610d36565b810181811067ffffffffffffffff82111715610cea57610ce9610cf3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f596f7520617265206e6f7420746865206f776e65722e00000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610e4381610c39565b8114610e4e57600080fd5b50565b610e5a81610c77565b8114610e6557600080fd5b50565b610e7181610ca9565b8114610e7c57600080fd5b5056fea2646970667358221220a0a3ef79708b2a5dfb5ff9894156569a548b964937c13678ca16e5956063d00164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8488CC41 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x20A JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x700037D EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x139 JUMPI PUSH2 0x91 JUMP JUMPDEST CALLDATASIZE PUSH2 0x91 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x25F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14E PUSH2 0x429 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x470 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x9A1 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29C SWAP1 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x38E PUSH1 0x3 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x431 PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x43B PUSH1 0x0 PUSH2 0x733 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x526 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x586 PUSH1 0x3 PUSH2 0x7F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x591 PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F8 SWAP1 PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x60A DUP2 PUSH2 0x733 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x615 PUSH2 0x6B5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x80D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6DB PUSH2 0x470 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0xB57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x828 PUSH2 0x823 DUP5 PUSH2 0xBF7 JUMP JUMPDEST PUSH2 0xBD2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x844 JUMPI PUSH2 0x843 PUSH2 0xD27 JUMP JUMPDEST JUMPDEST PUSH2 0x84F DUP5 DUP3 DUP6 PUSH2 0xCB3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x866 DUP2 PUSH2 0xE3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0xD22 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x891 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x815 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A9 DUP2 PUSH2 0xE51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8BE DUP2 PUSH2 0xE68 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8DA JUMPI PUSH2 0x8D9 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8E8 DUP5 DUP3 DUP6 ADD PUSH2 0x857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x919 DUP8 DUP3 DUP9 ADD PUSH2 0x857 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x92A DUP8 DUP3 DUP9 ADD PUSH2 0x857 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x93B DUP8 DUP3 DUP9 ADD PUSH2 0x8AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x95C JUMPI PUSH2 0x95B PUSH2 0xD2C JUMP JUMPDEST JUMPDEST PUSH2 0x968 DUP8 DUP3 DUP9 ADD PUSH2 0x86C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x98A JUMPI PUSH2 0x989 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x998 DUP5 DUP3 DUP6 ADD PUSH2 0x89A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0xD31 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x9C5 DUP5 DUP3 DUP6 ADD PUSH2 0x8AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D7 DUP2 PUSH2 0xC39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9E6 DUP2 PUSH2 0xC4B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F9 PUSH1 0x1B DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA04 DUP3 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1C PUSH1 0x26 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA27 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA3F PUSH1 0x20 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4A DUP3 PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA62 PUSH1 0x16 DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6D DUP3 PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA85 PUSH1 0x1F DUP4 PUSH2 0xC28 JUMP JUMPDEST SWAP2 POP PUSH2 0xA90 DUP3 PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA4 DUP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xABF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xADA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0xAE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9CE JUMP JUMPDEST PUSH2 0xAF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB11 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB30 DUP2 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB50 DUP2 PUSH2 0xA0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB70 DUP2 PUSH2 0xA32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB90 DUP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBB0 DUP2 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDC PUSH2 0xBED JUMP JUMPDEST SWAP1 POP PUSH2 0xBE8 DUP3 DUP3 PUSH2 0xCC2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC12 JUMPI PUSH2 0xC11 PUSH2 0xCF3 JUMP JUMPDEST JUMPDEST PUSH2 0xC1B DUP3 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC44 DUP3 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC82 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0xCCB DUP3 PUSH2 0xD36 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCE9 PUSH2 0xCF3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65722E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xE43 DUP2 PUSH2 0xC39 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE5A DUP2 PUSH2 0xC77 JUMP JUMPDEST DUP2 EQ PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xE71 DUP2 PUSH2 0xCA9 JUMP JUMPDEST DUP2 EQ PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 LOG3 0xEF PUSH26 0x708B2A5DFB5FF9894156569A548B964937C13678CA16E5956063 0xD0 ADD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "386:1324:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:200:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1305:295:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;;;;;;;;;;;:::i;:::-;;762:48:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1093:206:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;979:108:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;816:43;;;;;;;;;;;;;;;;;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;1305:295:8:-;1744:1:1;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1404:10:8::1;1379:35;;:12;:21;1392:7;1379:21;;;;;;;;;;;;;;;;;;;;;:35;;;1371:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1458:12;:21;1471:7;1458:21;;;;;;;;;;;;1451:28;;;;;;;;;;;1489:29;:17;:27;:29::i;:::-;1528:12;;;;;;;;;;;:29;;;1566:4;1573:10;1585:7;1528:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1701:1:1::0;2628:7;:22;;;;1305:295:8;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;762:48:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1093:206:8:-;1144:12;;;;;;;;;;;:29;;;1174:10;1194:4;1201:7;1144:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:10;1219:12;:21;1232:7;1219:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1263:29;:17;:27;:29::i;:::-;1093:206;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;979:108:8:-;1094:13:0;:11;:13::i;:::-;1068:12:8::1;1053;;:27;;;;;;;;;;;;;;;;;;979:108:::0;:::o;1074:229:6:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;945:123:6:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;7:410:9:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:169::-;986:5;1024:6;1011:20;1002:29;;1040:48;1082:5;1040:48;:::i;:::-;925:169;;;;:::o;1100:139::-;1146:5;1184:6;1171:20;1162:29;;1200:33;1227:5;1200:33;:::i;:::-;1100:139;;;;:::o;1245:329::-;1304:6;1353:2;1341:9;1332:7;1328:23;1324:32;1321:119;;;1359:79;;:::i;:::-;1321:119;1479:1;1504:53;1549:7;1540:6;1529:9;1525:22;1504:53;:::i;:::-;1494:63;;1450:117;1245:329;;;;:::o;1580:943::-;1675:6;1683;1691;1699;1748:3;1736:9;1727:7;1723:23;1719:33;1716:120;;;1755:79;;:::i;:::-;1716:120;1875:1;1900:53;1945:7;1936:6;1925:9;1921:22;1900:53;:::i;:::-;1890:63;;1846:117;2002:2;2028:53;2073:7;2064:6;2053:9;2049:22;2028:53;:::i;:::-;2018:63;;1973:118;2130:2;2156:53;2201:7;2192:6;2181:9;2177:22;2156:53;:::i;:::-;2146:63;;2101:118;2286:2;2275:9;2271:18;2258:32;2317:18;2309:6;2306:30;2303:117;;;2339:79;;:::i;:::-;2303:117;2444:62;2498:7;2489:6;2478:9;2474:22;2444:62;:::i;:::-;2434:72;;2229:287;1580:943;;;;;;;:::o;2529:359::-;2603:6;2652:2;2640:9;2631:7;2627:23;2623:32;2620:119;;;2658:79;;:::i;:::-;2620:119;2778:1;2803:68;2863:7;2854:6;2843:9;2839:22;2803:68;:::i;:::-;2793:78;;2749:132;2529:359;;;;:::o;2894:329::-;2953:6;3002:2;2990:9;2981:7;2977:23;2973:32;2970:119;;;3008:79;;:::i;:::-;2970:119;3128:1;3153:53;3198:7;3189:6;3178:9;3174:22;3153:53;:::i;:::-;3143:63;;3099:117;2894:329;;;;:::o;3229:118::-;3316:24;3334:5;3316:24;:::i;:::-;3311:3;3304:37;3229:118;;:::o;3353:115::-;3438:23;3455:5;3438:23;:::i;:::-;3433:3;3426:36;3353:115;;:::o;3474:366::-;3616:3;3637:67;3701:2;3696:3;3637:67;:::i;:::-;3630:74;;3713:93;3802:3;3713:93;:::i;:::-;3831:2;3826:3;3822:12;3815:19;;3474:366;;;:::o;3846:::-;3988:3;4009:67;4073:2;4068:3;4009:67;:::i;:::-;4002:74;;4085:93;4174:3;4085:93;:::i;:::-;4203:2;4198:3;4194:12;4187:19;;3846:366;;;:::o;4218:::-;4360:3;4381:67;4445:2;4440:3;4381:67;:::i;:::-;4374:74;;4457:93;4546:3;4457:93;:::i;:::-;4575:2;4570:3;4566:12;4559:19;;4218:366;;;:::o;4590:::-;4732:3;4753:67;4817:2;4812:3;4753:67;:::i;:::-;4746:74;;4829:93;4918:3;4829:93;:::i;:::-;4947:2;4942:3;4938:12;4931:19;;4590:366;;;:::o;4962:::-;5104:3;5125:67;5189:2;5184:3;5125:67;:::i;:::-;5118:74;;5201:93;5290:3;5201:93;:::i;:::-;5319:2;5314:3;5310:12;5303:19;;4962:366;;;:::o;5334:118::-;5421:24;5439:5;5421:24;:::i;:::-;5416:3;5409:37;5334:118;;:::o;5458:222::-;5551:4;5589:2;5578:9;5574:18;5566:26;;5602:71;5670:1;5659:9;5655:17;5646:6;5602:71;:::i;:::-;5458:222;;;;:::o;5686:442::-;5835:4;5873:2;5862:9;5858:18;5850:26;;5886:71;5954:1;5943:9;5939:17;5930:6;5886:71;:::i;:::-;5967:72;6035:2;6024:9;6020:18;6011:6;5967:72;:::i;:::-;6049;6117:2;6106:9;6102:18;6093:6;6049:72;:::i;:::-;5686:442;;;;;;:::o;6134:218::-;6225:4;6263:2;6252:9;6248:18;6240:26;;6276:69;6342:1;6331:9;6327:17;6318:6;6276:69;:::i;:::-;6134:218;;;;:::o;6358:419::-;6524:4;6562:2;6551:9;6547:18;6539:26;;6611:9;6605:4;6601:20;6597:1;6586:9;6582:17;6575:47;6639:131;6765:4;6639:131;:::i;:::-;6631:139;;6358:419;;;:::o;6783:::-;6949:4;6987:2;6976:9;6972:18;6964:26;;7036:9;7030:4;7026:20;7022:1;7011:9;7007:17;7000:47;7064:131;7190:4;7064:131;:::i;:::-;7056:139;;6783:419;;;:::o;7208:::-;7374:4;7412:2;7401:9;7397:18;7389:26;;7461:9;7455:4;7451:20;7447:1;7436:9;7432:17;7425:47;7489:131;7615:4;7489:131;:::i;:::-;7481:139;;7208:419;;;:::o;7633:::-;7799:4;7837:2;7826:9;7822:18;7814:26;;7886:9;7880:4;7876:20;7872:1;7861:9;7857:17;7850:47;7914:131;8040:4;7914:131;:::i;:::-;7906:139;;7633:419;;;:::o;8058:::-;8224:4;8262:2;8251:9;8247:18;8239:26;;8311:9;8305:4;8301:20;8297:1;8286:9;8282:17;8275:47;8339:131;8465:4;8339:131;:::i;:::-;8331:139;;8058:419;;;:::o;8483:222::-;8576:4;8614:2;8603:9;8599:18;8591:26;;8627:71;8695:1;8684:9;8680:17;8671:6;8627:71;:::i;:::-;8483:222;;;;:::o;8711:129::-;8745:6;8772:20;;:::i;:::-;8762:30;;8801:33;8829:4;8821:6;8801:33;:::i;:::-;8711:129;;;:::o;8846:75::-;8879:6;8912:2;8906:9;8896:19;;8846:75;:::o;8927:307::-;8988:4;9078:18;9070:6;9067:30;9064:56;;;9100:18;;:::i;:::-;9064:56;9138:29;9160:6;9138:29;:::i;:::-;9130:37;;9222:4;9216;9212:15;9204:23;;8927:307;;;:::o;9240:169::-;9324:11;9358:6;9353:3;9346:19;9398:4;9393:3;9389:14;9374:29;;9240:169;;;;:::o;9415:96::-;9452:7;9481:24;9499:5;9481:24;:::i;:::-;9470:35;;9415:96;;;:::o;9517:149::-;9553:7;9593:66;9586:5;9582:78;9571:89;;9517:149;;;:::o;9672:111::-;9724:7;9753:24;9771:5;9753:24;:::i;:::-;9742:35;;9672:111;;;:::o;9789:126::-;9826:7;9866:42;9859:5;9855:54;9844:65;;9789:126;;;:::o;9921:77::-;9958:7;9987:5;9976:16;;9921:77;;;:::o;10004:154::-;10088:6;10083:3;10078;10065:30;10150:1;10141:6;10136:3;10132:16;10125:27;10004:154;;;:::o;10164:281::-;10247:27;10269:4;10247:27;:::i;:::-;10239:6;10235:40;10377:6;10365:10;10362:22;10341:18;10329:10;10326:34;10323:62;10320:88;;;10388:18;;:::i;:::-;10320:88;10428:10;10424:2;10417:22;10207:238;10164:281;;:::o;10451:180::-;10499:77;10496:1;10489:88;10596:4;10593:1;10586:15;10620:4;10617:1;10610:15;10637:117;10746:1;10743;10736:12;10760:117;10869:1;10866;10859:12;10883:117;10992:1;10989;10982:12;11006:117;11115:1;11112;11105:12;11129:102;11170:6;11221:2;11217:7;11212:2;11205:5;11201:14;11197:28;11187:38;;11129:102;;;:::o;11237:177::-;11377:29;11373:1;11365:6;11361:14;11354:53;11237:177;:::o;11420:225::-;11560:34;11556:1;11548:6;11544:14;11537:58;11629:8;11624:2;11616:6;11612:15;11605:33;11420:225;:::o;11651:182::-;11791:34;11787:1;11779:6;11775:14;11768:58;11651:182;:::o;11839:172::-;11979:24;11975:1;11967:6;11963:14;11956:48;11839:172;:::o;12017:181::-;12157:33;12153:1;12145:6;12141:14;12134:57;12017:181;:::o;12204:122::-;12277:24;12295:5;12277:24;:::i;:::-;12270:5;12267:35;12257:63;;12316:1;12313;12306:12;12257:63;12204:122;:::o;12332:152::-;12420:39;12453:5;12420:39;:::i;:::-;12413:5;12410:50;12400:78;;12474:1;12471;12464:12;12400:78;12332:152;:::o;12490:122::-;12563:24;12581:5;12563:24;:::i;:::-;12556:5;12553:35;12543:63;;12602:1;12599;12592:12;12543:63;12490:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "753000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2544",
								"renounceOwnership()": "30465",
								"rewards(address)": "2815",
								"setNftContact(address)": "27117",
								"stake(uint256)": "infinite",
								"tokenOwnedBy(uint256)": "2839",
								"transferOwnership(address)": "30813",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 894,
									"end": 973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 954,
									"end": 966,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 939,
									"end": 951,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 939,
									"end": 951,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 939,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 939,
									"end": 966,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 939,
									"end": 966,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 939,
									"end": 966,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 939,
									"end": 966,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 894,
									"end": 973,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 180,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 180,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 79,
									"end": 84,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 116,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 104,
									"end": 117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 95,
									"end": 117,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 95,
									"end": 117,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 126,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 168,
									"end": 173,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 126,
									"end": 174,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 126,
									"end": 174,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 126,
									"end": 174,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 126,
									"end": 174,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7,
									"end": 180,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7,
									"end": 180,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7,
									"end": 180,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 180,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 180,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 186,
									"end": 567,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 186,
									"end": 567,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 271,
									"end": 277,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 320,
									"end": 322,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 308,
									"end": 317,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 299,
									"end": 306,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 295,
									"end": 318,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 291,
									"end": 323,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 288,
									"end": 407,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 288,
									"end": 407,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 288,
									"end": 407,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 326,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 326,
									"end": 405,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 326,
									"end": 405,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 326,
									"end": 405,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 326,
									"end": 405,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 288,
									"end": 407,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 288,
									"end": 407,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 446,
									"end": 447,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 542,
									"end": 549,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 533,
									"end": 539,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 522,
									"end": 531,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 518,
									"end": 540,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 471,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 471,
									"end": 550,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 471,
									"end": 550,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 471,
									"end": 550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 461,
									"end": 550,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 461,
									"end": 550,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 560,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 186,
									"end": 567,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 186,
									"end": 567,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 186,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 186,
									"end": 567,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 186,
									"end": 567,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 654,
									"end": 750,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 654,
									"end": 750,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 691,
									"end": 698,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 720,
									"end": 744,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 738,
									"end": 743,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 720,
									"end": 744,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 720,
									"end": 744,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 720,
									"end": 744,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 720,
									"end": 744,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 744,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 709,
									"end": 744,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 654,
									"end": 750,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 654,
									"end": 750,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 654,
									"end": 750,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 654,
									"end": 750,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 756,
									"end": 867,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 756,
									"end": 867,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 808,
									"end": 815,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 855,
									"end": 860,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 837,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 837,
									"end": 861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 826,
									"end": 861,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 826,
									"end": 861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 756,
									"end": 867,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 756,
									"end": 867,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 756,
									"end": 867,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 756,
									"end": 867,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 873,
									"end": 999,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 873,
									"end": 999,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 910,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 992,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 943,
									"end": 948,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 939,
									"end": 993,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 928,
									"end": 993,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 928,
									"end": 993,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 873,
									"end": 999,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 873,
									"end": 999,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 873,
									"end": 999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 873,
									"end": 999,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1237,
									"end": 1238,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 1235,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1227,
									"end": 1239,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1403,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1251,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1372,
									"end": 1377,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1339,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1339,
									"end": 1378,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1339,
									"end": 1378,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1339,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1332,
									"end": 1337,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1329,
									"end": 1379,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1319,
									"end": 1397,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1393,
									"end": 1394,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1391,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1383,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1319,
									"end": 1397,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 1319,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1403,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1403,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 1710,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a0a3ef79708b2a5dfb5ff9894156569a548b964937c13678ca16e5956063d00164736f6c63430008070033",
									".code": [
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "700037D"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 1710,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 816,
											"end": 859,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 751,
											"end": 781,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 744,
											"end": 781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1414,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1399,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1400,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1379,
											"end": 1414,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1371,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1479,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1489,
											"end": 1506,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1489,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1557,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1566,
											"end": 1570,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1592,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1305,
											"end": 1600,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 762,
											"end": 810,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 810,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1174,
											"end": 1184,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1198,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1208,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1253,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1231,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1239,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1263,
											"end": 1280,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1263,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1263,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1093,
											"end": 1299,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1053,
											"end": 1080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 979,
											"end": 1087,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 986,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1011,
											"end": 1031,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1082,
											"end": 1087,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 1040,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 925,
											"end": 1094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1171,
											"end": 1191,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1191,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1227,
											"end": 1232,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1100,
											"end": 1239,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1310,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1351,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1356,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1440,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1321,
											"end": 1440,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1359,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1359,
											"end": 1438,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1438,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1359,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1321,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1321,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1549,
											"end": 1556,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1504,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1504,
											"end": 1557,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1504,
											"end": 1557,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1504,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1567,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1574,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1689,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1736,
											"end": 1745,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1727,
											"end": 1734,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1723,
											"end": 1746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1719,
											"end": 1752,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1836,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1716,
											"end": 1836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1755,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1755,
											"end": 1834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1755,
											"end": 1834,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 1755,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1716,
											"end": 1836,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 1716,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1875,
											"end": 1876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1945,
											"end": 1952,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1943,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1900,
											"end": 1953,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1900,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 1900,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1846,
											"end": 1963,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2028,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2071,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 2028,
											"end": 2081,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2081,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2028,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2081,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2201,
											"end": 2208,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2177,
											"end": 2199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2156,
											"end": 2209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2156,
											"end": 2209,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2209,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2156,
											"end": 2209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2209,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2146,
											"end": 2209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2101,
											"end": 2219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2286,
											"end": 2288,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2258,
											"end": 2290,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2336,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2339,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2339,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 2339,
											"end": 2418,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2339,
											"end": 2418,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 2339,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2498,
											"end": 2505,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2489,
											"end": 2495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2487,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2229,
											"end": 2516,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 2523,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2638,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2650,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2623,
											"end": 2655,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2739,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2620,
											"end": 2739,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2658,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2658,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2658,
											"end": 2737,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2658,
											"end": 2737,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2658,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2739,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2620,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2852,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2861,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2803,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2871,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2793,
											"end": 2871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2888,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 2999,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2988,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2973,
											"end": 3005,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3008,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2970,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3198,
											"end": 3205,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3189,
											"end": 3195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3153,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3099,
											"end": 3216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 3223,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3229,
											"end": 3347,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3229,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3334,
											"end": 3339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3316,
											"end": 3340,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3316,
											"end": 3340,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3316,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3229,
											"end": 3347,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3468,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3353,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3433,
											"end": 3436,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3468,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3353,
											"end": 3468,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 3696,
											"end": 3699,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 3637,
											"end": 3704,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3637,
											"end": 3704,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 3637,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3802,
											"end": 3805,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3713,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 3713,
											"end": 3806,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3713,
											"end": 3806,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3713,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3826,
											"end": 3829,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 3834,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 3834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3474,
											"end": 3840,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 3991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4073,
											"end": 4075,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4009,
											"end": 4076,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4009,
											"end": 4076,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4009,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4002,
											"end": 4076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4174,
											"end": 4177,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4085,
											"end": 4178,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4085,
											"end": 4178,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4085,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4187,
											"end": 4206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 4212,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4440,
											"end": 4443,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4381,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4448,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4546,
											"end": 4549,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4457,
											"end": 4550,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4457,
											"end": 4550,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4457,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4570,
											"end": 4573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4218,
											"end": 4584,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4732,
											"end": 4735,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4753,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4817,
											"end": 4819,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4753,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4753,
											"end": 4820,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4753,
											"end": 4820,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4753,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4918,
											"end": 4921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4829,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4829,
											"end": 4922,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4829,
											"end": 4922,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4829,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4947,
											"end": 4949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4956,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5107,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5184,
											"end": 5187,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 5125,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5192,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5294,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 5201,
											"end": 5294,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5201,
											"end": 5294,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5201,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5321,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5303,
											"end": 5322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5328,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5334,
											"end": 5452,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5334,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5439,
											"end": 5444,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5421,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5421,
											"end": 5445,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5421,
											"end": 5445,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 5421,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5409,
											"end": 5446,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5452,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5587,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5602,
											"end": 5673,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5673,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5602,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5680,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5835,
											"end": 5839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5875,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5858,
											"end": 5876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5850,
											"end": 5876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5954,
											"end": 5955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5956,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5886,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5886,
											"end": 5957,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5886,
											"end": 5957,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6035,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6024,
											"end": 6033,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 5967,
											"end": 6039,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5967,
											"end": 6039,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5967,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6117,
											"end": 6119,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6106,
											"end": 6115,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6102,
											"end": 6120,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6099,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6049,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 6128,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6265,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6252,
											"end": 6261,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6342,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6340,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6327,
											"end": 6344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6324,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6276,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6276,
											"end": 6345,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6276,
											"end": 6345,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6276,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6352,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6564,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6551,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6547,
											"end": 6565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6611,
											"end": 6620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6621,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6595,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6582,
											"end": 6599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6622,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 6765,
											"end": 6769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6639,
											"end": 6770,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6770,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 6639,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6358,
											"end": 6777,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6949,
											"end": 6953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 6990,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 6990,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7020,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7000,
											"end": 7047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7190,
											"end": 7194,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7064,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 7064,
											"end": 7195,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7195,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7064,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6783,
											"end": 7202,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7374,
											"end": 7378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7389,
											"end": 7415,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7389,
											"end": 7415,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7461,
											"end": 7470,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7471,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7445,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7432,
											"end": 7449,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7425,
											"end": 7472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7615,
											"end": 7619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7489,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7489,
											"end": 7620,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7489,
											"end": 7620,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7489,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7620,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7208,
											"end": 7627,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7840,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7814,
											"end": 7840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7880,
											"end": 7884,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7896,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7872,
											"end": 7873,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7857,
											"end": 7874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7850,
											"end": 7897,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7914,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 7914,
											"end": 8045,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7914,
											"end": 8045,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7914,
											"end": 8045,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7906,
											"end": 8045,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7906,
											"end": 8045,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7633,
											"end": 8052,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8320,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8321,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8297,
											"end": 8298,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8286,
											"end": 8295,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8282,
											"end": 8299,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8275,
											"end": 8322,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8339,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8465,
											"end": 8469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8339,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 8339,
											"end": 8470,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8339,
											"end": 8470,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8339,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8470,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8331,
											"end": 8470,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8058,
											"end": 8477,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8576,
											"end": 8580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8591,
											"end": 8617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8627,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8695,
											"end": 8696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8680,
											"end": 8697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8627,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 8627,
											"end": 8698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8627,
											"end": 8698,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8627,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8705,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8745,
											"end": 8751,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8792,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8762,
											"end": 8792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8829,
											"end": 8833,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8821,
											"end": 8827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 8801,
											"end": 8834,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8801,
											"end": 8834,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 8801,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8711,
											"end": 8840,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8846,
											"end": 8921,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 8846,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8906,
											"end": 8915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8896,
											"end": 8915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8846,
											"end": 8921,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8988,
											"end": 8992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9096,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9070,
											"end": 9076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9097,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9120,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 9064,
											"end": 9120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9120,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 9064,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9160,
											"end": 9166,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9138,
											"end": 9167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 9138,
											"end": 9167,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9138,
											"end": 9167,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 9138,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9216,
											"end": 9220,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9227,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9204,
											"end": 9227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8927,
											"end": 9234,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9324,
											"end": 9335,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9364,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9346,
											"end": 9365,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9398,
											"end": 9402,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9393,
											"end": 9396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9389,
											"end": 9403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 9403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9374,
											"end": 9403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9409,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9499,
											"end": 9504,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9481,
											"end": 9505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9481,
											"end": 9505,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9481,
											"end": 9505,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 9481,
											"end": 9505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9470,
											"end": 9505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9415,
											"end": 9511,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9553,
											"end": 9560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9659,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9586,
											"end": 9591,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9582,
											"end": 9660,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9571,
											"end": 9660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9517,
											"end": 9666,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9771,
											"end": 9776,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9753,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9672,
											"end": 9783,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9826,
											"end": 9833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9908,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9859,
											"end": 9864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9909,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9844,
											"end": 9909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9789,
											"end": 9915,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9958,
											"end": 9965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 9992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9998,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10078,
											"end": 10081,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10095,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10150,
											"end": 10151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10147,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10136,
											"end": 10139,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10132,
											"end": 10148,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10125,
											"end": 10152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10004,
											"end": 10158,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10269,
											"end": 10273,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10239,
											"end": 10245,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10235,
											"end": 10275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10377,
											"end": 10383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10375,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10362,
											"end": 10384,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10341,
											"end": 10359,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10329,
											"end": 10339,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10326,
											"end": 10360,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10323,
											"end": 10385,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10388,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10428,
											"end": 10438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10424,
											"end": 10426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10417,
											"end": 10439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10207,
											"end": 10445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10445,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10451,
											"end": 10631,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 10451,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10576,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10496,
											"end": 10497,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10489,
											"end": 10577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10600,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10586,
											"end": 10601,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10620,
											"end": 10624,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10625,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10637,
											"end": 10754,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 10637,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10736,
											"end": 10748,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10877,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 10760,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10869,
											"end": 10870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10866,
											"end": 10867,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10859,
											"end": 10871,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10883,
											"end": 11000,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10883,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 10990,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10982,
											"end": 10994,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11123,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 11006,
											"end": 11123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11105,
											"end": 11117,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11176,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11221,
											"end": 11223,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11217,
											"end": 11224,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11212,
											"end": 11214,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 11205,
											"end": 11210,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11201,
											"end": 11215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11225,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11225,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11231,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11237,
											"end": 11414,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 11237,
											"end": 11414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11377,
											"end": 11406,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11361,
											"end": 11375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11354,
											"end": 11407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11237,
											"end": 11414,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11237,
											"end": 11414,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11420,
											"end": 11645,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 11420,
											"end": 11645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11594,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11556,
											"end": 11557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11548,
											"end": 11554,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11544,
											"end": 11558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11595,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11629,
											"end": 11637,
											"name": "PUSH",
											"source": 9,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11624,
											"end": 11626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11616,
											"end": 11622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11612,
											"end": 11627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11605,
											"end": 11638,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11420,
											"end": 11645,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11651,
											"end": 11833,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 11651,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11791,
											"end": 11825,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11787,
											"end": 11788,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11779,
											"end": 11785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11775,
											"end": 11789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11768,
											"end": 11826,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11651,
											"end": 11833,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11979,
											"end": 12003,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F7420746865206F776E65722E00000000000000000000"
										},
										{
											"begin": 11975,
											"end": 11976,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11963,
											"end": 11977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11956,
											"end": 12004,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11839,
											"end": 12011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12017,
											"end": 12198,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 12017,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12157,
											"end": 12190,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 12153,
											"end": 12154,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12145,
											"end": 12151,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12141,
											"end": 12155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12134,
											"end": 12191,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12198,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12204,
											"end": 12326,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 12204,
											"end": 12326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12277,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12295,
											"end": 12300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12277,
											"end": 12301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 12277,
											"end": 12301,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12277,
											"end": 12301,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 12277,
											"end": 12301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12270,
											"end": 12275,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12302,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12257,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12257,
											"end": 12320,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12313,
											"end": 12314,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12306,
											"end": 12318,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12257,
											"end": 12320,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12257,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12204,
											"end": 12326,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12204,
											"end": 12326,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12332,
											"end": 12484,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 12332,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12420,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12453,
											"end": 12458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12420,
											"end": 12459,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 12420,
											"end": 12459,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12420,
											"end": 12459,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 12420,
											"end": 12459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12413,
											"end": 12418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12410,
											"end": 12460,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12400,
											"end": 12478,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12474,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12464,
											"end": 12476,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12400,
											"end": 12478,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12400,
											"end": 12478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12332,
											"end": 12484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12332,
											"end": 12484,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12490,
											"end": 12612,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 12490,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12581,
											"end": 12586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 12563,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12556,
											"end": 12561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12553,
											"end": 12588,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 12592,
											"end": 12604,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12543,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12612,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12490,
											"end": 12612,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(address)": "0700037d",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnedBy(uint256)": "8488cc41",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xe66179e3ff2b2ecb54fbf8c1464b094e1664d5519999956c6fcd85f435815c35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efc3018524f2dd46a3371db66e00c75a2c3362b1ccd976809f12fb2af24c2e15\",\"dweb:/ipfs/QmQV5WBbhiUmdiW9nrYL8sd15NqcoJAn8fhcRx3GQAnGjH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 437,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)268"
							},
							{
								"astId": 444,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 470,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnedBy",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 474,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 477,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokensStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC721)268": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							576
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 113,
							"src": "57:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 153,
							"src": "116:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 314,
							"src": "185:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 269,
							"src": "261:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 410,
							"src": "326:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 429,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "411:7:8"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "411:7:8"
								},
								{
									"baseName": {
										"id": 431,
										"name": "ERC721Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "420:12:8"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "420:12:8"
								},
								{
									"baseName": {
										"id": 433,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "434:15:8"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "434:15:8"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "395:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "464:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "456:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$268",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 436,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 435,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 268,
											"src": "456:7:8"
										},
										"referencedDeclaration": 268,
										"src": "456:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$268",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "internal"
								},
								{
									"id": 441,
									"libraryName": {
										"id": 438,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "489:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "483:36:8",
									"typeName": {
										"id": 440,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 439,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "502:16:8"
										},
										"referencedDeclaration": 341,
										"src": "502:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 444,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "549:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "524:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 443,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 442,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "524:16:8"
										},
										"referencedDeclaration": 341,
										"src": "524:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 452,
									"name": "NFTStaked",
									"nameLocation": "579:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "597:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "589:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "612:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "604:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "629:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "621:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:47:8"
									},
									"src": "573:63:8"
								},
								{
									"anonymous": false,
									"id": 460,
									"name": "NFTUnstaked",
									"nameLocation": "647:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "667:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "659:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "682:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "674:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "699:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "691:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:47:8"
									},
									"src": "641:65:8"
								},
								{
									"anonymous": false,
									"id": 466,
									"name": "Claimed",
									"nameLocation": "717:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "733:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "725:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "748:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "740:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:31:8"
									},
									"src": "711:45:8"
								},
								{
									"constant": false,
									"functionSelector": "8488cc41",
									"id": 470,
									"mutability": "mutable",
									"name": "tokenOwnedBy",
									"nameLocation": "798:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "762:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 469,
										"keyType": {
											"id": 467,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "771:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "762:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 468,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "782:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 474,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "852:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "816:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 473,
										"keyType": {
											"id": 471,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "816:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 472,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "836:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 477,
									"mutability": "mutable",
									"name": "tokensStaked",
									"nameLocation": "875:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "865:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "865:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 476,
										"nodeType": "ArrayTypeName",
										"src": "865:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "929:44:8",
										"statements": [
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 483,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "939:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$268",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 484,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "954:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$268",
															"typeString": "contract IERC721"
														}
													},
													"src": "939:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$268",
														"typeString": "contract IERC721"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "939:27:8"
											}
										]
									},
									"id": 488,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "915:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "907:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$268",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 478,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 268,
														"src": "907:7:8"
													},
													"referencedDeclaration": 268,
													"src": "907:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$268",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:22:8"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:8"
									},
									"scope": 576,
									"src": "894:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "1043:44:8",
										"statements": [
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1053:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$268",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 497,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "1068:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$268",
															"typeString": "contract IERC721"
														}
													},
													"src": "1053:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$268",
														"typeString": "contract IERC721"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "1053:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 494,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 493,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1033:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1033:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "988:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1010:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "1002:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$268",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 489,
														"name": "IERC721",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 268,
														"src": "1002:7:8"
													},
													"referencedDeclaration": 268,
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$268",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:22:8"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:0:8"
									},
									"scope": 576,
									"src": "979:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1134:165:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 509,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1174:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1174:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 513,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1194:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$576",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$576",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1186:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1186:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1186:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1201:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 506,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "1144:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1144:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1144:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "1144:65:8"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 518,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "1219:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 520,
														"indexExpression": {
															"id": 519,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "1232:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1219:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 521,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1243:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1243:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1219:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1219:34:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 525,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "1263:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1263:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1263:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1102:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1116:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1108:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:17:8"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1134:0:8"
									},
									"scope": 576,
									"src": "1093:206:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "1361:239:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 539,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "1379:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 541,
																"indexExpression": {
																	"id": 540,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "1392:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1379:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 542,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1404:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1404:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1379:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1416:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1371:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1371:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "1371:70:8"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1451:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 548,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "1458:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "1471:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1458:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "1451:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 553,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "1489:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1489:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1489:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "1489:29:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 563,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1566:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$576",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$576",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1558:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1558:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 565,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1573:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1573:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "1585:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 558,
															"name": "_nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "1528:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1528:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "1528:65:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 536,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 535,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1339:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1339:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1314:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1330:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "1322:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:17:8"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 576,
									"src": "1305:295:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1633:75:8",
										"statements": []
									},
									"id": 575,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:2:8"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1633:0:8"
									},
									"scope": 576,
									"src": "1606:102:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "386:1324:8",
							"usedErrors": []
						}
					],
					"src": "32:1678:8"
				},
				"id": 8
			}
		}
	}
}