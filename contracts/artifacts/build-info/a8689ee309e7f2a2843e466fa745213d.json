{
	"id": "a8689ee309e7f2a2843e466fa745213d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.16;\n\nimport \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\";\nimport \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\";\n\ninterface INFT {\n    function walletOfOwner(address _owner) external view returns (uint256[] memory);\n}\n\ncontract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {\n    address _nftContract;\n\n    using Counters for Counters.Counter;\n    Counters.Counter private _stakedNFTCounter;\n\n    event NFTStaked(address owner, uint256 tokenId, uint256 value);\n    event NFTUnstaked(address owner, uint256 tokenId, uint256 value);\n    event Claimed(address owner, uint256 amount);\n\n    mapping (uint256 => address) public tokenOwnedBy;\n    mapping (uint256 => uint256) public rewards;\n    uint256[] tokenStaked;\n\n    constructor (address nftContract_) {\n        _nftContract = nftContract_;\n    }\n\n    function setNftContact(address nftContract_) external onlyOwner {\n        _nftContract = nftContract_;\n    }\n\n    function stake(uint256 tokenId) external {\n        IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId);\n        tokenOwnedBy[tokenId] = msg.sender;\n        tokenStaked.push(tokenId);\n        _stakedNFTCounter.increment();\n    }\n\n    function unstake(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        delete tokenOwnedBy[tokenId];\n        _stakedNFTCounter.decrement();\n        (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        delete rewards[tokenId];\n        IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n\n    function claim(uint256 tokenId) nonReentrant external {\n        require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\");\n        (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\");\n        require(success);\n        rewards[tokenId] = 0;\n    }\n\n    function calculateRewards(uint256 tokenId) public view returns(uint256){\n        return rewards[tokenId];\n    }\n\n    receive() external payable {\n        require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\");\n        uint256 sharePerEach = msg.value / _stakedNFTCounter.current();\n        uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this));\n        \n        for(uint256 i = 0; i < tokensStaked.length;){\n            rewards[tokenStaked[i]] += sharePerEach;\n            unchecked {++i;}\n        }\n    }\n}"
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts@4.7.3/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ERC721Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":399:790  contract ERC721Holder is IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_4:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1629:1662   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1611:1663   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1599:1601   */\n      0x20\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"#utility.yul\":14:187   */\n    tag_11:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_15\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_15:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:319   */\n    tag_12:\n        /* \"#utility.yul\":253:263   */\n      0x4e487b71\n        /* \"#utility.yul\":248:251   */\n      0xe0\n        /* \"#utility.yul\":244:264   */\n      shl\n        /* \"#utility.yul\":241:242   */\n      0x00\n        /* \"#utility.yul\":234:265   */\n      mstore\n        /* \"#utility.yul\":284:288   */\n      0x41\n        /* \"#utility.yul\":281:282   */\n      0x04\n        /* \"#utility.yul\":274:289   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x24\n        /* \"#utility.yul\":305:306   */\n      0x00\n        /* \"#utility.yul\":298:313   */\n      revert\n        /* \"#utility.yul\":324:1462   */\n    tag_6:\n        /* \"#utility.yul\":419:425   */\n      0x00\n        /* \"#utility.yul\":427:433   */\n      dup1\n        /* \"#utility.yul\":435:441   */\n      0x00\n        /* \"#utility.yul\":443:449   */\n      dup1\n        /* \"#utility.yul\":496:499   */\n      0x80\n        /* \"#utility.yul\":484:493   */\n      dup6\n        /* \"#utility.yul\":475:482   */\n      dup8\n        /* \"#utility.yul\":471:494   */\n      sub\n        /* \"#utility.yul\":467:500   */\n      slt\n        /* \"#utility.yul\":464:517   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":513:514   */\n      0x00\n        /* \"#utility.yul\":510:511   */\n      dup1\n        /* \"#utility.yul\":503:515   */\n      revert\n        /* \"#utility.yul\":464:517   */\n    tag_18:\n        /* \"#utility.yul\":536:565   */\n      tag_19\n        /* \"#utility.yul\":555:564   */\n      dup6\n        /* \"#utility.yul\":536:565   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":526:565   */\n      swap4\n      pop\n        /* \"#utility.yul\":584:622   */\n      tag_20\n        /* \"#utility.yul\":618:620   */\n      0x20\n        /* \"#utility.yul\":607:616   */\n      dup7\n        /* \"#utility.yul\":603:621   */\n      add\n        /* \"#utility.yul\":584:622   */\n      tag_11\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":574:622   */\n      swap3\n      pop\n        /* \"#utility.yul\":669:671   */\n      0x40\n        /* \"#utility.yul\":658:667   */\n      dup6\n        /* \"#utility.yul\":654:672   */\n      add\n        /* \"#utility.yul\":641:673   */\n      calldataload\n        /* \"#utility.yul\":631:673   */\n      swap2\n      pop\n        /* \"#utility.yul\":724:726   */\n      0x60\n        /* \"#utility.yul\":713:722   */\n      dup6\n        /* \"#utility.yul\":709:727   */\n      add\n        /* \"#utility.yul\":696:728   */\n      calldataload\n        /* \"#utility.yul\":747:765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":788:790   */\n      dup1\n        /* \"#utility.yul\":780:786   */\n      dup3\n        /* \"#utility.yul\":777:791   */\n      gt\n        /* \"#utility.yul\":774:808   */\n      iszero\n      tag_21\n      jumpi\n        /* \"#utility.yul\":804:805   */\n      0x00\n        /* \"#utility.yul\":801:802   */\n      dup1\n        /* \"#utility.yul\":794:806   */\n      revert\n        /* \"#utility.yul\":774:808   */\n    tag_21:\n        /* \"#utility.yul\":842:848   */\n      dup2\n        /* \"#utility.yul\":831:840   */\n      dup8\n        /* \"#utility.yul\":827:849   */\n      add\n        /* \"#utility.yul\":817:849   */\n      swap2\n      pop\n        /* \"#utility.yul\":887:894   */\n      dup8\n        /* \"#utility.yul\":880:884   */\n      0x1f\n        /* \"#utility.yul\":876:878   */\n      dup4\n        /* \"#utility.yul\":872:885   */\n      add\n        /* \"#utility.yul\":868:895   */\n      slt\n        /* \"#utility.yul\":858:913   */\n      tag_22\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      dup1\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":858:913   */\n    tag_22:\n        /* \"#utility.yul\":945:947   */\n      dup2\n        /* \"#utility.yul\":932:948   */\n      calldataload\n        /* \"#utility.yul\":967:969   */\n      dup2\n        /* \"#utility.yul\":963:965   */\n      dup2\n        /* \"#utility.yul\":960:970   */\n      gt\n        /* \"#utility.yul\":957:993   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":973:991   */\n      tag_24\n      tag_12\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":1048:1050   */\n      0x40\n        /* \"#utility.yul\":1042:1051   */\n      mload\n        /* \"#utility.yul\":1016:1018   */\n      0x1f\n        /* \"#utility.yul\":1102:1115   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1098:1120   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1122:1124   */\n      0x3f\n        /* \"#utility.yul\":1094:1125   */\n      add\n        /* \"#utility.yul\":1090:1130   */\n      and\n        /* \"#utility.yul\":1078:1131   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1146:1164   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1166:1188   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1143:1189   */\n      or\n        /* \"#utility.yul\":1140:1212   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":1192:1210   */\n      tag_26\n      tag_12\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":1232:1242   */\n      dup2\n        /* \"#utility.yul\":1228:1230   */\n      0x40\n        /* \"#utility.yul\":1221:1243   */\n      mstore\n        /* \"#utility.yul\":1267:1269   */\n      dup3\n        /* \"#utility.yul\":1259:1265   */\n      dup2\n        /* \"#utility.yul\":1252:1270   */\n      mstore\n        /* \"#utility.yul\":1307:1314   */\n      dup11\n        /* \"#utility.yul\":1302:1304   */\n      0x20\n        /* \"#utility.yul\":1297:1299   */\n      dup5\n        /* \"#utility.yul\":1293:1295   */\n      dup8\n        /* \"#utility.yul\":1289:1300   */\n      add\n        /* \"#utility.yul\":1285:1305   */\n      add\n        /* \"#utility.yul\":1282:1315   */\n      gt\n        /* \"#utility.yul\":1279:1332   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1279:1332   */\n    tag_27:\n        /* \"#utility.yul\":1384:1386   */\n      dup3\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1375:1377   */\n      dup7\n        /* \"#utility.yul\":1371:1382   */\n      add\n        /* \"#utility.yul\":1366:1368   */\n      0x20\n        /* \"#utility.yul\":1358:1364   */\n      dup4\n        /* \"#utility.yul\":1354:1369   */\n      add\n        /* \"#utility.yul\":1341:1387   */\n      calldatacopy\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1424:1426   */\n      0x20\n        /* \"#utility.yul\":1419:1421   */\n      dup5\n        /* \"#utility.yul\":1411:1417   */\n      dup4\n        /* \"#utility.yul\":1407:1422   */\n      add\n        /* \"#utility.yul\":1403:1427   */\n      add\n        /* \"#utility.yul\":1396:1431   */\n      mstore\n        /* \"#utility.yul\":1450:1456   */\n      dup1\n        /* \"#utility.yul\":1440:1456   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":324:1462   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101af806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC9 0x2C 0xA8 0xEA EQ 0xEB DUP4 PUSH5 0xD6C186F3B5 EQ LOG1 0xCB 0xC3 0xDF SWAP2 JUMPDEST NOT AND SSTORE CALL 0xB9 PUSH4 0x616AE5E8 PUSH18 0x64736F6C6343000811003300000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1671:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:9"
															},
															"nodeType": "YulIf",
															"src": "111:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "241:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "248:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "253:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "244:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "234:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "234:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "281:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "284:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "274:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "274:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "274:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "305:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "298:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "298:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "192:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "454:1008:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "501:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "510:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "513:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "503:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "503:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "503:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "475:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "471:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "471:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:33:9"
															},
															"nodeType": "YulIf",
															"src": "464:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "526:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "536:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "526:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "574:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "607:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "618:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "603:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "603:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "584:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "631:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "658:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "669:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "641:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "641:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "631:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "682:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "713:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "724:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "709:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "709:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "696:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "696:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "686:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "737:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "747:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "741:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "792:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "804:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "794:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "794:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "794:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "788:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "777:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:14:9"
															},
															"nodeType": "YulIf",
															"src": "774:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "817:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "842:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "821:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "876:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "880:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "872:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "872:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "887:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "861:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "861:35:9"
															},
															"nodeType": "YulIf",
															"src": "858:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "945:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "926:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "971:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "973:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "973:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "973:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "963:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "967:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:10:9"
															},
															"nodeType": "YulIf",
															"src": "957:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1002:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1016:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1012:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1006:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1028:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1042:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1032:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1060:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1082:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1106:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1110:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1102:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1102:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1117:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1098:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1098:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1122:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1094:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1094:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1127:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1090:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1090:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1064:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1190:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1192:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1192:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1192:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1149:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1161:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1146:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1169:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1166:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1143:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:46:9"
															},
															"nodeType": "YulIf",
															"src": "1140:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1228:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1232:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1221:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1259:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1267:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1252:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1252:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1293:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1297:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1289:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1289:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1285:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1285:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1307:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1282:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:33:9"
															},
															"nodeType": "YulIf",
															"src": "1279:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1366:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1354:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1354:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1375:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1379:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1384:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1341:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1411:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1419:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1407:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1407:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1403:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1403:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1396:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1440:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1450:6:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "396:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "407:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "419:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "427:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "443:6:9",
														"type": ""
													}
												],
												"src": "324:1138:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:103:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1588:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1576:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1618:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1645:3:9",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1650:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1641:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1641:20:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1629:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1629:33:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:52:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1535:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1546:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1557:4:9",
														"type": ""
													}
												],
												"src": "1467:202:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004e61003e36600461009d565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200160405180910390f35b80356001600160a01b038116811461008257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156100b357600080fd5b6100bc8561006b565b93506100ca6020860161006b565b925060408501359150606085013567ffffffffffffffff808211156100ee57600080fd5b818701915087601f83011261010257600080fd5b81358181111561011457610114610087565b604051601f8201601f19908116603f0116810190838211818310171561013c5761013c610087565b816040528281528a602084870101111561015557600080fd5b8260208601602083013760006020848301015280955050505050509295919450925056fea2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x9D JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC DUP6 PUSH2 0x6B JUMP JUMPDEST SWAP4 POP PUSH2 0xCA PUSH1 0x20 DUP7 ADD PUSH2 0x6B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH2 0x114 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x13C JUMPI PUSH2 0x13C PUSH2 0x87 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xC9 0x2C 0xA8 0xEA EQ 0xEB DUP4 PUSH5 0xD6C186F3B5 EQ LOG1 0xCB 0xC3 0xDF SWAP2 JUMPDEST NOT AND SSTORE CALL 0xB9 PUSH4 0x616AE5E8 PUSH18 0x64736F6C6343000811003300000000000000 ",
							"sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;:::i;:::-;-1:-1:-1;;;588:200:4;;;;;;;;;;-1:-1:-1;;;;;;1629:33:9;;;1611:52;;1599:2;1584:18;588:200:4;;;;;;;14:173:9;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:1138;419:6;427;435;443;496:3;484:9;475:7;471:23;467:33;464:53;;;513:1;510;503:12;464:53;536:29;555:9;536:29;:::i;:::-;526:39;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;;669:2;658:9;654:18;641:32;631:42;;724:2;713:9;709:18;696:32;747:18;788:2;780:6;777:14;774:34;;;804:1;801;794:12;774:34;842:6;831:9;827:22;817:32;;887:7;880:4;876:2;872:13;868:27;858:55;;909:1;906;899:12;858:55;945:2;932:16;967:2;963;960:10;957:36;;;973:18;;:::i;:::-;1048:2;1042:9;1016:2;1102:13;;-1:-1:-1;;1098:22:9;;;1122:2;1094:31;1090:40;1078:53;;;1146:18;;;1166:22;;;1143:46;1140:72;;;1192:18;;:::i;:::-;1232:10;1228:2;1221:22;1267:2;1259:6;1252:18;1307:7;1302:2;1297;1293;1289:11;1285:20;1282:33;1279:53;;;1328:1;1325;1318:12;1279:53;1384:2;1379;1375;1371:11;1366:2;1358:6;1354:15;1341:46;1429:1;1424:2;1419;1411:6;1407:15;1403:24;1396:35;1450:6;1440:16;;;;;;;324:1138;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86200",
								"executionCost": "135",
								"totalCost": "86335"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 399,
									"end": 790,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 790,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5c92ca8ea14eb8364d6c186f3b514a1cbc3df915b191655f1b963616ae5e87164736f6c63430008110033",
									".code": [
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 790,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 399,
											"end": 790,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1629,
											"end": 1662,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1663,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 192,
											"end": 319,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 192,
											"end": 319,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 253,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 248,
											"end": 251,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 264,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 241,
											"end": 242,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 265,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 288,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 305,
											"end": 306,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 313,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 425,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 433,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 435,
											"end": 441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 449,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 484,
											"end": 493,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 471,
											"end": 494,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 467,
											"end": 500,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 503,
											"end": 515,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 464,
											"end": 517,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 517,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 555,
											"end": 564,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 536,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 536,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 536,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 565,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 526,
											"end": 565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 616,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 603,
											"end": 621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 622,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 574,
											"end": 622,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 574,
											"end": 622,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 658,
											"end": 667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 654,
											"end": 672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 641,
											"end": 673,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 631,
											"end": 673,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 673,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 724,
											"end": 726,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 713,
											"end": 722,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 709,
											"end": 727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 696,
											"end": 728,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 765,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 777,
											"end": 791,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 804,
											"end": 805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 794,
											"end": 806,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 774,
											"end": 808,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 774,
											"end": 808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 842,
											"end": 848,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 831,
											"end": 840,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 827,
											"end": 849,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 894,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 880,
											"end": 884,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 876,
											"end": 878,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 872,
											"end": 885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 895,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 858,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 858,
											"end": 913,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 858,
											"end": 913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 945,
											"end": 947,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 948,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 967,
											"end": 969,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 963,
											"end": 965,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 960,
											"end": 970,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 957,
											"end": 993,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 957,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 973,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 973,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 973,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1120,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1122,
											"end": 1124,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 1094,
											"end": 1125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1130,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1078,
											"end": 1131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1164,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1189,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1140,
											"end": 1212,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1192,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 1192,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1230,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1270,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1299,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1305,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1315,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1279,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1375,
											"end": 1377,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1366,
											"end": 1368,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1387,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1419,
											"end": 1421,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1411,
											"end": 1417,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1431,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 324,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG1 PUSH19 0x5F6D9979A66EDA26B644C16D560CA564565EE7 0xB8 CODECOPY LOG0 MLOAD 0xBE SWAP10 0x5E 0xA8 SWAP6 PUSH27 0x64736F6C6343000811003300000000000000000000000000000000 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE LOG1 PUSH19 0x5F6D9979A66EDA26B644C16D560CA564565EE7 0xB8 CODECOPY LOG0 MLOAD 0xBE SWAP10 0x5E 0xA8 SWAP6 PUSH27 0x64736F6C6343000811003300000000000000000000000000000000 ",
							"sourceMap": "424:971:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2a1725f6d9979a66eda26b644c16d560ca564565ee7b839a051be995ea8957a64736f6c63430008110033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTStaking.sol": {
				"INFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "walletOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"walletOfOwner(address)": "438b6300"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"walletOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"INFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xf316f6a5ad874075367f618cd94d2b484ed184cec061fdc4c0d21dcb7ef059c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59bdeac4b4fddcdfe4314235f701d9af56bacffeba6e95ce7990f39516bd9493\",\"dweb:/ipfs/QmbV2gjcXpXFW5H8w6gkHMhrbtURzDRoJmneN1seeC4vq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SacredTemple": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "NFTUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract_",
									"type": "address"
								}
							],
							"name": "setNftContact",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenOwnedBy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTStaking.sol\":999:1078  constructor (address nftContract_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/NFTStaking.sol\":1044:1056  _nftContract */\n  0x02\n    /* \"contracts/NFTStaking.sol\":1044:1071  _nftContract = nftContract_ */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd3ea4350\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf301af42\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfd71c650\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8488cc41\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTStaking.sol\":2374:2391  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      sload\n        /* \"contracts/NFTStaking.sol\":2405:2406  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2374:2406  _stakedNFTCounter.current() != 0 */\n      sub\n        /* \"contracts/NFTStaking.sol\":2366:2429  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":2366:2429  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x12\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0x72, 0x139bc81391951cc8185c99481cdd185ad959)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:315   */\n      mstore\n        /* \"#utility.yul\":332:350   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":2366:2429  require(_stakedNFTCounter.current() != 0, \"No NFTs are staked\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/NFTStaking.sol\":2439:2459  uint256 sharePerEach */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2474:2501  _stakedNFTCounter.current() */\n      tag_22\n        /* \"contracts/NFTStaking.sol\":2474:2491  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/NFTStaking.sol\":2474:2501  _stakedNFTCounter.current() */\n    tag_22:\n        /* \"contracts/NFTStaking.sol\":2462:2501  msg.value / _stakedNFTCounter.current() */\n      tag_23\n      swap1\n        /* \"contracts/NFTStaking.sol\":2462:2471  msg.value */\n      callvalue\n        /* \"contracts/NFTStaking.sol\":2462:2501  msg.value / _stakedNFTCounter.current() */\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/NFTStaking.sol\":2548:2560  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":2543:2590  INFT(_nftContract).walletOfOwner(address(this)) */\n      mload(0x40)\n      shl(0xe8, 0x438b63)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2584:2588  this */\n      address\n        /* \"contracts/NFTStaking.sol\":2543:2590  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":729:780   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":2439:2501  uint256 sharePerEach = msg.value / _stakedNFTCounter.current() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/NFTStaking.sol\":2511:2540  uint256[] memory tokensStaked */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":2548:2560  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":2543:2575  INFT(_nftContract).walletOfOwner */\n      0x438b6300\n      swap1\n        /* \"#utility.yul\":702:720   */\n      0x24\n      add\n        /* \"contracts/NFTStaking.sol\":2543:2590  INFT(_nftContract).walletOfOwner(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_29\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/NFTStaking.sol\":2511:2590  uint256[] memory tokensStaked = INFT(_nftContract).walletOfOwner(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2613:2622  uint256 i */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n    tag_31:\n        /* \"contracts/NFTStaking.sol\":2632:2644  tokensStaked */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2632:2651  tokensStaked.length */\n      mload\n        /* \"contracts/NFTStaking.sol\":2628:2629  i */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2628:2651  i < tokensStaked.length */\n      lt\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n      iszero\n      tag_32\n      jumpi\n        /* \"contracts/NFTStaking.sol\":2694:2706  sharePerEach */\n      dup3\n        /* \"contracts/NFTStaking.sol\":2667:2674  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2667:2690  rewards[tokenStaked[i]] */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2675:2686  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":2687:2688  i */\n      dup5\n        /* \"contracts/NFTStaking.sol\":2675:2689  tokenStaked[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_35\n      jumpi\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/NFTStaking.sol\":2667:2690  rewards[tokenStaked[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTStaking.sol\":2667:2706  rewards[tokenStaked[i]] += sharePerEach */\n      dup3\n      dup3\n      sload\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":2731:2734  ++i */\n      0x01\n      add\n        /* \"contracts/NFTStaking.sol\":2609:2746  for(uint256 i = 0; i < tokensStaked.length;){... */\n      jump(tag_31)\n    tag_32:\n      stop\n        /* \"contracts/NFTStaking.sol\":492:2754  contract SacredTemple is Ownable, ERC721Holder, ReentrancyGuard {... */\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      shl(0xe1, 0x0a85bd01)\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_41:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3828:3861   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3810:3862   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3798:3800   */\n      0x20\n        /* \"#utility.yul\":3783:3801   */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":588:788  function onERC721Received(... */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_32\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_32\n      tag_54\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_32\n      tag_58\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnedBy */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_61:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":747:779   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":729:780   */\n      dup2\n      mstore\n        /* \"#utility.yul\":717:719   */\n      0x20\n        /* \"#utility.yul\":702:720   */\n      add\n        /* \"contracts/NFTStaking.sol\":868:916  mapping (uint256 => address) public tokenOwnedBy */\n      tag_45\n        /* \"#utility.yul\":583:786   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_60)\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_32\n      tag_70\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_74:\n        /* \"contracts/NFTStaking.sol\":2275:2282  uint256 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2300:2307  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2300:2316  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n      jump\n    tag_73:\n      mload(0x40)\n        /* \"#utility.yul\":4204:4229   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x20\n        /* \"#utility.yul\":4177:4195   */\n      add\n        /* \"contracts/NFTStaking.sol\":2212:2323  function calculateRewards(uint256 tokenId) public view returns(uint256){... */\n      tag_45\n        /* \"#utility.yul\":4058:4235   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_32\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":922:965  mapping (uint256 => uint256) public rewards */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_73\n      tag_85\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_32\n      tag_90\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n    tag_51:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4633:4635   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4615:4636   */\n      mstore\n        /* \"#utility.yul\":4672:4674   */\n      0x1f\n        /* \"#utility.yul\":4652:4670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4645:4675   */\n      mstore\n        /* \"#utility.yul\":4711:4744   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4691:4709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4684:4745   */\n      mstore\n        /* \"#utility.yul\":4762:4780   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_20\n        /* \"#utility.yul\":4431:4786   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_95:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnedBy[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1528:1540  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1528:1549  tokenOwnedBy[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/NFTStaking.sol\":1553:1563  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1528:1563  tokenOwnedBy[tokenId] == msg.sender */\n      eq\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4993:4995   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4975:4996   */\n      mstore\n        /* \"#utility.yul\":5032:5034   */\n      0x16\n        /* \"#utility.yul\":5012:5030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5005:5035   */\n      mstore\n      shl(0x51, 0x2cb7ba9030b932903737ba103a34329037bbb732b917)\n        /* \"#utility.yul\":5051:5069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5044:5096   */\n      mstore\n        /* \"#utility.yul\":5113:5131   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_20\n        /* \"#utility.yul\":4791:5137   */\n      jump\n        /* \"contracts/NFTStaking.sol\":1520:1590  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n    tag_99:\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnedBy[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1607:1619  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1607:1628  tokenOwnedBy[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1600:1628  delete tokenOwnedBy[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      tag_102\n        /* \"contracts/NFTStaking.sol\":1638:1655  _stakedNFTCounter */\n      0x03\n        /* \"contracts/NFTStaking.sol\":1638:1665  _stakedNFTCounter.decrement */\n      tag_103\n        /* \"contracts/NFTStaking.sol\":1638:1667  _stakedNFTCounter.decrement() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1704:1716  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1739:1746  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      dup4\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1678:1690  bool success */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":1739:1755  rewards[tokenId] */\n      dup6\n        /* \"contracts/NFTStaking.sol\":1704:1725  tokenOwnedBy[tokenId] */\n      dup8\n        /* \"contracts/NFTStaking.sol\":1696:1760  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_108\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_107)\n    tag_108:\n      0x60\n      swap2\n      pop\n    tag_107:\n      pop\n        /* \"contracts/NFTStaking.sol\":1677:1760  (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":1778:1785  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":1770:1786  require(success) */\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1803:1810  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":1803:1819  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1796:1819  delete rewards[tokenId] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/NFTStaking.sol\":1837:1849  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      swap1\n      mload\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1876:1880  this */\n      address\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5592:5626   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":1883:1893  msg.sender */\n      caller\n        /* \"#utility.yul\":5642:5660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5635:5678   */\n      mstore\n        /* \"#utility.yul\":5694:5712   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5687:5721   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1837:1849  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":1829:1867  IERC721(_nftContract).safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":5527:5545   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1829:1903  IERC721(_nftContract).safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1454:1910  function unstake(uint256 tokenId) nonReentrant external {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n    tag_55:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4633:4635   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4615:4636   */\n      mstore\n        /* \"#utility.yul\":4672:4674   */\n      0x1f\n        /* \"#utility.yul\":4652:4670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4645:4675   */\n      mstore\n        /* \"#utility.yul\":4711:4744   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4691:4709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4684:4745   */\n      mstore\n        /* \"#utility.yul\":4762:4780   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_20\n        /* \"#utility.yul\":4431:4786   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_116:\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      sstore\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnedBy[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1988:2000  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1988:2009  tokenOwnedBy[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/NFTStaking.sol\":2013:2023  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1988:2023  tokenOwnedBy[tokenId] == msg.sender */\n      eq\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4993:4995   */\n      0x20\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4975:4996   */\n      mstore\n        /* \"#utility.yul\":5032:5034   */\n      0x16\n        /* \"#utility.yul\":5012:5030   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5005:5035   */\n      mstore\n      shl(0x51, 0x2cb7ba9030b932903737ba103a34329037bbb732b917)\n        /* \"#utility.yul\":5051:5069   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5044:5096   */\n      mstore\n        /* \"#utility.yul\":5113:5131   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n      tag_20\n        /* \"#utility.yul\":4791:5137   */\n      jump\n        /* \"contracts/NFTStaking.sol\":1980:2050  require(tokenOwnedBy[tokenId] == msg.sender, \"You are not the owner.\") */\n    tag_119:\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2087:2099  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2122:2129  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      swap1\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      dup4\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2061:2073  bool success */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      dup2\n        /* \"contracts/NFTStaking.sol\":2122:2138  rewards[tokenId] */\n      dup6\n        /* \"contracts/NFTStaking.sol\":2087:2108  tokenOwnedBy[tokenId] */\n      dup8\n        /* \"contracts/NFTStaking.sol\":2079:2143  payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_124\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_123)\n    tag_124:\n      0x60\n      swap2\n      pop\n    tag_123:\n      pop\n        /* \"contracts/NFTStaking.sol\":2060:2143  (bool success, ) = payable(tokenOwnedBy[tokenId]).call{value: rewards[tokenId]}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTStaking.sol\":2161:2168  success */\n      dup1\n        /* \"contracts/NFTStaking.sol\":2153:2169  require(success) */\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n        /* \"contracts/NFTStaking.sol\":2198:2199  0 */\n      0x00\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":2179:2186  rewards */\n      0x05\n        /* \"contracts/NFTStaking.sol\":2179:2195  rewards[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/NFTStaking.sol\":2179:2199  rewards[tokenId] = 0 */\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1916:2206  function claim(uint256 tokenId) nonReentrant external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n    tag_71:\n        /* \"contracts/NFTStaking.sol\":1257:1269  _nftContract */\n      sload(0x02)\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1288:1298  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5592:5626   */\n      mstore\n        /* \"contracts/NFTStaking.sol\":1308:1312  this */\n      address\n        /* \"#utility.yul\":5642:5660   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5635:5678   */\n      mstore\n        /* \"#utility.yul\":5694:5712   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5687:5721   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTStaking.sol\":1257:1269  _nftContract */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/NFTStaking.sol\":1249:1287  IERC721(_nftContract).safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"#utility.yul\":5527:5545   */\n      0x64\n      add\n        /* \"contracts/NFTStaking.sol\":1249:1323  IERC721(_nftContract).safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnedBy[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/NFTStaking.sol\":1333:1345  tokenOwnedBy */\n      0x04\n        /* \"contracts/NFTStaking.sol\":1333:1354  tokenOwnedBy[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnedBy[tokenId] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/NFTStaking.sol\":1357:1367  msg.sender */\n      caller\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnedBy[tokenId] = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1377:1388  tokenStaked */\n      0x06\n        /* \"contracts/NFTStaking.sol\":1377:1402  tokenStaked.push(tokenId) */\n      dup1\n      sload\n        /* \"contracts/NFTStaking.sol\":1333:1367  tokenOwnedBy[tokenId] = msg.sender */\n      0x01\n        /* \"contracts/NFTStaking.sol\":1377:1402  tokenStaked.push(tokenId) */\n      dup2\n      add\n      dup3\n      sstore\n      swap2\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      dup3\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n      tag_139\n        /* \"contracts/NFTStaking.sol\":1412:1429  _stakedNFTCounter */\n      0x03\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/NFTStaking.sol\":1412:1441  _stakedNFTCounter.increment() */\n    tag_139:\n        /* \"contracts/NFTStaking.sol\":1198:1448  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5934:5936   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5916:5937   */\n      mstore\n        /* \"#utility.yul\":5973:5975   */\n      0x26\n        /* \"#utility.yul\":5953:5971   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5946:5976   */\n      mstore\n        /* \"#utility.yul\":6012:6046   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5992:6010   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5985:6047   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6063:6081   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6056:6092   */\n      mstore\n        /* \"#utility.yul\":6109:6128   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":5732:6134   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_145:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_139\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/NFTStaking.sol\":1158:1170  _nftContract */\n      0x02\n        /* \"contracts/NFTStaking.sol\":1158:1185  _nftContract = nftContract_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTStaking.sol\":1084:1192  function setNftContact(address nftContract_) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1153:1167  counter._value */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1185:1194  value > 0 */\n      dup1\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6341:6343   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6323:6344   */\n      mstore\n        /* \"#utility.yul\":6380:6382   */\n      0x1b\n        /* \"#utility.yul\":6360:6378   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6353:6383   */\n      mstore\n        /* \"#utility.yul\":6419:6448   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":6399:6417   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6392:6449   */\n      mstore\n        /* \"#utility.yul\":6466:6484   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_20\n        /* \"#utility.yul\":6139:6490   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n    tag_153:\n      not(0x00)\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1277:1286  value - 1 */\n      add\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts@4.7.3/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6697:6699   */\n      0x20\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6679:6700   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6716:6734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6709:6739   */\n      mstore\n        /* \"#utility.yul\":6775:6809   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6755:6773   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6748:6810   */\n      mstore\n        /* \"#utility.yul\":6827:6845   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":6495:6851   */\n      jump\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":361:578   */\n    tag_24:\n        /* \"#utility.yul\":401:402   */\n      0x00\n        /* \"#utility.yul\":427:428   */\n      dup3\n        /* \"#utility.yul\":417:549   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":471:481   */\n      0x4e487b71\n        /* \"#utility.yul\":466:469   */\n      0xe0\n        /* \"#utility.yul\":462:482   */\n      shl\n        /* \"#utility.yul\":459:460   */\n      0x00\n        /* \"#utility.yul\":452:483   */\n      mstore\n        /* \"#utility.yul\":506:510   */\n      0x12\n        /* \"#utility.yul\":503:504   */\n      0x04\n        /* \"#utility.yul\":496:511   */\n      mstore\n        /* \"#utility.yul\":534:538   */\n      0x24\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":524:539   */\n      revert\n        /* \"#utility.yul\":417:549   */\n    tag_172:\n      pop\n        /* \"#utility.yul\":563:572   */\n      div\n      swap1\n        /* \"#utility.yul\":361:578   */\n      jump\t// out\n        /* \"#utility.yul\":791:918   */\n    tag_166:\n        /* \"#utility.yul\":852:862   */\n      0x4e487b71\n        /* \"#utility.yul\":847:850   */\n      0xe0\n        /* \"#utility.yul\":843:863   */\n      shl\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":833:864   */\n      mstore\n        /* \"#utility.yul\":883:887   */\n      0x41\n        /* \"#utility.yul\":880:881   */\n      0x04\n        /* \"#utility.yul\":873:888   */\n      mstore\n        /* \"#utility.yul\":907:911   */\n      0x24\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":897:912   */\n      revert\n        /* \"#utility.yul\":923:1198   */\n    tag_167:\n        /* \"#utility.yul\":994:996   */\n      0x40\n        /* \"#utility.yul\":988:997   */\n      mload\n        /* \"#utility.yul\":1059:1061   */\n      0x1f\n        /* \"#utility.yul\":1040:1053   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1036:1063   */\n      and\n        /* \"#utility.yul\":1024:1064   */\n      dup2\n      add\n        /* \"#utility.yul\":1094:1112   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1079:1113   */\n      dup2\n      gt\n        /* \"#utility.yul\":1115:1137   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1076:1138   */\n      or\n        /* \"#utility.yul\":1073:1161   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1141:1159   */\n      tag_177\n      tag_166\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1177:1179   */\n      0x40\n        /* \"#utility.yul\":1170:1192   */\n      mstore\n        /* \"#utility.yul\":923:1198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1203:2139   */\n    tag_30:\n        /* \"#utility.yul\":1298:1304   */\n      0x00\n        /* \"#utility.yul\":1329:1331   */\n      0x20\n        /* \"#utility.yul\":1372:1374   */\n      dup1\n        /* \"#utility.yul\":1360:1369   */\n      dup4\n        /* \"#utility.yul\":1351:1358   */\n      dup6\n        /* \"#utility.yul\":1347:1370   */\n      sub\n        /* \"#utility.yul\":1343:1375   */\n      slt\n        /* \"#utility.yul\":1340:1392   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1340:1392   */\n    tag_179:\n        /* \"#utility.yul\":1421:1430   */\n      dup3\n        /* \"#utility.yul\":1415:1431   */\n      mload\n        /* \"#utility.yul\":1450:1468   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1491:1493   */\n      dup1\n        /* \"#utility.yul\":1483:1489   */\n      dup3\n        /* \"#utility.yul\":1480:1494   */\n      gt\n        /* \"#utility.yul\":1477:1511   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1507:1508   */\n      0x00\n        /* \"#utility.yul\":1504:1505   */\n      dup1\n        /* \"#utility.yul\":1497:1509   */\n      revert\n        /* \"#utility.yul\":1477:1511   */\n    tag_180:\n        /* \"#utility.yul\":1545:1551   */\n      dup2\n        /* \"#utility.yul\":1534:1543   */\n      dup6\n        /* \"#utility.yul\":1530:1552   */\n      add\n        /* \"#utility.yul\":1520:1552   */\n      swap2\n      pop\n        /* \"#utility.yul\":1590:1597   */\n      dup6\n        /* \"#utility.yul\":1583:1587   */\n      0x1f\n        /* \"#utility.yul\":1579:1581   */\n      dup4\n        /* \"#utility.yul\":1575:1588   */\n      add\n        /* \"#utility.yul\":1571:1598   */\n      slt\n        /* \"#utility.yul\":1561:1616   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":1612:1613   */\n      0x00\n        /* \"#utility.yul\":1609:1610   */\n      dup1\n        /* \"#utility.yul\":1602:1614   */\n      revert\n        /* \"#utility.yul\":1561:1616   */\n    tag_181:\n        /* \"#utility.yul\":1641:1643   */\n      dup2\n        /* \"#utility.yul\":1635:1644   */\n      mload\n        /* \"#utility.yul\":1663:1665   */\n      dup2\n        /* \"#utility.yul\":1659:1661   */\n      dup2\n        /* \"#utility.yul\":1656:1666   */\n      gt\n        /* \"#utility.yul\":1653:1689   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":1669:1687   */\n      tag_183\n      tag_166\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1715:1717   */\n      dup1\n        /* \"#utility.yul\":1712:1713   */\n      0x05\n        /* \"#utility.yul\":1708:1718   */\n      shl\n        /* \"#utility.yul\":1698:1718   */\n      swap2\n      pop\n        /* \"#utility.yul\":1738:1766   */\n      tag_184\n        /* \"#utility.yul\":1762:1764   */\n      dup5\n        /* \"#utility.yul\":1758:1760   */\n      dup4\n        /* \"#utility.yul\":1754:1765   */\n      add\n        /* \"#utility.yul\":1738:1766   */\n      tag_167\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1800:1815   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":1870:1881   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":1866:1886   */\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":1831:1843   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1898:1917   */\n      dup9\n      dup5\n      gt\n        /* \"#utility.yul\":1895:1934   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":1930:1931   */\n      0x00\n        /* \"#utility.yul\":1927:1928   */\n      dup1\n        /* \"#utility.yul\":1920:1932   */\n      revert\n        /* \"#utility.yul\":1895:1934   */\n    tag_185:\n        /* \"#utility.yul\":1954:1965   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1974:2109   */\n    tag_186:\n        /* \"#utility.yul\":1990:1996   */\n      dup4\n        /* \"#utility.yul\":1985:1988   */\n      dup6\n        /* \"#utility.yul\":1982:1997   */\n      lt\n        /* \"#utility.yul\":1974:2109   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":2056:2066   */\n      dup5\n      mload\n        /* \"#utility.yul\":2044:2067   */\n      dup3\n      mstore\n        /* \"#utility.yul\":2007:2019   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2087:2099   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1974:2109   */\n      jump(tag_186)\n    tag_188:\n        /* \"#utility.yul\":2128:2133   */\n      swap9\n        /* \"#utility.yul\":1203:2139   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2144:2271   */\n    tag_36:\n        /* \"#utility.yul\":2205:2215   */\n      0x4e487b71\n        /* \"#utility.yul\":2200:2203   */\n      0xe0\n        /* \"#utility.yul\":2196:2216   */\n      shl\n        /* \"#utility.yul\":2193:2194   */\n      0x00\n        /* \"#utility.yul\":2186:2217   */\n      mstore\n        /* \"#utility.yul\":2236:2240   */\n      0x32\n        /* \"#utility.yul\":2233:2234   */\n      0x04\n        /* \"#utility.yul\":2226:2241   */\n      mstore\n        /* \"#utility.yul\":2260:2264   */\n      0x24\n        /* \"#utility.yul\":2257:2258   */\n      0x00\n        /* \"#utility.yul\":2250:2265   */\n      revert\n        /* \"#utility.yul\":2276:2498   */\n    tag_39:\n        /* \"#utility.yul\":2341:2350   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2362:2372   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2359:2492   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2414:2424   */\n      0x4e487b71\n        /* \"#utility.yul\":2409:2412   */\n      0xe0\n        /* \"#utility.yul\":2405:2425   */\n      shl\n        /* \"#utility.yul\":2402:2403   */\n      0x00\n        /* \"#utility.yul\":2395:2426   */\n      mstore\n        /* \"#utility.yul\":2449:2453   */\n      0x11\n        /* \"#utility.yul\":2446:2447   */\n      0x04\n        /* \"#utility.yul\":2439:2454   */\n      mstore\n        /* \"#utility.yul\":2477:2481   */\n      0x24\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2467:2482   */\n      revert\n        /* \"#utility.yul\":2359:2492   */\n    tag_191:\n        /* \"#utility.yul\":2276:2498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2503:2676   */\n    tag_168:\n        /* \"#utility.yul\":2571:2591   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2620:2651   */\n      dup2\n      and\n        /* \"#utility.yul\":2610:2652   */\n      dup2\n      eq\n        /* \"#utility.yul\":2600:2670   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2666:2667   */\n      0x00\n        /* \"#utility.yul\":2663:2664   */\n      dup1\n        /* \"#utility.yul\":2656:2668   */\n      revert\n        /* \"#utility.yul\":2600:2670   */\n    tag_193:\n        /* \"#utility.yul\":2503:2676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:3661   */\n    tag_43:\n        /* \"#utility.yul\":2776:2782   */\n      0x00\n        /* \"#utility.yul\":2784:2790   */\n      dup1\n        /* \"#utility.yul\":2792:2798   */\n      0x00\n        /* \"#utility.yul\":2800:2806   */\n      dup1\n        /* \"#utility.yul\":2853:2856   */\n      0x80\n        /* \"#utility.yul\":2841:2850   */\n      dup6\n        /* \"#utility.yul\":2832:2839   */\n      dup8\n        /* \"#utility.yul\":2828:2851   */\n      sub\n        /* \"#utility.yul\":2824:2857   */\n      slt\n        /* \"#utility.yul\":2821:2874   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2870:2871   */\n      0x00\n        /* \"#utility.yul\":2867:2868   */\n      dup1\n        /* \"#utility.yul\":2860:2872   */\n      revert\n        /* \"#utility.yul\":2821:2874   */\n    tag_195:\n        /* \"#utility.yul\":2893:2922   */\n      tag_196\n        /* \"#utility.yul\":2912:2921   */\n      dup6\n        /* \"#utility.yul\":2893:2922   */\n      tag_168\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2883:2922   */\n      swap4\n      pop\n        /* \"#utility.yul\":2941:2943   */\n      0x20\n        /* \"#utility.yul\":2962:3000   */\n      tag_197\n        /* \"#utility.yul\":2996:2998   */\n      dup2\n        /* \"#utility.yul\":2985:2994   */\n      dup8\n        /* \"#utility.yul\":2981:2999   */\n      add\n        /* \"#utility.yul\":2962:3000   */\n      tag_168\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2952:3000   */\n      swap4\n      pop\n        /* \"#utility.yul\":3047:3049   */\n      0x40\n        /* \"#utility.yul\":3036:3045   */\n      dup7\n        /* \"#utility.yul\":3032:3050   */\n      add\n        /* \"#utility.yul\":3019:3051   */\n      calldataload\n        /* \"#utility.yul\":3009:3051   */\n      swap3\n      pop\n        /* \"#utility.yul\":3102:3104   */\n      0x60\n        /* \"#utility.yul\":3091:3100   */\n      dup7\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"#utility.yul\":3074:3106   */\n      calldataload\n        /* \"#utility.yul\":3125:3143   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3166:3168   */\n      dup1\n        /* \"#utility.yul\":3158:3164   */\n      dup3\n        /* \"#utility.yul\":3155:3169   */\n      gt\n        /* \"#utility.yul\":3152:3186   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3179:3180   */\n      dup1\n        /* \"#utility.yul\":3172:3184   */\n      revert\n        /* \"#utility.yul\":3152:3186   */\n    tag_198:\n        /* \"#utility.yul\":3220:3226   */\n      dup2\n        /* \"#utility.yul\":3209:3218   */\n      dup9\n        /* \"#utility.yul\":3205:3227   */\n      add\n        /* \"#utility.yul\":3195:3227   */\n      swap2\n      pop\n        /* \"#utility.yul\":3265:3272   */\n      dup9\n        /* \"#utility.yul\":3258:3262   */\n      0x1f\n        /* \"#utility.yul\":3254:3256   */\n      dup4\n        /* \"#utility.yul\":3250:3263   */\n      add\n        /* \"#utility.yul\":3246:3273   */\n      slt\n        /* \"#utility.yul\":3236:3291   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":3287:3288   */\n      0x00\n        /* \"#utility.yul\":3284:3285   */\n      dup1\n        /* \"#utility.yul\":3277:3289   */\n      revert\n        /* \"#utility.yul\":3236:3291   */\n    tag_199:\n        /* \"#utility.yul\":3323:3325   */\n      dup2\n        /* \"#utility.yul\":3310:3326   */\n      calldataload\n        /* \"#utility.yul\":3345:3347   */\n      dup2\n        /* \"#utility.yul\":3341:3343   */\n      dup2\n        /* \"#utility.yul\":3338:3348   */\n      gt\n        /* \"#utility.yul\":3335:3371   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3351:3369   */\n      tag_201\n      tag_166\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3393:3446   */\n      tag_202\n        /* \"#utility.yul\":3436:3438   */\n      0x1f\n        /* \"#utility.yul\":3417:3430   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3413:3440   */\n      and\n        /* \"#utility.yul\":3409:3445   */\n      dup6\n      add\n        /* \"#utility.yul\":3393:3446   */\n      tag_167\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3380:3446   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3471   */\n      dup1\n        /* \"#utility.yul\":3462:3467   */\n      dup3\n        /* \"#utility.yul\":3455:3472   */\n      mstore\n        /* \"#utility.yul\":3509:3516   */\n      dup10\n        /* \"#utility.yul\":3504:3506   */\n      dup5\n        /* \"#utility.yul\":3499:3501   */\n      dup3\n        /* \"#utility.yul\":3495:3497   */\n      dup6\n        /* \"#utility.yul\":3491:3502   */\n      add\n        /* \"#utility.yul\":3487:3507   */\n      add\n        /* \"#utility.yul\":3484:3517   */\n      gt\n        /* \"#utility.yul\":3481:3534   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":3530:3531   */\n      0x00\n        /* \"#utility.yul\":3527:3528   */\n      dup1\n        /* \"#utility.yul\":3520:3532   */\n      revert\n        /* \"#utility.yul\":3481:3534   */\n    tag_203:\n        /* \"#utility.yul\":3585:3587   */\n      dup1\n        /* \"#utility.yul\":3580:3582   */\n      dup5\n        /* \"#utility.yul\":3576:3578   */\n      dup5\n        /* \"#utility.yul\":3572:3583   */\n      add\n        /* \"#utility.yul\":3567:3569   */\n      dup6\n        /* \"#utility.yul\":3560:3565   */\n      dup5\n        /* \"#utility.yul\":3556:3570   */\n      add\n        /* \"#utility.yul\":3543:3588   */\n      calldatacopy\n        /* \"#utility.yul\":3629:3630   */\n      0x00\n        /* \"#utility.yul\":3624:3626   */\n      dup5\n        /* \"#utility.yul\":3619:3621   */\n      dup3\n        /* \"#utility.yul\":3612:3617   */\n      dup5\n        /* \"#utility.yul\":3608:3622   */\n      add\n        /* \"#utility.yul\":3604:3627   */\n      add\n        /* \"#utility.yul\":3597:3631   */\n      mstore\n      pop\n        /* \"#utility.yul\":3650:3655   */\n      dup1\n        /* \"#utility.yul\":3640:3655   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2681:3661   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3873:4053   */\n    tag_50:\n        /* \"#utility.yul\":3932:3938   */\n      0x00\n        /* \"#utility.yul\":3985:3987   */\n      0x20\n        /* \"#utility.yul\":3973:3982   */\n      dup3\n        /* \"#utility.yul\":3964:3971   */\n      dup5\n        /* \"#utility.yul\":3960:3983   */\n      sub\n        /* \"#utility.yul\":3956:3988   */\n      slt\n        /* \"#utility.yul\":3953:4005   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":4001:4002   */\n      0x00\n        /* \"#utility.yul\":3998:3999   */\n      dup1\n        /* \"#utility.yul\":3991:4003   */\n      revert\n        /* \"#utility.yul\":3953:4005   */\n    tag_206:\n      pop\n        /* \"#utility.yul\":4024:4047   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3873:4053   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4240:4426   */\n    tag_81:\n        /* \"#utility.yul\":4299:4305   */\n      0x00\n        /* \"#utility.yul\":4352:4354   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4331:4338   */\n      dup5\n        /* \"#utility.yul\":4327:4350   */\n      sub\n        /* \"#utility.yul\":4323:4355   */\n      slt\n        /* \"#utility.yul\":4320:4372   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":4368:4369   */\n      0x00\n        /* \"#utility.yul\":4365:4366   */\n      dup1\n        /* \"#utility.yul\":4358:4370   */\n      revert\n        /* \"#utility.yul\":4320:4372   */\n    tag_209:\n        /* \"#utility.yul\":4391:4420   */\n      tag_210\n        /* \"#utility.yul\":4410:4419   */\n      dup3\n        /* \"#utility.yul\":4391:4420   */\n      tag_168\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4381:4420   */\n      swap4\n        /* \"#utility.yul\":4240:4426   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e31a7b71ffc867e81d74121a93f27784cd54c1e8a520903794b304d45ff7b74464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_495": {
									"entryPoint": null,
									"id": 495,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 97,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:9"
															},
															"nodeType": "YulIf",
															"src": "204:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610ccb380380610ccb83398101604081905261002f916100b1565b61003833610061565b60018055600280546001600160a01b0319166001600160a01b03929092169190911790556100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b610bdb806100f06000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b146102c9578063a694fc3a146102e7578063d3ea435014610307578063f2fde38b14610342578063f301af4214610362578063fd71c6501461038f57600080fd5b8063150b7a02146101dd5780632e17de7814610226578063379607f514610246578063715018a6146102665780638488cc411461027b57600080fd5b366101d8576003546000036100f15760405162461bcd60e51b8152602060048201526012602482015271139bc81391951cc8185c99481cdd185ad95960721b60448201526064015b60405180910390fd5b60006100fc60035490565b6101069034610942565b60025460405162438b6360e81b81523060048201529192506000916001600160a01b039091169063438b630090602401600060405180830381865afa158015610153573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261017b91908101906109ab565b905060005b81518110156101d6578260056000600684815481106101a1576101a1610a51565b9060005260206000200154815260200190815260200160002060008282546101c99190610a67565b9091555050600101610180565b005b600080fd5b3480156101e957600080fd5b506102086101f8366004610aaa565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561023257600080fd5b506101d6610241366004610b6a565b6103af565b34801561025257600080fd5b506101d6610261366004610b6a565b610583565b34801561027257600080fd5b506101d66106c3565b34801561028757600080fd5b506102b1610296366004610b6a565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b3480156102d557600080fd5b506000546001600160a01b03166102b1565b3480156102f357600080fd5b506101d6610302366004610b6a565b6106d7565b34801561031357600080fd5b50610334610322366004610b6a565b60009081526005602052604090205490565b60405190815260200161021d565b34801561034e57600080fd5b506101d661035d366004610b83565b6107a1565b34801561036e57600080fd5b5061033461037d366004610b6a565b60056020526000908152604090205481565b34801561039b57600080fd5b506101d66103aa366004610b83565b610817565b6002600154036104015760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e8565b60026001556000818152600460205260409020546001600160a01b031633146104655760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100e8565b600081815260046020526040902080546001600160a01b031916905561048b6003610841565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d80600081146104ec576040519150601f19603f3d011682016040523d82523d6000602084013e6104f1565b606091505b50509050806104ff57600080fd5b600082815260056020526040808220919091556002549051632142170760e11b8152306004820152336024820152604481018490526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50506001805550505050565b6002600154036105d55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e8565b60026001556000818152600460205260409020546001600160a01b031633146106395760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100e8565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d806000811461069a576040519150601f19603f3d011682016040523d82523d6000602084013e61069f565b606091505b50509050806106ad57600080fd5b5060009081526005602052604081205560018055565b6106cb610898565b6106d560006108f2565b565b600254604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561072957600080fd5b505af115801561073d573d6000803e3d6000fd5b505050600082815260046020526040812080546001600160a01b031916331790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018290555061079e600380546001019055565b50565b6107a9610898565b6001600160a01b03811661080e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e8565b61079e816108f2565b61081f610898565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b8054806108905760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016100e8565b600019019055565b6000546001600160a01b031633146106d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008261095f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109a3576109a3610964565b604052919050565b600060208083850312156109be57600080fd5b825167ffffffffffffffff808211156109d657600080fd5b818501915085601f8301126109ea57600080fd5b8151818111156109fc576109fc610964565b8060051b9150610a0d84830161097a565b8181529183018401918481019088841115610a2757600080fd5b938501935b83851015610a4557845182529385019390850190610a2c565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610a8857634e487b7160e01b600052601160045260246000fd5b92915050565b80356001600160a01b0381168114610aa557600080fd5b919050565b60008060008060808587031215610ac057600080fd5b610ac985610a8e565b93506020610ad8818701610a8e565b935060408601359250606086013567ffffffffffffffff80821115610afc57600080fd5b818801915088601f830112610b1057600080fd5b813581811115610b2257610b22610964565b610b34601f8201601f1916850161097a565b91508082528984828501011115610b4a57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600060208284031215610b7c57600080fd5b5035919050565b600060208284031215610b9557600080fd5b610b9e82610a8e565b939250505056fea2646970667358221220e31a7b71ffc867e81d74121a93f27784cd54c1e8a520903794b304d45ff7b74464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCCB CODESIZE SUB DUP1 PUSH2 0xCCB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xB1 JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x61 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBDB DUP1 PUSH2 0xF0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391951CC8185C99481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x106 SWAP1 CALLVALUE PUSH2 0x942 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAA JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x48B PUSH1 0x3 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x69F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x898 JUMP JUMPDEST PUSH2 0x6D5 PUSH1 0x0 PUSH2 0x8F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 SWAP1 SSTORE POP PUSH2 0x79E PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x79E DUP2 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x81F PUSH2 0x898 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x95F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A3 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9FC PUSH2 0x964 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xA0D DUP5 DUP4 ADD PUSH2 0x97A JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA45 JUMPI DUP5 MLOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC9 DUP6 PUSH2 0xA8E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xAD8 DUP2 DUP8 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB22 PUSH2 0x964 JUMP JUMPDEST PUSH2 0xB34 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x97A JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9E DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 BYTE PUSH28 0x71FFC867E81D74121A93F27784CD54C1E8A520903794B304D45FF7B7 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "492:2262:8:-:0;;;999:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:5;936:18:0;:32::i;:::-;1701:1:1;1806:22;;1044:12:8;:27;;-1:-1:-1;;;;;;1044:27:8;-1:-1:-1;;;;;1044:27:8;;;;;;;;;;492:2262;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:9;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:9:o;:::-;492:2262:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_725": {
									"entryPoint": null,
									"id": 725,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2200,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 2290,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateRewards_666": {
									"entryPoint": null,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_654": {
									"entryPoint": 1411,
									"id": 654,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_353": {
									"entryPoint": null,
									"id": 353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_395": {
									"entryPoint": 2113,
									"id": 395,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@increment_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@onERC721Received_312": {
									"entryPoint": null,
									"id": 312,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1731,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_482": {
									"entryPoint": null,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNftContact_507": {
									"entryPoint": 2071,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_544": {
									"entryPoint": 1751,
									"id": 544,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tokenOwnedBy_478": {
									"entryPoint": null,
									"id": 478,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1953,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_610": {
									"entryPoint": 943,
									"id": 610,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6853:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:9"
																	},
																	{
																		"hexValue": "4e6f204e46547320617265207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:20:9",
																		"type": "",
																		"value": "No NFTs are staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "324:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "336:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "347:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "332:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "332:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "324:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:9",
														"type": ""
													}
												],
												"src": "14:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "407:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "438:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "466:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "471:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "462:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "452:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "503:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "506:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "496:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "496:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "496:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "531:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "524:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "524:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "524:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "427:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:9:9"
															},
															"nodeType": "YulIf",
															"src": "417:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "558:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "567:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "570:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "558:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "392:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "395:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "401:1:9",
														"type": ""
													}
												],
												"src": "361:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "706:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "717:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "694:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "736:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "751:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "767:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "772:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "763:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "763:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "776:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "759:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "759:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "747:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "729:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "653:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "664:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "675:4:9",
														"type": ""
													}
												],
												"src": "583:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "840:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "852:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "843:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "843:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "833:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "873:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "904:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "907:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "897:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "897:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "791:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "968:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "978:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "988:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1006:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1028:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1044:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1050:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1040:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1040:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1059:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1055:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1055:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1024:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1024:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1010:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1139:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1141:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1141:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1141:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1082:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1094:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1079:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1079:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1118:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1130:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1115:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1076:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:62:9"
															},
															"nodeType": "YulIf",
															"src": "1073:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1177:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1181:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "948:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "957:6:9",
														"type": ""
													}
												],
												"src": "923:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1309:830:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1319:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1329:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1323:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1376:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1351:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1360:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1347:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1372:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1343:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:32:9"
															},
															"nodeType": "YulIf",
															"src": "1340:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1401:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1421:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1415:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1415:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1405:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1440:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1450:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1444:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1495:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1507:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1497:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1497:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1497:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1483:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1491:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1480:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:14:9"
															},
															"nodeType": "YulIf",
															"src": "1477:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1520:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1545:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1530:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1524:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1600:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1609:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1612:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1602:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1602:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1602:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1579:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1583:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1575:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1575:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1590:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1564:35:9"
															},
															"nodeType": "YulIf",
															"src": "1561:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1625:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1641:2:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1635:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:9:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1629:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1667:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1669:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1669:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1669:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1659:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1663:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1656:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:10:9"
															},
															"nodeType": "YulIf",
															"src": "1653:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1698:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:9",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1715:2:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:10:9"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1702:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1727:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1758:2:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:11:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1738:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:28:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1731:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1775:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1788:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1779:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1807:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1812:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1800:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1824:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1835:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1840:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1831:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1824:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1852:34:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1874:2:9"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1878:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1870:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:11:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1883:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:20:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1856:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1918:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1927:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1920:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1920:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1901:6:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1909:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:19:9"
															},
															"nodeType": "YulIf",
															"src": "1895:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1943:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1958:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1962:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1947:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:79:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2051:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2062:3:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2056:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2056:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2044:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:23:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:23:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2080:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2091:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2096:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2087:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2087:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2080:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1985:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1990:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1982:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1998:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2000:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2016:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2007:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2007:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2000:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1978:3:9",
																"statements": []
															},
															"src": "1974:135:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2118:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "2128:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1275:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1286:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1298:6:9",
														"type": ""
													}
												],
												"src": "1203:936:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2176:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2193:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2196:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2186:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2186:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2233:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2226:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2257:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2260:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2250:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2250:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2144:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2324:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2334:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2345:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2348:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2381:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2409:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2414:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2405:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2405:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2395:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2395:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2446:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2449:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2439:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2439:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2474:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2477:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2467:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2467:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2467:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2365:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2368:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2362:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2362:10:9"
															},
															"nodeType": "YulIf",
															"src": "2359:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2307:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2310:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2316:3:9",
														"type": ""
													}
												],
												"src": "2276:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2552:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2562:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2584:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2571:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2571:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2562:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2654:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2666:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2656:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2656:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2656:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2613:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2624:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2639:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2644:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2635:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2635:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2648:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2631:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2631:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2620:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2620:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2610:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2610:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2603:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:50:9"
															},
															"nodeType": "YulIf",
															"src": "2600:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2531:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2542:5:9",
														"type": ""
													}
												],
												"src": "2503:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2811:850:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2858:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2870:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2832:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2841:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2828:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2853:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:33:9"
															},
															"nodeType": "YulIf",
															"src": "2821:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2883:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2912:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2893:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2931:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2941:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2935:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2952:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2985:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2996:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2962:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2962:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3009:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3036:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3047:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3032:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3019:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3009:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3060:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3074:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:32:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3064:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3115:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3125:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3119:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3170:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3179:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3182:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3172:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3172:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3166:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3155:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:14:9"
															},
															"nodeType": "YulIf",
															"src": "3152:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3195:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3209:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3220:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3205:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3199:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3275:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3284:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3287:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3277:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3277:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3277:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3254:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3258:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3250:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3250:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3265:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:35:9"
															},
															"nodeType": "YulIf",
															"src": "3236:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3300:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "3323:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3310:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3310:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "3304:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3349:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3351:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3351:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3351:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3341:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3345:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3338:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:10:9"
															},
															"nodeType": "YulIf",
															"src": "3335:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3380:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "3421:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3425:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3417:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3417:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3436:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3432:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3432:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3413:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3413:27:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3442:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:36:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3393:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:53:9"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "3384:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3462:5:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3469:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:17:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3455:17:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3518:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3527:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3530:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3520:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3520:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3520:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "3495:2:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3499:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3491:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3491:11:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3504:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3509:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3484:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:33:9"
															},
															"nodeType": "YulIf",
															"src": "3481:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "3560:5:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3567:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3556:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3576:2:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3580:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3572:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3572:11:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "3585:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3543:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3543:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nodeType": "YulIdentifier",
																						"src": "3612:5:9"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "3619:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3608:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3608:14:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3624:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3604:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3604:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3640:15:9",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3650:5:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2792:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2800:6:9",
														"type": ""
													}
												],
												"src": "2681:980:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3765:103:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3775:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3787:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3783:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3783:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3775:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3817:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3832:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3844:3:9",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3849:10:9",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3840:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3840:20:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3828:33:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3810:52:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3734:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3745:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3756:4:9",
														"type": ""
													}
												],
												"src": "3666:202:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3943:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3989:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3998:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4001:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3991:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3991:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3991:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3964:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3973:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3985:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:32:9"
															},
															"nodeType": "YulIf",
															"src": "3953:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4014:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4037:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4024:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4014:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3909:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3920:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3932:6:9",
														"type": ""
													}
												],
												"src": "3873:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4159:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4169:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4181:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4169:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4211:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4222:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4204:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4128:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4139:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4150:4:9",
														"type": ""
													}
												],
												"src": "4058:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4310:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4356:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4365:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4368:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4358:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4358:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4331:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4327:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:32:9"
															},
															"nodeType": "YulIf",
															"src": "4320:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4381:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4410:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4391:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4381:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4276:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4287:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4299:6:9",
														"type": ""
													}
												],
												"src": "4240:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4622:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4633:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4615:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4656:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4667:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4652:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4645:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4695:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4706:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4691:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4691:18:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4711:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4684:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4684:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4754:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4766:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4777:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4762:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4582:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4596:4:9",
														"type": ""
													}
												],
												"src": "4431:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4965:172:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4982:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4993:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4975:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5016:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5027:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5012:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5012:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:9",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5005:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5005:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5055:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5066:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5051:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5051:18:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5071:24:9",
																		"type": "",
																		"value": "You are not the owner."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5044:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5044:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5105:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5117:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5128:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5113:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5105:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4942:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4956:4:9",
														"type": ""
													}
												],
												"src": "4791:346:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:14:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5335:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5342:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5335:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5317:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5325:3:9",
														"type": ""
													}
												],
												"src": "5142:205:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5509:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5519:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5519:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5554:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5572:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5577:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5558:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5599:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5614:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5622:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5592:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5592:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5646:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5657:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5666:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5674:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5635:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5635:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5698:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5709:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5694:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5694:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5714:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5687:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5687:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5462:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5473:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5481:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5489:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5500:4:9",
														"type": ""
													}
												],
												"src": "5352:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5906:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5923:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5934:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5957:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5968:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5973:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5996:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6007:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5992:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6012:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5985:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5985:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5985:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6067:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6078:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6063:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6083:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6056:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6056:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6056:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6101:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6113:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6124:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6109:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6109:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6101:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5883:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5897:4:9",
														"type": ""
													}
												],
												"src": "5732:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6313:177:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6330:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6341:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6323:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6323:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6323:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6364:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6360:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6360:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6380:2:9",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6353:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6353:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6403:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6414:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:18:9"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6419:29:9",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6458:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6470:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6481:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6466:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6466:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6458:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6290:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6304:4:9",
														"type": ""
													}
												],
												"src": "6139:351:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6686:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6697:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6679:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6720:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6731:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6716:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6736:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6709:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6759:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6770:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6775:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6819:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6831:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6842:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6827:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6819:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6646:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6660:4:9",
														"type": ""
													}
												],
												"src": "6495:356:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No NFTs are staked\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value3 := array\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"You are not the owner.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Counter: decrement overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b146102c9578063a694fc3a146102e7578063d3ea435014610307578063f2fde38b14610342578063f301af4214610362578063fd71c6501461038f57600080fd5b8063150b7a02146101dd5780632e17de7814610226578063379607f514610246578063715018a6146102665780638488cc411461027b57600080fd5b366101d8576003546000036100f15760405162461bcd60e51b8152602060048201526012602482015271139bc81391951cc8185c99481cdd185ad95960721b60448201526064015b60405180910390fd5b60006100fc60035490565b6101069034610942565b60025460405162438b6360e81b81523060048201529192506000916001600160a01b039091169063438b630090602401600060405180830381865afa158015610153573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261017b91908101906109ab565b905060005b81518110156101d6578260056000600684815481106101a1576101a1610a51565b9060005260206000200154815260200190815260200160002060008282546101c99190610a67565b9091555050600101610180565b005b600080fd5b3480156101e957600080fd5b506102086101f8366004610aaa565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b34801561023257600080fd5b506101d6610241366004610b6a565b6103af565b34801561025257600080fd5b506101d6610261366004610b6a565b610583565b34801561027257600080fd5b506101d66106c3565b34801561028757600080fd5b506102b1610296366004610b6a565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161021d565b3480156102d557600080fd5b506000546001600160a01b03166102b1565b3480156102f357600080fd5b506101d6610302366004610b6a565b6106d7565b34801561031357600080fd5b50610334610322366004610b6a565b60009081526005602052604090205490565b60405190815260200161021d565b34801561034e57600080fd5b506101d661035d366004610b83565b6107a1565b34801561036e57600080fd5b5061033461037d366004610b6a565b60056020526000908152604090205481565b34801561039b57600080fd5b506101d66103aa366004610b83565b610817565b6002600154036104015760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e8565b60026001556000818152600460205260409020546001600160a01b031633146104655760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100e8565b600081815260046020526040902080546001600160a01b031916905561048b6003610841565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d80600081146104ec576040519150601f19603f3d011682016040523d82523d6000602084013e6104f1565b606091505b50509050806104ff57600080fd5b600082815260056020526040808220919091556002549051632142170760e11b8152306004820152336024820152604481018490526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b50506001805550505050565b6002600154036105d55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016100e8565b60026001556000818152600460205260409020546001600160a01b031633146106395760405162461bcd60e51b81526020600482015260166024820152752cb7ba9030b932903737ba103a34329037bbb732b91760511b60448201526064016100e8565b60008181526004602090815260408083205460059092528083205490516001600160a01b03909216918381818185875af1925050503d806000811461069a576040519150601f19603f3d011682016040523d82523d6000602084013e61069f565b606091505b50509050806106ad57600080fd5b5060009081526005602052604081205560018055565b6106cb610898565b6106d560006108f2565b565b600254604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561072957600080fd5b505af115801561073d573d6000803e3d6000fd5b505050600082815260046020526040812080546001600160a01b031916331790556006805460018101825591527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f018290555061079e600380546001019055565b50565b6107a9610898565b6001600160a01b03811661080e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100e8565b61079e816108f2565b61081f610898565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b8054806108905760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016100e8565b600019019055565b6000546001600160a01b031633146106d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100e8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008261095f57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156109a3576109a3610964565b604052919050565b600060208083850312156109be57600080fd5b825167ffffffffffffffff808211156109d657600080fd5b818501915085601f8301126109ea57600080fd5b8151818111156109fc576109fc610964565b8060051b9150610a0d84830161097a565b8181529183018401918481019088841115610a2757600080fd5b938501935b83851015610a4557845182529385019390850190610a2c565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b80820180821115610a8857634e487b7160e01b600052601160045260246000fd5b92915050565b80356001600160a01b0381168114610aa557600080fd5b919050565b60008060008060808587031215610ac057600080fd5b610ac985610a8e565b93506020610ad8818701610a8e565b935060408601359250606086013567ffffffffffffffff80821115610afc57600080fd5b818801915088601f830112610b1057600080fd5b813581811115610b2257610b22610964565b610b34601f8201601f1916850161097a565b91508082528984828501011115610b4a57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600060208284031215610b7c57600080fd5b5035919050565b600060208284031215610b9557600080fd5b610b9e82610a8e565b939250505056fea2646970667358221220e31a7b71ffc867e81d74121a93f27784cd54c1e8a520903794b304d45ff7b74464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD3EA4350 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xF301AF42 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0xFD71C650 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x8488CC41 EQ PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x0 SUB PUSH2 0xF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BC81391951CC8185C99481CDD185AD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFC PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x106 SWAP1 CALLVALUE PUSH2 0x942 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH3 0x438B63 PUSH1 0xE8 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x438B6300 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17B SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1D6 JUMPI DUP3 PUSH1 0x5 PUSH1 0x0 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0xA51 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xA67 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0x180 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xAAA JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x583 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B1 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x35D CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x334 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x401 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x465 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH2 0x48B PUSH1 0x3 PUSH2 0x841 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x577 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2CB7BA9030B932903737BA103A34329037BBB732B917 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x69A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x69F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x6CB PUSH2 0x898 JUMP JUMPDEST PUSH2 0x6D5 PUSH1 0x0 PUSH2 0x8F2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x73D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP3 SWAP1 SSTORE POP PUSH2 0x79E PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x80E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x79E DUP2 PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x81F PUSH2 0x898 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x95F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A3 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9FC PUSH2 0x964 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xA0D DUP5 DUP4 ADD PUSH2 0x97A JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP9 DUP5 GT ISZERO PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xA45 JUMPI DUP5 MLOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xA2C JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA88 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAC9 DUP6 PUSH2 0xA8E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 PUSH2 0xAD8 DUP2 DUP8 ADD PUSH2 0xA8E JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xB22 JUMPI PUSH2 0xB22 PUSH2 0x964 JUMP JUMPDEST PUSH2 0xB34 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x97A JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB9E DUP3 PUSH2 0xA8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE3 BYTE PUSH28 0x71FFC867E81D74121A93F27784CD54C1E8A520903794B304D45FF7B7 DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "492:2262:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2374:17;918:14:6;2405:1:8;2374:32;2366:63;;;;-1:-1:-1;;;2366:63:8;;216:2:9;2366:63:8;;;198:21:9;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:9;;;267:48;332:18;;2366:63:8;;;;;;;;;2439:20;2474:27;:17;918:14:6;;827:112;2474:27:8;2462:39;;:9;:39;:::i;:::-;2548:12;;2543:47;;-1:-1:-1;;;2543:47:8;;2584:4;2543:47;;;729:51:9;2439:62:8;;-1:-1:-1;2511:29:8;;-1:-1:-1;;;;;2548:12:8;;;;2543:32;;702:18:9;;2543:47:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2543:47:8;;;;;;;;;;;;:::i;:::-;2511:79;;2613:9;2609:137;2632:12;:19;2628:1;:23;2609:137;;;2694:12;2667:7;:23;2675:11;2687:1;2675:14;;;;;;;;:::i;:::-;;;;;;;;;2667:23;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;2731:3:8;;2609:137;;;;492:2262;;;;588:200:4;;;;;;;;;;-1:-1:-1;588:200:4;;;;;:::i;:::-;-1:-1:-1;;;588:200:4;;;;;;;;;;-1:-1:-1;;;;;;3828:33:9;;;3810:52;;3798:2;3783:18;588:200:4;;;;;;;;1454:456:8;;;;;;;;;;-1:-1:-1;1454:456:8;;;;;:::i;:::-;;:::i;1916:290::-;;;;;;;;;;-1:-1:-1;1916:290:8;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;868:48:8:-;;;;;;;;;;-1:-1:-1;868:48:8;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;868:48:8;;;;;;-1:-1:-1;;;;;747:32:9;;;729:51;;717:2;702:18;868:48:8;583:203:9;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1198:250:8;;;;;;;;;;-1:-1:-1;1198:250:8;;;;;:::i;:::-;;:::i;2212:111::-;;;;;;;;;;-1:-1:-1;2212:111:8;;;;;:::i;:::-;2275:7;2300:16;;;:7;:16;;;;;;;2212:111;;;;4204:25:9;;;4192:2;4177:18;2212:111:8;4058:177:9;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;922:43:8:-;;;;;;;;;;-1:-1:-1;922:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;1084:108;;;;;;;;;;-1:-1:-1;1084:108:8;;;;;:::i;:::-;;:::i;1454:456::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;4633:2:9;2317:63:1;;;4615:21:9;4672:2;4652:18;;;4645:30;4711:33;4691:18;;;4684:61;4762:18;;2317:63:1;4431:355:9;2317:63:1;1744:1;2455:7;:18;1528:21:8::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;1528:21:8::1;1553:10;1528:35;1520:70;;;::::0;-1:-1:-1;;;1520:70:8;;4993:2:9;1520:70:8::1;::::0;::::1;4975:21:9::0;5032:2;5012:18;;;5005:30;-1:-1:-1;;;5051:18:9;;;5044:52;5113:18;;1520:70:8::1;4791:346:9::0;1520:70:8::1;1607:21;::::0;;;:12:::1;:21;::::0;;;;1600:28;;-1:-1:-1;;;;;;1600:28:8::1;::::0;;1638:29:::1;:17;:27;:29::i;:::-;1678:12;1704:21:::0;;;:12:::1;:21;::::0;;;;;;;;1739:7:::1;:16:::0;;;;;;;1696:64;;-1:-1:-1;;;;;1704:21:8;;::::1;::::0;1678:12;1696:64;1678:12;1696:64;1739:16;1704:21;1696:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1677:83;;;1778:7;1770:16;;;::::0;::::1;;1803;::::0;;;:7:::1;:16;::::0;;;;;1796:23;;;;1837:12:::1;::::0;1829:74;;-1:-1:-1;;;1829:74:8;;1876:4:::1;1829:74;::::0;::::1;5592:34:9::0;1883:10:8::1;5642:18:9::0;;;5635:43;5694:18;;;5687:34;;;-1:-1:-1;;;;;1837:12:8;;::::1;::::0;1829:38:::1;::::0;5527:18:9;;1829:74:8::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;;;;1454:456:8:o;1916:290::-;1744:1:1;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:1;;4633:2:9;2317:63:1;;;4615:21:9;4672:2;4652:18;;;4645:30;4711:33;4691:18;;;4684:61;4762:18;;2317:63:1;4431:355:9;2317:63:1;1744:1;2455:7;:18;1988:21:8::1;::::0;;;:12:::1;:21;::::0;;;;;-1:-1:-1;;;;;1988:21:8::1;2013:10;1988:35;1980:70;;;::::0;-1:-1:-1;;;1980:70:8;;4993:2:9;1980:70:8::1;::::0;::::1;4975:21:9::0;5032:2;5012:18;;;5005:30;-1:-1:-1;;;5051:18:9;;;5044:52;5113:18;;1980:70:8::1;4791:346:9::0;1980:70:8::1;2061:12;2087:21:::0;;;:12:::1;:21;::::0;;;;;;;;2122:7:::1;:16:::0;;;;;;;2079:64;;-1:-1:-1;;;;;2087:21:8;;::::1;::::0;2061:12;2079:64;2061:12;2079:64;2122:16;2087:21;2079:64:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:83;;;2161:7;2153:16;;;::::0;::::1;;-1:-1:-1::0;2198:1:8::1;2179:16:::0;;;:7:::1;:16;::::0;;;;:20;1701:1:1;2628:22;;1916:290:8:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1198:250:8:-;1257:12;;1249:74;;-1:-1:-1;;;1249:74:8;;1288:10;1249:74;;;5592:34:9;1308:4:8;5642:18:9;;;5635:43;5694:18;;;5687:34;;;-1:-1:-1;;;;;1257:12:8;;;;1249:38;;5527:18:9;;1249:74:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1333:21:8;;;;:12;:21;;;;;:34;;-1:-1:-1;;;;;;1333:34:8;1357:10;1333:34;;;1377:11;:25;;1333:34;1377:25;;;;;;;;;;;-1:-1:-1;1412:29:8;:17;1032:19:6;;1050:1;1032:19;;;945:123;1412:29:8;1198:250;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5934:2:9;2161:73:0::1;::::0;::::1;5916:21:9::0;5973:2;5953:18;;;5946:30;6012:34;5992:18;;;5985:62;-1:-1:-1;;;6063:18:9;;;6056:36;6109:19;;2161:73:0::1;5732:402:9::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1084:108:8:-:0;1094:13:0;:11;:13::i;:::-;1158:12:8::1;:27:::0;;-1:-1:-1;;;;;;1158:27:8::1;-1:-1:-1::0;;;;;1158:27:8;;;::::1;::::0;;;::::1;::::0;;1084:108::o;1074:229:6:-;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:6;;6341:2:9;1177:49:6;;;6323:21:9;6380:2;6360:18;;;6353:30;6419:29;6399:18;;;6392:57;6466:18;;1177:49:6;6139:351:9;1177:49:6;-1:-1:-1;;1277:9:6;1260:26;;1074:229::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6697:2:9;1414:68:0;;;6679:21:9;;;6716:18;;;6709:30;6775:34;6755:18;;;6748:62;6827:18;;1414:68:0;6495:356:9;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;361:217:9:-;401:1;427;417:132;;471:10;466:3;462:20;459:1;452:31;506:4;503:1;496:15;534:4;531:1;524:15;417:132;-1:-1:-1;563:9:9;;361:217::o;791:127::-;852:10;847:3;843:20;840:1;833:31;883:4;880:1;873:15;907:4;904:1;897:15;923:275;994:2;988:9;1059:2;1040:13;;-1:-1:-1;;1036:27:9;1024:40;;1094:18;1079:34;;1115:22;;;1076:62;1073:88;;;1141:18;;:::i;:::-;1177:2;1170:22;923:275;;-1:-1:-1;923:275:9:o;1203:936::-;1298:6;1329:2;1372;1360:9;1351:7;1347:23;1343:32;1340:52;;;1388:1;1385;1378:12;1340:52;1421:9;1415:16;1450:18;1491:2;1483:6;1480:14;1477:34;;;1507:1;1504;1497:12;1477:34;1545:6;1534:9;1530:22;1520:32;;1590:7;1583:4;1579:2;1575:13;1571:27;1561:55;;1612:1;1609;1602:12;1561:55;1641:2;1635:9;1663:2;1659;1656:10;1653:36;;;1669:18;;:::i;:::-;1715:2;1712:1;1708:10;1698:20;;1738:28;1762:2;1758;1754:11;1738:28;:::i;:::-;1800:15;;;1870:11;;;1866:20;;;1831:12;;;;1898:19;;;1895:39;;;1930:1;1927;1920:12;1895:39;1954:11;;;;1974:135;1990:6;1985:3;1982:15;1974:135;;;2056:10;;2044:23;;2007:12;;;;2087;;;;1974:135;;;2128:5;1203:936;-1:-1:-1;;;;;;;;1203:936:9:o;2144:127::-;2205:10;2200:3;2196:20;2193:1;2186:31;2236:4;2233:1;2226:15;2260:4;2257:1;2250:15;2276:222;2341:9;;;2362:10;;;2359:133;;;2414:10;2409:3;2405:20;2402:1;2395:31;2449:4;2446:1;2439:15;2477:4;2474:1;2467:15;2359:133;2276:222;;;;:::o;2503:173::-;2571:20;;-1:-1:-1;;;;;2620:31:9;;2610:42;;2600:70;;2666:1;2663;2656:12;2600:70;2503:173;;;:::o;2681:980::-;2776:6;2784;2792;2800;2853:3;2841:9;2832:7;2828:23;2824:33;2821:53;;;2870:1;2867;2860:12;2821:53;2893:29;2912:9;2893:29;:::i;:::-;2883:39;;2941:2;2962:38;2996:2;2985:9;2981:18;2962:38;:::i;:::-;2952:48;;3047:2;3036:9;3032:18;3019:32;3009:42;;3102:2;3091:9;3087:18;3074:32;3125:18;3166:2;3158:6;3155:14;3152:34;;;3182:1;3179;3172:12;3152:34;3220:6;3209:9;3205:22;3195:32;;3265:7;3258:4;3254:2;3250:13;3246:27;3236:55;;3287:1;3284;3277:12;3236:55;3323:2;3310:16;3345:2;3341;3338:10;3335:36;;;3351:18;;:::i;:::-;3393:53;3436:2;3417:13;;-1:-1:-1;;3413:27:9;3409:36;;3393:53;:::i;:::-;3380:66;;3469:2;3462:5;3455:17;3509:7;3504:2;3499;3495;3491:11;3487:20;3484:33;3481:53;;;3530:1;3527;3520:12;3481:53;3585:2;3580;3576;3572:11;3567:2;3560:5;3556:14;3543:45;3629:1;3624:2;3619;3612:5;3608:14;3604:23;3597:34;;3650:5;3640:15;;;;;2681:980;;;;;;;:::o;3873:180::-;3932:6;3985:2;3973:9;3964:7;3960:23;3956:32;3953:52;;;4001:1;3998;3991:12;3953:52;-1:-1:-1;4024:23:9;;3873:180;-1:-1:-1;3873:180:9:o;4240:186::-;4299:6;4352:2;4340:9;4331:7;4327:23;4323:32;4320:52;;;4368:1;4365;4358:12;4320:52;4391:29;4410:9;4391:29;:::i;:::-;4381:39;4240:186;-1:-1:-1;;;4240:186:9:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "607000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateRewards(uint256)": "2482",
								"claim(uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2331",
								"renounceOwnership()": "infinite",
								"rewards(uint256)": "2526",
								"setNftContact(address)": "26845",
								"stake(uint256)": "infinite",
								"tokenOwnedBy(uint256)": "2566",
								"transferOwnership(address)": "28399",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 999,
									"end": 1078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 999,
									"end": 1078,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1044,
									"end": 1071,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 2754,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e31a7b71ffc867e81d74121a93f27784cd54c1e8a520903794b304d45ff7b74464736f6c63430008110033",
									".code": [
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "A694FC3A"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "D3EA4350"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "F301AF42"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "FD71C650"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "150B7A02"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "2E17DE78"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "379607F5"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "8488CC41"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81391951CC8185C99481CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 267,
											"end": 315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 2366,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2474,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2474,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2471,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2462,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "438B63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 729,
											"end": 780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2439,
											"end": 2501,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2540,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2548,
											"end": 2560,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "PUSH",
											"source": 8,
											"value": "438B6300"
										},
										{
											"begin": 2543,
											"end": 2575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 702,
											"end": 720,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2590,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2590,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2632,
											"end": 2651,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2651,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2687,
											"end": 2688,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2675,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2689,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2690,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2667,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2706,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2734,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2609,
											"end": 2746,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 492,
											"end": 2754,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 588,
											"end": 788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3828,
											"end": 3861,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3862,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 588,
											"end": 788,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 588,
											"end": 788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 588,
											"end": 788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 868,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 868,
											"end": 916,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 868,
											"end": 916,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 747,
											"end": 779,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 779,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 729,
											"end": 780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 729,
											"end": 780,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 717,
											"end": 719,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 868,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 583,
											"end": 786,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2212,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2307,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4177,
											"end": 4195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4058,
											"end": 4235,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 922,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 922,
											"end": 965,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1454,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4711,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4786,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1563,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1563,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1520,
											"end": 1590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103A34329037BBB732B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 5137,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1520,
											"end": 1590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1600,
											"end": 1628,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1638,
											"end": 1665,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 1638,
											"end": 1667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1638,
											"end": 1667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1704,
											"end": 1725,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1770,
											"end": 1786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1803,
											"end": 1819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1880,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1883,
											"end": 1893,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1849,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1829,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1916,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4635,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4674,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4652,
											"end": 4670,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4711,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4691,
											"end": 4709,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4684,
											"end": 4745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4786,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2009,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1988,
											"end": 2009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2013,
											"end": 2023,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1988,
											"end": 2023,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4993,
											"end": 4995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 2050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 4996,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5035,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BA9030B932903737BA103A34329037BBB732B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "51"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5069,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5096,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5113,
											"end": 5131,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 5137,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1980,
											"end": 2050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2129,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2108,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2079,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2143,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2168,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2169,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2153,
											"end": 2169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2198,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2179,
											"end": 2195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2195,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2179,
											"end": 2199,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1298,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1312,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5635,
											"end": 5678,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5712,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5687,
											"end": 5721,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1257,
											"end": 1269,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 1249,
											"end": 1287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1249,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1354,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1367,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1388,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1367,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "PUSH",
											"source": 8,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1377,
											"end": 1402,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1412,
											"end": 1429,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1412,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1198,
											"end": 1448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5934,
											"end": 5936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5916,
											"end": 5937,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5975,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5953,
											"end": 5971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6012,
											"end": 6046,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5985,
											"end": 6047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6063,
											"end": 6081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6092,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6109,
											"end": 6128,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6109,
											"end": 6128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 6134,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1084,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1158,
											"end": 1170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1158,
											"end": 1185,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1084,
											"end": 1192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6323,
											"end": 6344,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6380,
											"end": 6382,
											"name": "PUSH",
											"source": 9,
											"value": "1B"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6353,
											"end": 6383,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6419,
											"end": 6448,
											"name": "PUSH",
											"source": 9,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6449,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6139,
											"end": 6490,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6699,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6679,
											"end": 6700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6679,
											"end": 6700,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6739,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6748,
											"end": 6810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6851,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 361,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 361,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 401,
											"end": 402,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 417,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 417,
											"end": 549,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 471,
											"end": 481,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 466,
											"end": 469,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 482,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 459,
											"end": 460,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 503,
											"end": 504,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 496,
											"end": 511,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 534,
											"end": 538,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 417,
											"end": 549,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 417,
											"end": 549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 563,
											"end": 572,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 563,
											"end": 572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 361,
											"end": 578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 791,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 852,
											"end": 862,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 847,
											"end": 850,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 883,
											"end": 887,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 907,
											"end": 911,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 912,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 923,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 994,
											"end": 996,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 997,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1061,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1024,
											"end": 1064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1024,
											"end": 1064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1112,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1138,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1161,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1073,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1073,
											"end": 1161,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1141,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 923,
											"end": 1198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 2139,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 1203,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1374,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1370,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1375,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 1340,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1421,
											"end": 1430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1415,
											"end": 1431,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1494,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1477,
											"end": 1511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1497,
											"end": 1509,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1511,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 1477,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 1551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1534,
											"end": 1543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1590,
											"end": 1597,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1587,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1588,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1571,
											"end": 1598,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1561,
											"end": 1616,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1610,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1614,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1616,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 1561,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1666,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1689,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1653,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1653,
											"end": 1689,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1669,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 1669,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1708,
											"end": 1718,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1762,
											"end": 1764,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1758,
											"end": 1760,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 1738,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1766,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 1738,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1815,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1800,
											"end": 1815,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1870,
											"end": 1881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1886,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1831,
											"end": 1843,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1917,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1917,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1898,
											"end": 1917,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1920,
											"end": 1932,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 1895,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1965,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1965,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1965,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1965,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1988,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1982,
											"end": 1997,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2066,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2056,
											"end": 2066,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2067,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2044,
											"end": 2067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2007,
											"end": 2019,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 1974,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2133,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 2139,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1203,
											"end": 2139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2271,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2144,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2200,
											"end": 2203,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2196,
											"end": 2216,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2193,
											"end": 2194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2217,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2226,
											"end": 2241,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2260,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2265,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2350,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2372,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2492,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2359,
											"end": 2492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2409,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2405,
											"end": 2425,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2453,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2439,
											"end": 2454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2482,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2359,
											"end": 2492,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2359,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2676,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2503,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2591,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 2591,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2620,
											"end": 2651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2620,
											"end": 2651,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2652,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2610,
											"end": 2652,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2600,
											"end": 2670,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2668,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2600,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2600,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2676,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2676,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2676,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2503,
											"end": 2676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2782,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2806,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2856,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 2850,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2839,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2851,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2857,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2872,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2821,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2893,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2893,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2922,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2883,
											"end": 2922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2962,
											"end": 3000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3000,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2962,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3000,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2952,
											"end": 3000,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3049,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3019,
											"end": 3051,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3009,
											"end": 3051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3125,
											"end": 3143,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3168,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3169,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3172,
											"end": 3184,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3152,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3205,
											"end": 3227,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3265,
											"end": 3272,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3254,
											"end": 3256,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3273,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3285,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3236,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3325,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3326,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3345,
											"end": 3347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3348,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3371,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3335,
											"end": 3371,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3351,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3413,
											"end": 3440,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3393,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3446,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3393,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3446,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3467,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3497,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3491,
											"end": 3502,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3507,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3517,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3481,
											"end": 3534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3531,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3528,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3520,
											"end": 3532,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3534,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3481,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3585,
											"end": 3587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3570,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3619,
											"end": 3621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3612,
											"end": 3617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3608,
											"end": 3622,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3655,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2681,
											"end": 3661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4053,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 3873,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3932,
											"end": 3938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3987,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3964,
											"end": 3971,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3983,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3988,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 4005,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3953,
											"end": 4005,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4001,
											"end": 4002,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4003,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3953,
											"end": 4005,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3953,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4024,
											"end": 4047,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4047,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 4053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3873,
											"end": 4053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4426,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 4240,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4305,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4331,
											"end": 4338,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4355,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4372,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4320,
											"end": 4372,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4368,
											"end": 4369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4372,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4320,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4410,
											"end": 4419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4391,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4391,
											"end": 4420,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4391,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4420,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4240,
											"end": 4426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4240,
											"end": 4426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@4.7.3/access/Ownable.sol",
								"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
								"@openzeppelin/contracts@4.7.3/utils/Context.sol",
								"@openzeppelin/contracts@4.7.3/utils/Counters.sol",
								"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
								"contracts/NFTStaking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateRewards(uint256)": "d3ea4350",
							"claim(uint256)": "379607f5",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewards(uint256)": "f301af42",
							"setNftContact(address)": "fd71c650",
							"stake(uint256)": "a694fc3a",
							"tokenOwnedBy(uint256)": "8488cc41",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NFTUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract_\",\"type\":\"address\"}],\"name\":\"setNftContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnedBy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTStaking.sol\":\"SacredTemple\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.7.3/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts@4.7.3/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts@4.7.3/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTStaking.sol\":{\"keccak256\":\"0xf316f6a5ad874075367f618cd94d2b484ed184cec061fdc4c0d21dcb7ef059c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59bdeac4b4fddcdfe4314235f701d9af56bacffeba6e95ce7990f39516bd9493\",\"dweb:/ipfs/QmbV2gjcXpXFW5H8w6gkHMhrbtURzDRoJmneN1seeC4vq6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 445,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_nftContract",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 452,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "_stakedNFTCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)341_storage"
							},
							{
								"astId": 478,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenOwnedBy",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 482,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "rewards",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 485,
								"contract": "contracts/NFTStaking.sol:SacredTemple",
								"label": "tokenStaked",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)341_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 340,
										"contract": "contracts/NFTStaking.sol:SacredTemple",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.7.3/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 336,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 335,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								335
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						],
						"IERC721": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 422,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"271:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 421,
										"src": "271:7:2"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268,
								421
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 167,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 176,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 185,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 268,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 268,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 268,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 268,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 268,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 268,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 268,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 268,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 268,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 269,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							286
						]
					},
					"id": 287,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 270,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 271,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 286,
							"linearizedBaseContracts": [
								286
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "859:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "885:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "907:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "932:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:3"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "976:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 282,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:3"
									},
									"scope": 286,
									"src": "824:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 287,
							"src": "294:692:3",
							"usedErrors": []
						}
					],
					"src": "116:871:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
					"exportedSymbols": {
						"ERC721Holder": [
							313
						],
						"IERC721Receiver": [
							286
						]
					},
					"id": 314,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 288,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "104:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721Receiver.sol",
							"file": "../IERC721Receiver.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 314,
							"sourceUnit": 287,
							"src": "129:32:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 291,
										"name": "IERC721Receiver",
										"nameLocations": [
											"424:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 286,
										"src": "424:15:4"
									},
									"id": 292,
									"nodeType": "InheritanceSpecifier",
									"src": "424:15:4"
								}
							],
							"canonicalName": "ERC721Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 290,
								"nodeType": "StructuredDocumentation",
								"src": "163:235:4",
								"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313,
								286
							],
							"name": "ERC721Holder",
							"nameLocation": "408:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										285
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "734:54:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 307,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "751:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721Holder_$313",
																"typeString": "contract ERC721Holder"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "756:16:4",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "751:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "773:8:4",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "751:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "744:37:4"
											}
										]
									},
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "446:137:4",
										"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "597:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "708:8:4"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "623:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "640:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "657:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "674:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "613:79:4"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "726:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 304,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:8:4"
									},
									"scope": 313,
									"src": "588:200:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 314,
							"src": "399:391:4",
							"usedErrors": []
						}
					],
					"src": "104:687:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@4.7.3/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							335
						]
					},
					"id": 336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 315,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 335,
							"linearizedBaseContracts": [
								335
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 335,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 335,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 336,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@4.7.3/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 338,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:6",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Counters",
							"nameLocation": "432:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 341,
									"members": [
										{
											"constant": false,
											"id": 340,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 341,
											"src": "786:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 339,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:6",
									"nodeType": "StructDefinition",
									"scope": 409,
									"src": "447:374:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "901:38:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 349,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "918:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 348,
												"id": 351,
												"nodeType": "Return",
												"src": "911:21:6"
											}
										]
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "844:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 342,
														"name": "Counter",
														"nameLocations": [
															"844:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "844:7:6"
													},
													"referencedDeclaration": 341,
													"src": "844:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:6"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "892:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:6"
									},
									"scope": 409,
									"src": "827:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "998:70:6",
										"statements": [
											{
												"id": 365,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:6",
												"statements": [
													{
														"expression": {
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 359,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "1032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1032:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 364,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:6"
													}
												]
											}
										]
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "964:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 354,
														"name": "Counter",
														"nameLocations": [
															"964:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "964:7:6"
													},
													"referencedDeclaration": 341,
													"src": "964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:6"
									},
									"scope": 409,
									"src": "945:123:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1127:176:6",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "1137:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"expression": {
														"id": 375,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "1153:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:6",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 340,
													"src": "1153:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "1185:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:6"
											},
											{
												"id": 393,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:6",
												"statements": [
													{
														"expression": {
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 385,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "1260:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:6",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "1260:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "1277:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 392,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:6"
													}
												]
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1093:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 369,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 368,
														"name": "Counter",
														"nameLocations": [
															"1093:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1093:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:6"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:6"
									},
									"scope": 409,
									"src": "1074:229:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1358:35:6",
										"statements": [
											{
												"expression": {
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 401,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1368:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:6",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "1368:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 406,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:6"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1324:23:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 397,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 396,
														"name": "Counter",
														"nameLocations": [
															"1324:7:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 341,
														"src": "1324:7:6"
													},
													"referencedDeclaration": 341,
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:6"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:6"
									},
									"scope": 409,
									"src": "1309:84:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "424:971:6",
							"usedErrors": []
						}
					],
					"src": "87:1309:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.7.3/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							421
						]
					},
					"id": 422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 421,
							"linearizedBaseContracts": [
								421
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 414,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 421,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 422,
							"src": "405:447:7",
							"usedErrors": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"contracts/NFTStaking.sol": {
				"ast": {
					"absolutePath": "contracts/NFTStaking.sol",
					"exportedSymbols": {
						"Context": [
							335
						],
						"Counters": [
							409
						],
						"ERC721Holder": [
							313
						],
						"IERC165": [
							421
						],
						"IERC721": [
							268
						],
						"IERC721Receiver": [
							286
						],
						"INFT": [
							437
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"SacredTemple": [
							726
						]
					},
					"id": 727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"file": "@openzeppelin/contracts@4.7.3/access/Ownable.sol",
							"id": 424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 113,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@4.7.3/security/ReentrancyGuard.sol",
							"id": 425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 153,
							"src": "117:68:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/utils/ERC721Holder.sol",
							"id": 426,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 314,
							"src": "186:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts@4.7.3/token/ERC721/IERC721.sol",
							"id": 427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 269,
							"src": "262:64:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"file": "@openzeppelin/contracts@4.7.3/utils/Counters.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 410,
							"src": "327:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INFT",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 437,
							"linearizedBaseContracts": [
								437
							],
							"name": "INFT",
							"nameLocation": "397:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "438b6300",
									"id": 436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "walletOfOwner",
									"nameLocation": "417:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "439:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "431:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:16:8"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "470:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "470:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "470:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:18:8"
									},
									"scope": 437,
									"src": "408:80:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 727,
							"src": "387:103:8",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "Ownable",
										"nameLocations": [
											"517:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "517:7:8"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "517:7:8"
								},
								{
									"baseName": {
										"id": 440,
										"name": "ERC721Holder",
										"nameLocations": [
											"526:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 313,
										"src": "526:12:8"
									},
									"id": 441,
									"nodeType": "InheritanceSpecifier",
									"src": "526:12:8"
								},
								{
									"baseName": {
										"id": 442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"540:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "540:15:8"
									},
									"id": 443,
									"nodeType": "InheritanceSpecifier",
									"src": "540:15:8"
								}
							],
							"canonicalName": "SacredTemple",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726,
								152,
								313,
								286,
								112,
								335
							],
							"name": "SacredTemple",
							"nameLocation": "501:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 445,
									"mutability": "mutable",
									"name": "_nftContract",
									"nameLocation": "570:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "562:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 444,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 449,
									"libraryName": {
										"id": 446,
										"name": "Counters",
										"nameLocations": [
											"595:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "595:8:8"
									},
									"nodeType": "UsingForDirective",
									"src": "589:36:8",
									"typeName": {
										"id": 448,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 447,
											"name": "Counters.Counter",
											"nameLocations": [
												"608:8:8",
												"617:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "608:16:8"
										},
										"referencedDeclaration": 341,
										"src": "608:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 452,
									"mutability": "mutable",
									"name": "_stakedNFTCounter",
									"nameLocation": "655:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "630:42:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$341_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 451,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 450,
											"name": "Counters.Counter",
											"nameLocations": [
												"630:8:8",
												"639:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "630:16:8"
										},
										"referencedDeclaration": 341,
										"src": "630:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$341_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39",
									"id": 460,
									"name": "NFTStaked",
									"nameLocation": "685:9:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "695:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "718:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "710:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "735:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "727:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:47:8"
									},
									"src": "679:63:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c486b9458a8637650d84d262414833a5a457bc91ae86b7da110386c8c3fa255b",
									"id": 468,
									"name": "NFTUnstaked",
									"nameLocation": "753:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "773:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "765:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "788:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "780:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "797:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:47:8"
									},
									"src": "747:65:8"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 474,
									"name": "Claimed",
									"nameLocation": "823:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "839:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "831:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "854:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "846:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:31:8"
									},
									"src": "817:45:8"
								},
								{
									"constant": false,
									"functionSelector": "8488cc41",
									"id": 478,
									"mutability": "mutable",
									"name": "tokenOwnedBy",
									"nameLocation": "904:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "868:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 477,
										"keyType": {
											"id": 475,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "877:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "868:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 476,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "888:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f301af42",
									"id": 482,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "958:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "922:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 481,
										"keyType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "931:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "922:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 480,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "942:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "tokenStaked",
									"nameLocation": "981:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 726,
									"src": "971:21:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 483,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "971:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 484,
										"nodeType": "ArrayTypeName",
										"src": "971:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1034:44:8",
										"statements": [
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1044:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "1059:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1044:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "1044:27:8"
											}
										]
									},
									"id": 495,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1020:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1012:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:22:8"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:0:8"
									},
									"scope": 726,
									"src": "999:79:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1148:44:8",
										"statements": [
											{
												"expression": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 502,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "1158:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 503,
														"name": "nftContract_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1173:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1158:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "1158:27:8"
											}
										]
									},
									"functionSelector": "fd71c650",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 499,
												"name": "onlyOwner",
												"nameLocations": [
													"1138:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1138:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1138:9:8"
										}
									],
									"name": "setNftContact",
									"nameLocation": "1093:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "nftContract_",
												"nameLocation": "1115:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1107:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:22:8"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:8"
									},
									"scope": 726,
									"src": "1084:108:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "1239:209:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 516,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1288:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1292:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1288:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1308:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1300:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1300:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1300:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1315:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 513,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1257:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1249:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1249:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1271:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1249:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1249:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1249:74:8"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 525,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1333:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1346:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1333:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 528,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1357:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1361:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1357:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1333:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "1333:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "1394:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "tokenStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1377:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:4:8",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1377:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1377:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "1377:25:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 538,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1412:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1430:9:8",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 367,
														"src": "1412:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1412:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "1412:29:8"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1207:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1221:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "1213:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:8"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:8"
									},
									"scope": 726,
									"src": "1198:250:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "1510:400:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 552,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1528:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1528:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 555,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1553:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1557:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1553:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1528:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1520:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1520:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "1520:70:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1600:28:8",
													"subExpression": {
														"baseExpression": {
															"id": 561,
															"name": "tokenOwnedBy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "1607:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 563,
														"indexExpression": {
															"id": 562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1620:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1607:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1600:28:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 566,
															"name": "_stakedNFTCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1638:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$341_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1656:9:8",
														"memberName": "decrement",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1638:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$341_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "1638:29:8"
											},
											{
												"assignments": [
													572,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 572,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1683:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 609,
														"src": "1678:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 571,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1678:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1757:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 575,
																			"name": "tokenOwnedBy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "1704:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 577,
																		"indexExpression": {
																			"id": 576,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "1717:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1704:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1696:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1696:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1696:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1727:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1696:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 580,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1739:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 582,
																"indexExpression": {
																	"id": 581,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "1747:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1739:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1696:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1696:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1677:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1778:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1770:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "1770:16:8"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1796:23:8",
													"subExpression": {
														"baseExpression": {
															"id": 591,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "1803:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1811:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1803:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "1796:23:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1876:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1868:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1868:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1868:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1883:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1887:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1883:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1895:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 597,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "1837:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 596,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "1829:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$268_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$268",
																"typeString": "contract IERC721"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:16:8",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1829:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "1829:74:8"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "nonReentrant",
												"nameLocations": [
													"1488:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1488:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1488:12:8"
										}
									],
									"name": "unstake",
									"nameLocation": "1463:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1479:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1471:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:17:8"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:0:8"
									},
									"scope": 726,
									"src": "1454:456:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1970:236:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 618,
																	"name": "tokenOwnedBy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1988:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 620,
																"indexExpression": {
																	"id": 619,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2001:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1988:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2013:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2017:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2013:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1988:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e65722e",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2025:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															},
															"value": "You are not the owner."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d18e18996dbf7b96f1392a5c98d6c1530dd77cf511c83e06c26beea9e4342c3f",
																"typeString": "literal_string \"You are not the owner.\""
															}
														],
														"id": 617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1980:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "1980:70:8"
											},
											{
												"assignments": [
													628,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 628,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2066:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "2061:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 627,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2061:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2140:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 631,
																			"name": "tokenOwnedBy",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "2087:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																				"typeString": "mapping(uint256 => address)"
																			}
																		},
																		"id": 633,
																		"indexExpression": {
																			"id": 632,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "2100:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2087:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2079:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2079:8:8",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2079:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2110:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2079:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"baseExpression": {
																	"id": 636,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2122:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "2130:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2122:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2079:60:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2079:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "2161:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 643,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "2153:16:8"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 647,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2179:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "2187:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2179:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2198:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2179:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "2179:20:8"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 615,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 614,
												"name": "nonReentrant",
												"nameLocations": [
													"1948:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 151,
												"src": "1948:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1948:12:8"
										}
									],
									"name": "claim",
									"nameLocation": "1925:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:17:8"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:0:8"
									},
									"scope": 726,
									"src": "1916:290:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2283:40:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 661,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 663,
													"indexExpression": {
														"id": 662,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "2308:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2300:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 664,
												"nodeType": "Return",
												"src": "2293:23:8"
											}
										]
									},
									"functionSelector": "d3ea4350",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "2221:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2246:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2238:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2238:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:17:8"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2275:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2275:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2274:9:8"
									},
									"scope": 726,
									"src": "2212:111:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "2356:396:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 670,
																		"name": "_stakedNFTCounter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "2374:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$341_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 671,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2392:7:8",
																	"memberName": "current",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 353,
																	"src": "2374:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2374:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2405:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2374:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e46547320617265207374616b6564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2408:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															},
															"value": "No NFTs are staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a240602ab05c6202077858d63ad030ef95562ea2fd3969284dd090a3c9f9400",
																"typeString": "literal_string \"No NFTs are staked\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2366:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "2366:63:8"
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "sharePerEach",
														"nameLocation": "2447:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "2439:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2439:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 680,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2462:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2466:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2462:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 682,
																"name": "_stakedNFTCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "2474:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$341_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2492:7:8",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 353,
															"src": "2474:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$341_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$341_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2474:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2462:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2439:62:8"
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "tokensStaked",
														"nameLocation": "2528:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "2511:29:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 689,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2511:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 690,
															"nodeType": "ArrayTypeName",
															"src": "2511:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 698,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2584:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SacredTemple_$726",
																		"typeString": "contract SacredTemple"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2576:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2576:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2576:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 693,
																	"name": "_nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "2548:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 692,
																"name": "INFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "2543:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INFT_$437_$",
																	"typeString": "type(contract INFT)"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2543:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFT_$437",
																"typeString": "contract INFT"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2562:13:8",
														"memberName": "walletOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 436,
														"src": "2543:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2543:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2511:79:8"
											},
											{
												"body": {
													"id": 722,
													"nodeType": "Block",
													"src": "2653:93:8",
													"statements": [
														{
															"expression": {
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 710,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2667:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 714,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 711,
																			"name": "tokenStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "2675:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																				"typeString": "uint256[] storage ref"
																			}
																		},
																		"id": 713,
																		"indexExpression": {
																			"id": 712,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "2687:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2675:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2667:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 715,
																	"name": "sharePerEach",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "2694:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2667:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 717,
															"nodeType": "ExpressionStatement",
															"src": "2667:39:8"
														},
														{
															"id": 721,
															"nodeType": "UncheckedBlock",
															"src": "2720:16:8",
															"statements": [
																{
																	"expression": {
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "2731:3:8",
																		"subExpression": {
																			"id": 718,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 703,
																			"src": "2733:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 720,
																	"nodeType": "ExpressionStatement",
																	"src": "2731:3:8"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 706,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "2628:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 707,
															"name": "tokensStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "2632:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2645:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2632:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 723,
												"initializationExpression": {
													"assignments": [
														703
													],
													"declarations": [
														{
															"constant": false,
															"id": 703,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2621:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 723,
															"src": "2613:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 702,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2613:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 705,
													"initialValue": {
														"hexValue": "30",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2625:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2613:13:8"
												},
												"nodeType": "ForStatement",
												"src": "2609:137:8"
											}
										]
									},
									"id": 725,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:2:8"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:0:8"
									},
									"scope": 726,
									"src": "2329:423:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 727,
							"src": "492:2262:8",
							"usedErrors": []
						}
					],
					"src": "32:2722:8"
				},
				"id": 8
			}
		}
	}
}